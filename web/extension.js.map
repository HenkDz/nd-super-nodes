{"version":3,"file":"extension.js","sources":["../frontend/src/services/LoraService.ts","../frontend/src/services/TemplateService.ts","../frontend/src/services/CivitAiService.ts","../frontend/src/nodes/SuperLoraNode.ts","../frontend/src/extension.ts"],"sourcesContent":["/**\n * LoRA management service\n */\n\nimport { LoraConfig } from '@/types';\n\nexport class LoraService {\n  private static instance: LoraService;\n  private availableLoras: string[] = [];\n  private loraCache: Map<string, any> = new Map();\n\n  static getInstance(): LoraService {\n    if (!LoraService.instance) {\n      LoraService.instance = new LoraService();\n    }\n    return LoraService.instance;\n  }\n\n  /**\n   * Initialize the service and load available LoRAs\n   */\n  async initialize(): Promise<void> {\n    try {\n      await this.refreshLoraList();\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to initialize LoRA service:', error);\n    }\n  }\n\n  /**\n   * Get list of available LoRA files\n   */\n  async getAvailableLoras(): Promise<string[]> {\n    if (this.availableLoras.length === 0) {\n      await this.refreshLoraList();\n    }\n    return this.availableLoras;\n  }\n\n  /**\n   * Refresh the list of available LoRAs from the backend\n   */\n  async refreshLoraList(): Promise<void> {\n    try {\n      // Call ComfyUI API to get LoRA files\n      const response = await fetch('/object_info');\n      const data = await response.json();\n      \n      // Extract LoRA list from the response\n      const loraLoader = data.LoraLoader;\n      if (loraLoader && loraLoader.input && loraLoader.input.required && loraLoader.input.required.lora_name) {\n        this.availableLoras = loraLoader.input.required.lora_name[0] || [];\n      } else {\n        // Fallback: try to get from folder_paths\n        const folderResponse = await fetch('/api/v1/folder_paths');\n        if (folderResponse.ok) {\n          const folderData = await folderResponse.json();\n          this.availableLoras = folderData.loras || [];\n        }\n      }\n      \n      console.log(`Super LoRA Loader: Found ${this.availableLoras.length} LoRAs`);\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to refresh LoRA list:', error);\n      this.availableLoras = [];\n    }\n  }\n\n  /**\n   * Create a new LoRA configuration with defaults\n   */\n  createLoraConfig(loraName: string = \"None\"): LoraConfig {\n    return {\n      lora: loraName,\n      enabled: true,\n      strength_model: 1.0,\n      strength_clip: 1.0,\n      trigger_word: '',\n      tag: 'General',\n      auto_populated: false\n    };\n  }\n\n  /**\n   * Validate a LoRA configuration\n   */\n  validateLoraConfig(config: LoraConfig): boolean {\n    if (!config || typeof config !== 'object') {\n      return false;\n    }\n\n    // Check required fields\n    if (typeof config.lora !== 'string' || typeof config.enabled !== 'boolean') {\n      return false;\n    }\n\n    // Validate strength values\n    const strengthModel = Number(config.strength_model);\n    const strengthClip = Number(config.strength_clip);\n    \n    if (isNaN(strengthModel) || isNaN(strengthClip)) {\n      return false;\n    }\n\n    if (strengthModel < 0 || strengthModel > 2 || strengthClip < 0 || strengthClip > 2) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if a LoRA is already in the configuration list\n   */\n  isDuplicateLora(configs: LoraConfig[], loraName: string): boolean {\n    return configs.some(config => config.lora === loraName && loraName !== \"None\");\n  }\n\n  /**\n   * Sort LoRA configurations by tag and name\n   */\n  sortLoraConfigs(configs: LoraConfig[]): LoraConfig[] {\n    return [...configs].sort((a, b) => {\n      // First sort by tag\n      if (a.tag !== b.tag) {\n        // \"General\" tag always comes first\n        if (a.tag === 'General') return -1;\n        if (b.tag === 'General') return 1;\n        return a.tag.localeCompare(b.tag);\n      }\n      \n      // Then sort by LoRA name\n      return a.lora.localeCompare(b.lora);\n    });\n  }\n\n  /**\n   * Group LoRA configurations by tag\n   */\n  groupLorasByTag(configs: LoraConfig[]): Map<string, LoraConfig[]> {\n    const groups = new Map<string, LoraConfig[]>();\n    \n    for (const config of configs) {\n      const tag = config.tag || 'General';\n      if (!groups.has(tag)) {\n        groups.set(tag, []);\n      }\n      groups.get(tag)!.push(config);\n    }\n    \n    return groups;\n  }\n\n  /**\n   * Get available tags from a list of LoRA configurations\n   */\n  getAvailableTags(configs: LoraConfig[]): string[] {\n    const tags = new Set<string>();\n    \n    for (const config of configs) {\n      tags.add(config.tag || 'General');\n    }\n    \n    return Array.from(tags).sort((a, b) => {\n      if (a === 'General') return -1;\n      if (b === 'General') return 1;\n      return a.localeCompare(b);\n    });\n  }\n\n  /**\n   * Get common tag suggestions\n   */\n  getCommonTags(): string[] {\n    return [\n      'General',\n      'Character',\n      'Style',\n      'Quality',\n      'Effect',\n      'Background',\n      'Clothing',\n      'Pose',\n      'Lighting'\n    ];\n  }\n\n  /**\n   * Convert LoRA configs to backend format\n   */\n  convertToBackendFormat(configs: LoraConfig[]): Record<string, any> {\n    const result: Record<string, any> = {};\n    \n    configs.forEach((config, index) => {\n      if (config.lora && config.lora !== \"None\") {\n        const key = `lora_${index + 1}`;\n        result[key] = {\n          lora: config.lora,\n          enabled: config.enabled,\n          strength_model: config.strength_model,\n          strength_clip: config.strength_clip,\n          trigger_word: config.trigger_word || '',\n          tag: config.tag || 'General'\n        };\n      }\n    });\n    \n    return result;\n  }\n\n  /**\n   * Extract trigger words from all enabled LoRAs\n   */\n  extractTriggerWords(configs: LoraConfig[]): string {\n    const triggerWords: string[] = [];\n    \n    for (const config of configs) {\n      if (config.enabled && config.trigger_word && config.trigger_word.trim()) {\n        triggerWords.push(config.trigger_word.trim());\n      }\n    }\n    \n    return triggerWords.join(', ');\n  }\n}\n","/**\n * Template management service\n */\n\nimport { LoraTemplate, LoraConfig } from '@/types';\n\nexport class TemplateService {\n  private static instance: TemplateService;\n  private templates: LoraTemplate[] = [];\n  private isLoaded: boolean = false;\n\n  static getInstance(): TemplateService {\n    if (!TemplateService.instance) {\n      TemplateService.instance = new TemplateService();\n    }\n    return TemplateService.instance;\n  }\n\n  /**\n   * Initialize the template service\n   */\n  async initialize(): Promise<void> {\n    if (!this.isLoaded) {\n      await this.loadTemplates();\n    }\n  }\n\n  /**\n   * Load templates from backend\n   */\n  async loadTemplates(): Promise<void> {\n    try {\n      const response = await fetch('/super_lora/templates', {\n        method: 'GET'\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const templates = data.templates ?? data ?? [];\n        // Normalize to array\n        this.templates = Array.isArray(templates) ? templates as any : [];\n        this.isLoaded = true;\n        console.log(`Super LoRA Loader: Loaded ${this.templates.length} templates`);\n      } else {\n        console.warn('Super LoRA Loader: Failed to load templates:', response.statusText);\n        this.templates = [];\n        this.isLoaded = true;\n      }\n    } catch (error) {\n      console.error('Super LoRA Loader: Error loading templates:', error);\n      this.templates = [];\n      this.isLoaded = true;\n    }\n  }\n\n  /**\n   * Get all available templates\n   */\n  async getTemplates(): Promise<LoraTemplate[]> {\n    if (!this.isLoaded) {\n      await this.loadTemplates();\n    }\n    return [...this.templates];\n  }\n\n  /**\n   * Save a new template\n   */\n  async saveTemplate(name: string, loraConfigs: LoraConfig[]): Promise<boolean> {\n    try {\n      // Filter out empty/invalid configs\n      const validConfigs = loraConfigs.filter(config => \n        config.lora && config.lora !== 'None'\n      );\n\n      if (validConfigs.length === 0) {\n        throw new Error('No valid LoRA configurations to save');\n      }\n\n      // Normalize before saving\n      const normalized = validConfigs.map(cfg => ({\n        lora: cfg.lora,\n        enabled: !!cfg.enabled,\n        strength_model: Number(cfg.strength_model ?? 1),\n        strength_clip: Number(cfg.strength_clip ?? cfg.strength_model ?? 1),\n        trigger_word: cfg.trigger_word ?? '',\n        tag: cfg.tag ?? 'General',\n        auto_populated: !!cfg.auto_populated\n      }));\n\n      // Prefer 'lora_configs' for backend, but backend also accepts 'loras'\n      const template: any = {\n        name,\n        version: '1.0',\n        lora_configs: normalized\n      };\n\n      const response = await fetch('/super_lora/templates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(template)\n      });\n\n      if (response.ok) {\n        // Reload templates to get the updated list\n        await this.loadTemplates();\n        console.log(`Super LoRA Loader: Template \"${name}\" saved successfully`);\n        return true;\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to save template \"${name}\":`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Load a template by name\n   */\n  async loadTemplate(name: string): Promise<LoraConfig[] | null> {\n    try {\n      const templates = await this.getTemplates();\n      const template: any = templates.find((t: any) => t && (t.name === name || t.id === name || t.title === name || t === name));\n      \n      const extractList = (tpl: any): any[] | null => {\n        if (!tpl) return null;\n        if (Array.isArray(tpl.loras)) return tpl.loras;\n        if (Array.isArray(tpl.items)) return tpl.items;\n        if (tpl.template) return extractList(tpl.template);\n        if (typeof tpl === 'string') {\n          // Might be a JSON string\n          try { const parsed = JSON.parse(tpl); return extractList(parsed); } catch {}\n        }\n        return null;\n      };\n\n      // Helper to fetch details by name\n      const fetchByName = async (): Promise<LoraConfig[] | null> => {\n        const tryParse = (data: any): LoraConfig[] | null => {\n          const list = extractList(data);\n          if (!list) return null;\n          const valid = list.filter((cfg: any) => this.validateLoraConfig(cfg));\n          return valid;\n        };\n        try {\n          // Attempt query param form\n          let resp = await fetch(`/super_lora/templates?name=${encodeURIComponent(name)}`);\n          if (resp.ok) {\n            const data = await resp.json();\n            const out = tryParse(data);\n            if (out) return out;\n          }\n        } catch {}\n        try {\n          // Attempt REST-style path form\n          const resp2 = await fetch(`/super_lora/templates/${encodeURIComponent(name)}`);\n          if (resp2.ok) {\n            const data2 = await resp2.json();\n            const out2 = tryParse(data2);\n            if (out2) return out2;\n          }\n        } catch {}\n        return null;\n      };\n\n      if (!template) {\n        console.warn(`Super LoRA Loader: Template \"${name}\" not found in cache, trying GET by name`);\n        return await fetchByName();\n      }\n\n      let list: any[] | null = extractList(template);\n      if (!list) {\n        const fetched = await fetchByName();\n        if (!fetched) {\n          console.warn(`Super LoRA Loader: Template \"${name}\" has no loras/items array`);\n        }\n        return fetched;\n      }\n\n      const normalize = (cfg: any) => ({\n        lora: cfg.lora ?? cfg.file ?? cfg.name ?? '',\n        enabled: (cfg.enabled !== undefined) ? !!cfg.enabled : (cfg.on === undefined ? true : !!cfg.on),\n        strength_model: (cfg.strength_model !== undefined) ? Number(cfg.strength_model) : Number(cfg.strength ?? cfg.value ?? 1),\n        strength_clip: (cfg.strength_clip !== undefined) ? Number(cfg.strength_clip) : Number(cfg.strengthTwo ?? cfg.clip_strength ?? cfg.strength_model ?? cfg.strength ?? 1),\n        trigger_word: cfg.trigger_word ?? cfg.triggerWord ?? cfg.trigger ?? '',\n        tag: cfg.tag ?? 'General',\n        auto_populated: cfg.auto_populated ?? cfg._autoPopulatedTriggerWord ?? false\n      });\n\n      const normalized = list.map(normalize);\n      const validConfigs = normalized.filter(config => this.validateLoraConfig(config));\n       \n      if (validConfigs.length !== list.length) {\n        console.warn(`Super LoRA Loader: Some LoRA configs in template \"${name}\" are invalid`);\n      }\n\n      console.log(`Super LoRA Loader: Loaded template \"${name}\" with ${validConfigs.length} LoRAs`);\n      return validConfigs;\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to load template \"${name}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Delete a template\n   */\n  async deleteTemplate(name: string): Promise<boolean> {\n    try {\n      // Try RESTful DELETE by name first\n      let response = await fetch(`/super_lora/templates/${encodeURIComponent(name)}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        // Fallback 1: DELETE with JSON body (older clients)\n        response = await fetch('/super_lora/templates', {\n          method: 'DELETE',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ name })\n        });\n      }\n\n      if (!response.ok && response.status === 405) {\n        // Fallback 2: POST to a delete endpoint\n        response = await fetch('/super_lora/templates/delete', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ name })\n        });\n      }\n\n      if (!response.ok) {\n        // Fallback 3: POST action flag\n        response = await fetch('/super_lora/templates', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ action: 'delete', name })\n        });\n      }\n\n      if (response.ok) {\n        // Verify by reloading list\n        await this.loadTemplates();\n        const stillExists = (this.templates || []).some((t: any) => (t && t.name) ? t.name === name : t === name);\n        if (stillExists) {\n          console.warn(`Super LoRA Loader: Server responded OK but template still present: ${name}`);\n          return false;\n        }\n        console.log(`Super LoRA Loader: Template \"${name}\" deleted successfully`);\n        return true;\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to delete template \"${name}\":`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if a template name already exists\n   */\n  async templateExists(name: string): Promise<boolean> {\n    const templates = await this.getTemplates();\n    return templates.some(t => t.name === name);\n  }\n\n  /**\n   * Get template names for UI selection\n   */\n  async getTemplateNames(): Promise<string[]> {\n    const templates = await this.getTemplates();\n    // Accept arrays of names or arrays of objects\n    return templates.map((t: any) => (t && t.name) ? t.name : String(t)).sort();\n  }\n\n  /**\n   * Validate a LoRA configuration\n   */\n  private validateLoraConfig(config: LoraConfig): boolean {\n    if (!config || typeof config !== 'object') {\n      return false;\n    }\n\n    // Check required fields\n    if (!config.lora || typeof config.enabled !== 'boolean') {\n      return false;\n    }\n\n    // Validate strength values\n    const strengthModel = Number(config.strength_model);\n    const strengthClip = Number(config.strength_clip);\n    \n    if (isNaN(strengthModel) || isNaN(strengthClip)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Export template to JSON string\n   */\n  async exportTemplate(name: string): Promise<string | null> {\n    try {\n      const templates = await this.getTemplates();\n      const template = templates.find(t => t.name === name);\n      \n      if (!template) {\n        return null;\n      }\n\n      return JSON.stringify(template, null, 2);\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to export template \"${name}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Import template from JSON string\n   */\n  async importTemplate(jsonString: string): Promise<boolean> {\n    try {\n      const template = JSON.parse(jsonString) as LoraTemplate;\n      \n      // Validate template structure\n      if (!template.name || !template.loras || !Array.isArray(template.loras)) {\n        throw new Error('Invalid template format');\n      }\n\n      // Check if template already exists\n      if (await this.templateExists(template.name)) {\n        throw new Error(`Template \"${template.name}\" already exists`);\n      }\n\n      return await this.saveTemplate(template.name, template.loras);\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to import template:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Rename an existing template\n   */\n  async renameTemplate(oldName: string, newName: string): Promise<boolean> {\n    try {\n      const src = (oldName || '').trim();\n      const dst = (newName || '').trim();\n      if (!src || !dst) return false;\n      if (src === dst) return true;\n\n      // Ensure destination does not already exist\n      if (await this.templateExists(dst)) {\n        throw new Error(`Template \"${dst}\" already exists`);\n      }\n\n      // Load source template configs\n      const configs = await this.loadTemplate(src);\n      if (!configs || configs.length === 0) {\n        throw new Error(`Template \"${src}\" not found or empty`);\n      }\n\n      // Save under new name\n      const saved = await this.saveTemplate(dst, configs);\n      if (!saved) return false;\n\n      // Delete old\n      await this.deleteTemplate(src);\n\n      // Refresh list\n      await this.loadTemplates();\n      return true;\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to rename template:', error);\n      return false;\n    }\n  }\n}\n","/**\n * CivitAI API integration service\n */\n\nimport { CivitAiModelInfo } from '@/types';\n\nexport class CivitAiService {\n  private static instance: CivitAiService;\n  private cache: Map<string, CivitAiModelInfo> = new Map();\n  private pendingRequests: Map<string, Promise<CivitAiModelInfo | null>> = new Map();\n\n  static getInstance(): CivitAiService {\n    if (!CivitAiService.instance) {\n      CivitAiService.instance = new CivitAiService();\n    }\n    return CivitAiService.instance;\n  }\n\n  /**\n   * Get trigger words for a LoRA file\n   */\n  async getTriggerWords(loraFileName: string): Promise<string[]> {\n    try {\n      const modelInfo = await this.getModelInfo(loraFileName);\n      if (!modelInfo) {\n        return [];\n      }\n\n      return this.extractTriggerWordsFromModelInfo(modelInfo);\n    } catch (error) {\n      console.warn(`Super LoRA Loader: Failed to get trigger words for ${loraFileName}:`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Get model information from CivitAI\n   */\n  async getModelInfo(loraFileName: string): Promise<CivitAiModelInfo | null> {\n    // Check cache first\n    if (this.cache.has(loraFileName)) {\n      return this.cache.get(loraFileName)!;\n    }\n\n    // Check if request is already pending\n    if (this.pendingRequests.has(loraFileName)) {\n      return await this.pendingRequests.get(loraFileName)!;\n    }\n\n    // Create new request\n    const requestPromise = this.fetchModelInfo(loraFileName);\n    this.pendingRequests.set(loraFileName, requestPromise);\n\n    try {\n      const result = await requestPromise;\n      this.pendingRequests.delete(loraFileName);\n      \n      if (result) {\n        this.cache.set(loraFileName, result);\n      }\n      \n      return result;\n    } catch (error) {\n      this.pendingRequests.delete(loraFileName);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch model info from backend API\n   */\n  private async fetchModelInfo(loraFileName: string): Promise<CivitAiModelInfo | null> {\n    try {\n      // Call our backend endpoint that handles CivitAI integration\n      const response = await fetch('/super_lora/civitai_info', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          lora_filename: loraFileName\n        })\n      });\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          // Model not found on CivitAI\n          return null;\n        }\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      if (data.error) {\n        console.warn(`Super LoRA Loader: CivitAI API error for ${loraFileName}:`, data.error);\n        return null;\n      }\n\n      return data;\n    } catch (error) {\n      console.warn(`Super LoRA Loader: Failed to fetch model info for ${loraFileName}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Extract trigger words from CivitAI model info\n   */\n  private extractTriggerWordsFromModelInfo(modelInfo: CivitAiModelInfo): string[] {\n    const triggerWords: string[] = [];\n\n    // Extract from trainedWords array\n    if (modelInfo.trainedWords && Array.isArray(modelInfo.trainedWords)) {\n      for (const item of modelInfo.trainedWords) {\n        if (typeof item === 'string') {\n          triggerWords.push(item);\n        } else if (item && typeof item === 'object' && 'word' in item) {\n          triggerWords.push(item.word);\n        }\n      }\n    }\n\n    // Limit to top 3 trigger words\n    return triggerWords.slice(0, 3);\n  }\n\n  /**\n   * Clear the cache\n   */\n  clearCache(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Get cache size for debugging\n   */\n  getCacheSize(): number {\n    return this.cache.size;\n  }\n\n  /**\n   * Check if auto-fetch is enabled in settings\n   */\n  private isAutoFetchEnabled(): boolean {\n    // This would check the global ComfyUI settings\n    // For now, we'll assume it's enabled by default\n    try {\n      const app = (window as any).app;\n      if (app && app.ui && app.ui.settings) {\n        return app.ui.settings.getSettingValue('superLora.autoFetchTriggerWords', true);\n      }\n    } catch (error) {\n      console.warn('Super LoRA Loader: Failed to check auto-fetch setting:', error);\n    }\n    \n    return true;\n  }\n\n  /**\n   * Auto-populate trigger words for a LoRA if enabled\n   */\n  async autoPopulateTriggerWords(loraFileName: string): Promise<string> {\n    if (!this.isAutoFetchEnabled() || !loraFileName || loraFileName === 'None') {\n      return '';\n    }\n\n    try {\n      const triggerWords = await this.getTriggerWords(loraFileName);\n      return triggerWords.length > 0 ? triggerWords[0] : '';\n    } catch (error) {\n      console.warn(`Super LoRA Loader: Auto-populate failed for ${loraFileName}:`, error);\n      return '';\n    }\n  }\n}\n","/**\n * Super LoRA Loader Node - Advanced Implementation\n * Based on rgthree's sophisticated custom widget system\n */\n\nimport { LoraConfig } from '@/types';\nimport { LoraService } from '@/services/LoraService';\nimport { TemplateService } from '@/services/TemplateService';\nimport { CivitAiService } from '@/services/CivitAiService';\n\n// ComfyUI imports\nimport { app } from '/scripts/app.js';\n\n// Widget drawing utilities (simplified versions of rgthree utilities)\nconst LiteGraph = (window as any).LiteGraph;\n\n// Base widget class for custom drawing\nclass SuperLoraBaseWidget {\n  public type: string;\n  public value: any;\n  public hitAreas: any;\n  \n  constructor(public name: string) {\n    this.type = \"custom\";\n    this.value = {};\n    this.hitAreas = {};\n  }\n\n  draw(ctx: any, node: any, w: number, posY: number, height: number): void {\n    // Override in subclasses\n  }\n\n  onMouseDown(event: any, pos: any, node: any): boolean {\n    return this.handleHitAreas(event, pos, node, 'onDown');\n  }\n\n  onClick(event: any, pos: any, node: any): boolean {\n    return this.handleHitAreas(event, pos, node, 'onClick');\n  }\n\n  private handleHitAreas(event: any, pos: any, node: any, handler: string): boolean {\n    console.log(`[${this.constructor.name}] Click at: [${pos[0]}, ${pos[1]}], Handler: ${handler}`);\n\n    const entries = Object.entries(this.hitAreas as any).sort((a: any, b: any) => {\n      const pa = (a[1] && a[1].priority) || 0;\n      const pb = (b[1] && b[1].priority) || 0;\n      return pb - pa; // higher priority first\n    });\n\n    for (const [key, area] of entries) {\n      const bounds = area.bounds;\n      console.log(`  Checking ${key}: bounds=${bounds}`);\n\n      if (bounds && bounds.length >= 4 && this.isInBounds(pos, bounds)) {\n        // Prefer exact handler, but gracefully fallback to the other one\n        const fn = area[handler] || (handler === 'onDown' ? area.onClick : area.onDown);\n        if (fn) {\n          console.log(`  ✓ HIT: ${key} - calling ${fn === area[handler] ? handler : (handler === 'onDown' ? 'onClick' : 'onDown')}`);\n          return fn.call(this, event, pos, node);\n        }\n      }\n    }\n    console.log('  ✗ No hit areas matched');\n    return false;\n  }\n\n  private isInBounds(pos: any, bounds: number[]): boolean {\n    if (bounds.length < 4) return false;\n    const [x, y, width, height] = bounds;\n    return pos[0] >= x && pos[0] <= x + width && \n           pos[1] >= y && pos[1] <= y + height;\n  }\n\n  computeSize(): [number, number] {\n    return [200, 25];\n  }\n}\n\n// Header widget with master controls\nclass SuperLoraHeaderWidget extends SuperLoraBaseWidget {\n  constructor() {\n    super(\"SuperLoraHeaderWidget\");\n    this.value = { type: \"SuperLoraHeaderWidget\" };\n    this.hitAreas = {\n      toggleAll: { bounds: [0, 0], onDown: this.onToggleAllDown },\n      addLora: { bounds: [0, 0], onDown: this.onAddLoraDown },\n      saveTemplate: { bounds: [0, 0], onDown: this.onSaveTemplateDown },\n      loadTemplate: { bounds: [0, 0], onDown: this.onLoadTemplateDown },\n      settings: { bounds: [0, 0], onDown: this.onSettingsDown }\n    };\n  }\n\n  draw(ctx: any, node: any, w: number, posY: number, height: number): void {\n    const margin = 8;\n    const buttonHeight = 22;\n    const buttonSpacing = 6;\n    let posX = margin;\n\n    ctx.save();\n    \n    // Background gradient\n    const gradient = ctx.createLinearGradient(0, posY, 0, posY + height);\n    gradient.addColorStop(0, \"#3a3a3a\");\n    gradient.addColorStop(1, \"#2a2a2a\");\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, posY, w, height);\n    \n    // Border\n    ctx.strokeStyle = \"#555\";\n    ctx.lineWidth = 1;\n    ctx.strokeRect(0, posY, w, height);\n    \n    const midY = posY + height / 2;\n    ctx.font = \"11px 'Segoe UI', Arial, sans-serif\";\n    ctx.textBaseline = \"middle\";\n\n    // Helper function to draw rounded button\n    const drawButton = (x: number, width: number, color: string, text: string, icon?: string) => {\n      // Button background with rounded corners\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.roundRect(x, posY + (height - buttonHeight) / 2, width, buttonHeight, 3);\n      ctx.fill();\n      \n      // Button border\n      ctx.strokeStyle = \"rgba(255,255,255,0.2)\";\n      ctx.lineWidth = 1;\n      ctx.stroke();\n      \n      // Button text\n      ctx.fillStyle = \"#fff\";\n      ctx.textAlign = \"center\";\n      const textX = x + width / 2;\n      if (icon) {\n        ctx.fillText(icon + \" \" + text, textX, midY);\n      } else {\n        ctx.fillText(text, textX, midY);\n      }\n    };\n\n    // Responsive button layout\n    const allState = this.getAllLorasState(node);\n    const availableWidth = w - (margin * 2);\n    const buttons = [\n      { id: 'toggleAll', color: allState ? \"#4CAF50\" : \"#666\", text: \"Toggle All\", shortText: \"Toggle\", icon: \"⏯️\", priority: 1 },\n      { id: 'addLora', color: \"#2196F3\", text: \"Add LoRA\", shortText: \"Add\", icon: \"➕\", priority: 2 },\n      { id: 'saveTemplate', color: \"#FF9800\", text: \"Save Set\", shortText: \"Save\", icon: \"💾\", priority: 3 },\n      { id: 'loadTemplate', color: \"#9C27B0\", text: \"Load Set\", shortText: \"Load\", icon: \"📂\", priority: 4 },\n      { id: 'settings', color: \"#607D8B\", text: \"Settings\", shortText: \"Set\", icon: \"⚙️\", priority: 5 }\n    ];\n\n    // Calculate responsive button sizes\n    const totalSpacing = buttonSpacing * (buttons.length - 1);\n    const buttonWidth = Math.max(40, (availableWidth - totalSpacing) / buttons.length);\n    const useShortText = buttonWidth < 60;\n    const useIconOnly = buttonWidth < 45;\n\n    buttons.forEach((btn, index) => {\n      let displayText = useIconOnly ? btn.icon : (useShortText ? btn.shortText : btn.text);\n\n      drawButton(posX, buttonWidth, btn.color, displayText);\n      this.hitAreas[btn.id].bounds = [posX, 0, buttonWidth, height];\n      posX += buttonWidth + buttonSpacing;\n    });\n\n    ctx.restore();\n  }\n\n  private getAllLorasState(node: any): boolean {\n    if (!node.customWidgets) return false;\n    const loraWidgets = node.customWidgets.filter((w: any) => w instanceof SuperLoraWidget);\n    return loraWidgets.length > 0 && loraWidgets.every((w: any) => w.value.enabled);\n  }\n\n  onToggleAllDown = (event: any, pos: any, node: any): boolean => {\n    const allState = this.getAllLorasState(node);\n    if (!node.customWidgets) return true;\n    const loraWidgets = node.customWidgets.filter((w: any) => w instanceof SuperLoraWidget);\n    loraWidgets.forEach((w: any) => w.value.enabled = !allState);\n    node.setDirtyCanvas(true, true);\n    return true;\n  };\n\n  onAddLoraDown = (event: any, pos: any, node: any): boolean => {\n    SuperLoraNode.showLoraSelector(node, undefined, event);\n    return true;\n  };\n\n  onSaveTemplateDown = (event: any, pos: any, node: any): boolean => {\n    // Use modern overlay input instead of prompt\n    SuperLoraNode.showNameOverlay({\n      title: 'Save Template',\n      placeholder: 'Template name...',\n      initial: 'My LoRA Set',\n      submitLabel: 'Save',\n      onCommit: async (templateName: string) => {\n        const name = (templateName || '').trim();\n        if (!name) {\n          SuperLoraNode.showToast('Please enter a template name', 'warning');\n          return;\n        }\n\n        const configs = SuperLoraNode.getLoraConfigs(node);\n        const validConfigs = configs.filter(config => config.lora && config.lora !== 'None');\n        if (validConfigs.length === 0) {\n          SuperLoraNode.showToast('⚠️ No valid LoRAs to save in template', 'warning');\n          return;\n        }\n\n        try {\n          // Optional: warn if name exists\n          const exists = await SuperLoraNode.templateService.templateExists(name);\n          if (exists) {\n            SuperLoraNode.showToast(`⚠️ Template \"${name}\" already exists. Choose a different name.`, 'warning');\n            return;\n          }\n\n          const success = await SuperLoraNode.templateService.saveTemplate(name, validConfigs);\n          if (success) {\n            SuperLoraNode.showToast(`✅ Template \"${name}\" saved successfully!`, 'success');\n          } else {\n            SuperLoraNode.showToast('❌ Failed to save template. Please try again.', 'error');\n          }\n        } catch (error) {\n          console.error('Template save error:', error);\n          SuperLoraNode.showToast('❌ Error saving template. Check console for details.', 'error');\n        }\n      }\n    });\n    return true;\n  };\n\n  onLoadTemplateDown = (event: any, pos: any, node: any): boolean => {\n    SuperLoraNode.showLoadTemplateDialog(node, event);\n    return true;\n  };\n\n  onSettingsDown = (event: any, pos: any, node: any): boolean => {\n    SuperLoraNode.showSettingsDialog(node, event);\n    return true;\n  };\n\n  computeSize(): [number, number] {\n    return [450, 35];\n  }\n}\n\n// Tag header widget (collapsible)\nclass SuperLoraTagWidget extends SuperLoraBaseWidget {\n  constructor(public tag: string) {\n    super(`tag_${tag}`);\n    this.value = { type: \"SuperLoraTagWidget\", tag, collapsed: false };\n    this.hitAreas = {\n      toggle: { bounds: [0, 0], onDown: this.onToggleDown, priority: 10 },\n      collapse: { bounds: [0, 0], onDown: this.onCollapseDown, priority: 0 }\n    };\n  }\n\n  draw(ctx: any, node: any, w: number, posY: number, height: number): void {\n    const margin = 10;\n    let posX = margin;\n\n    ctx.save();\n    // Group container background\n    ctx.fillStyle = \"#2d2d2d\";\n    ctx.fillRect(0, posY, w, height);\n    ctx.strokeStyle = \"#444\";\n    ctx.lineWidth = 1;\n    ctx.strokeRect(0, posY, w, height);\n    \n    const midY = height / 2; // Relative middle Y\n    const lorasInTag = this.getLorasInTag(node);\n    const allEnabled = lorasInTag.length > 0 && lorasInTag.every((w: any) => w.value.enabled);\n\n    // Collapse arrow\n    ctx.fillStyle = \"#fff\";\n    ctx.font = \"12px Arial\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.value.collapsed ? \"▶\" : \"▼\", posX, posY + midY);\n    // Make the entire banner clickable for collapse\n    this.hitAreas.collapse.bounds = [0, 0, w, height];\n    posX += 20;\n\n    // Tag toggle\n    ctx.fillStyle = allEnabled ? \"#4CAF50\" : \"#666\";\n    ctx.beginPath(); ctx.roundRect(posX, posY + 4, 20, height - 8, 3); ctx.fill();\n    ctx.fillStyle = \"#fff\";\n    ctx.fillText(allEnabled ? \"✓\" : \"○\", posX + 6, posY + midY);\n    this.hitAreas.toggle.bounds = [posX, 0, 20, height];\n    posX += 30;\n\n    // Tag name and count\n    ctx.fillStyle = \"#fff\";\n    ctx.fillText(`${this.tag} (${lorasInTag.length})`, posX, posY + midY);\n\n    ctx.restore();\n  }\n\n  private getLorasInTag(node: any): any[] {\n    if (!node.customWidgets) return [];\n    return node.customWidgets.filter((w: any) => \n      w instanceof SuperLoraWidget && w.value.tag === this.tag\n    );\n  }\n\n  onCollapseDown = (event: any, pos: any, node: any): boolean => {\n    this.value.collapsed = !this.value.collapsed;\n    SuperLoraNode.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  onToggleDown = (event: any, pos: any, node: any): boolean => {\n    const lorasInTag = this.getLorasInTag(node);\n    const allEnabled = lorasInTag.every((w: any) => w.value.enabled);\n    lorasInTag.forEach((w: any) => w.value.enabled = !allEnabled);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  computeSize(): [number, number] {\n    return [400, 25];\n  }\n\n  isCollapsed(): boolean {\n    return this.value.collapsed;\n  }\n}\n\n// Individual LoRA widget with all controls\nclass SuperLoraWidget extends SuperLoraBaseWidget {\n  constructor(name: string) {\n    super(name);\n    this.value = {\n      lora: \"None\",\n      enabled: true,\n      strength: 1.0,\n      strengthClip: 1.0,\n      triggerWords: \"\",\n      tag: \"General\",\n      autoFetched: false\n    };\n    this.hitAreas = {\n      enabled: { bounds: [0, 0], onDown: this.onEnabledDown, priority: 60 },\n      lora: { bounds: [0, 0], onClick: this.onLoraClick, priority: 10 },\n      tag: { bounds: [0, 0], onClick: this.onTagClick, priority: 20 },\n      strength: { bounds: [0, 0], onClick: this.onStrengthClick, priority: 80 },\n      strengthDown: { bounds: [0, 0], onClick: this.onStrengthDownClick, priority: 90 },\n      strengthUp: { bounds: [0, 0], onClick: this.onStrengthUpClick, priority: 90 },\n      triggerWords: { bounds: [0, 0], onClick: this.onTriggerWordsClick, priority: 85 },\n      remove: { bounds: [0, 0], onClick: this.onRemoveClick, priority: 100 },\n      moveUp: { bounds: [0, 0], onClick: this.onMoveUpClick, priority: 70 },\n      moveDown: { bounds: [0, 0], onClick: this.onMoveDownClick, priority: 70 }\n    };\n  }\n\n  draw(ctx: any, node: any, w: number, posY: number, height: number): void {\n    const margin = 8;\n    const rowHeight = 28;\n\n    ctx.save();\n    \n    // Main background with rounded corners and subtle gradient\n    const gradient = ctx.createLinearGradient(0, posY, 0, posY + height);\n    gradient.addColorStop(0, this.value.enabled ? \"#4a4a4a\" : \"#2a2a2a\");\n    gradient.addColorStop(1, this.value.enabled ? \"#3a3a3a\" : \"#1a1a1a\");\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.roundRect(margin, posY + 2, w - margin * 2, height - 4, 6);\n    ctx.fill();\n    \n    // Border\n    ctx.strokeStyle = this.value.enabled ? \"#666\" : \"#444\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n    \n    // Disabled overlay\n    if (!this.value.enabled) {\n      ctx.fillStyle = \"rgba(0,0,0,0.4)\";\n      ctx.fill();\n    }\n\n    ctx.font = \"11px 'Segoe UI', Arial, sans-serif\";\n    ctx.textBaseline = \"middle\";\n    \n    // Vertical layout: top padding when two rows, centered when single row\n    const topPad = node.properties?.showTriggerWords ? 4 : Math.max(4, Math.floor((height - rowHeight) / 2));\n    let currentY = posY + topPad;\n\n    // First row: Enable toggle, LoRA name, and controls\n    this.drawFirstRow(ctx, node, w, currentY, rowHeight, height);\n    // Single-row compact layout: no second row drawing\n\n    ctx.restore();\n  }\n\n  private drawFirstRow(ctx: any, node: any, w: number, posY: number, rowHeight: number, fullHeight: number): void {\n    const margin = 8;\n    let posX = margin + 6;\n    const midY = rowHeight / 2; // Relative middle Y\n\n    // Enable toggle (modern rounded toggle) - square like + and - buttons\n    const toggleSize = 20;\n    const toggleY = (rowHeight - toggleSize) / 2; // center align\n    ctx.fillStyle = this.value.enabled ? \"#4CAF50\" : \"#666\";\n    ctx.beginPath();\n    // Use absolute Y for drawing\n    ctx.roundRect(posX, posY + toggleY, toggleSize, toggleSize, 2);\n    ctx.fill();\n     \n    ctx.fillStyle = \"#fff\";\n    ctx.textAlign = \"center\";\n    ctx.font = \"12px Arial\";\n    // Use absolute Y for drawing\n    ctx.fillText(this.value.enabled ? \"✓\" : \"\", posX + toggleSize / 2, posY + midY);\n    // Use RELATIVE Y for hitbox - smaller to avoid overlap with other controls\n    this.hitAreas.enabled.bounds = [posX, 0, toggleSize, fullHeight];\n    posX += toggleSize + 8; // More spacing after toggle\n\n    // Dimensions & control visibility\n    const loraWidgets = node.customWidgets?.filter((w: any) => w instanceof SuperLoraWidget) || [];\n    const indexInLoras = loraWidgets.indexOf(this as any);\n    const lastIndex = loraWidgets.length - 1;\n    const showMoveArrows = (loraWidgets.length > 1) && (node?.properties?.showMoveArrows !== false);\n    const showStrength = node?.properties?.showStrengthControls !== false;\n    const showRemove = node?.properties?.showRemoveButton !== false;\n\n    const arrowSize = 20;\n    const strengthWidth = 50;\n    const btnSize = 20;\n    const removeSize = 20;\n    const gapSmall = 2;\n    const gap = 8;\n\n    // Dynamic right-to-left placement\n    const rightEdge = node.size[0] - margin;\n    let cursorX = rightEdge;\n    let removeX = -9999;\n    let plusX = -9999;\n    let minusX = -9999;\n    let strengthX = -9999;\n    let upX = -9999;\n    let downX = -9999;\n\n    if (showRemove) {\n      cursorX -= removeSize; removeX = cursorX - gap; cursorX -= gap;\n    }\n    if (showStrength) {\n      cursorX -= btnSize; plusX = cursorX - gap; cursorX -= gapSmall;\n      cursorX -= strengthWidth; strengthX = cursorX - gap; cursorX -= gapSmall;\n      cursorX -= btnSize; minusX = cursorX - gap; cursorX -= gap;\n    }\n    if (showMoveArrows) {\n      const arrowRightStart = showStrength ? (minusX - gap) : (showRemove ? (removeX - gap) : (rightEdge - gap));\n      // Reserve an extra small gap to the right of UP button\n      upX = arrowRightStart - arrowSize - 4;\n      downX = upX - (arrowSize + 2);\n      cursorX -= gap;\n    }\n\n    // Tag icon before name (if tags enabled)\n    if (node?.properties?.enableTags && node?.properties?.showTagChip !== false) {\n      const iconSize = 20;\n      const iconY = posY + Math.floor((rowHeight - iconSize) / 2);\n      ctx.fillStyle = this.value.enabled ? \"#3d5afe\" : \"#555\";\n      ctx.beginPath(); ctx.roundRect(posX, iconY, iconSize, iconSize, 2); ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.textBaseline = \"middle\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"🏷\", posX + iconSize / 2, posY + midY);\n      this.hitAreas.tag.bounds = [posX, 0, iconSize, fullHeight];\n      posX += iconSize + 6;\n      ctx.font = \"12px 'Segoe UI', Arial, sans-serif\";\n    } else {\n      this.hitAreas.tag.bounds = [0,0,0,0];\n    }\n\n    // Compute LoRA name width as the space left\n    const loraLeft = posX;\n    const rightMost = [\n      showMoveArrows ? downX : null,\n      showStrength ? minusX : null,\n      showRemove ? removeX : null\n    ].filter(v => typeof v === 'number') as number[];\n    const loraMaxRight = (rightMost.length ? Math.min(...rightMost) : rightEdge) - gap;\n    const loraWidth = Math.max(100, loraMaxRight - loraLeft);\n\n    const showTriggers = !!(node.properties && node.properties.showTriggerWords);\n    // Split text slot into name (left) and trigger/placeholder (right) when enabled\n    const nameWidth = showTriggers ? Math.max(80, Math.floor(loraWidth * 0.6)) : loraWidth;\n    const trigWidth = showTriggers ? (loraWidth - nameWidth) : 0;\n\n    // Draw LoRA name (left)\n    ctx.textAlign = \"left\";\n    ctx.font = \"12px 'Segoe UI', Arial, sans-serif\";\n    ctx.fillStyle = this.value.enabled ? \"#fff\" : \"#888\";\n    const loraText = this.value.lora === \"None\" ? \"Click to select LoRA...\" : this.value.lora;\n    const loraDisplay = this.truncateText(ctx, loraText, nameWidth);\n    ctx.fillText(loraDisplay, loraLeft, posY + midY);\n    this.hitAreas.lora.bounds = [loraLeft, 0, nameWidth, fullHeight];\n\n    // Dim subsequent controls when disabled (keep remove at full opacity)\n    const controlsAlpha = this.value.enabled ? 1 : 0.55;\n    ctx.save();\n    ctx.globalAlpha *= controlsAlpha;\n\n    // Draw trigger text or placeholder (right) if setting enabled\n    const triggerLeft = loraLeft + nameWidth;\n    if (showTriggers && trigWidth > 0) {\n      const hasTrigger = !!(this.value.triggerWords && String(this.value.triggerWords).trim());\n      const pillH = 20;\n      const pillY = posY + Math.floor((rowHeight - pillH) / 2);\n      ctx.fillStyle = \"#2f2f2f\";\n      ctx.beginPath(); ctx.roundRect(triggerLeft, pillY, trigWidth, pillH, 3); ctx.fill();\n      const padX = 6;\n      ctx.textAlign = \"left\";\n      ctx.font = \"10px 'Segoe UI', Arial, sans-serif\";\n      if (hasTrigger) {\n        ctx.fillStyle = this.value.enabled ? \"#fff\" : \"#aaa\";\n        const trigDisplay = this.truncateText(ctx, String(this.value.triggerWords), trigWidth - padX * 2);\n        ctx.fillText(trigDisplay, triggerLeft + padX, posY + midY);\n      } else {\n        ctx.fillStyle = \"#888\";\n        const placeholder = \"Click to add trigger words...\";\n        const phDisplay = this.truncateText(ctx, placeholder, trigWidth - padX * 2);\n        ctx.fillText(phDisplay, triggerLeft + padX, posY + midY);\n      }\n      this.hitAreas.triggerWords.bounds = [triggerLeft, 0, trigWidth, fullHeight];\n    } else {\n      // Disabled by settings: no trigger area\n      this.hitAreas.triggerWords.bounds = [0, 0, 0, 0];\n    }\n\n    // Draw arrows (with disable state for first/last) with gap before minus\n    if (showMoveArrows && node?.properties?.showMoveArrows !== false) {\n      const arrowY = (rowHeight - arrowSize) / 2;\n      const disableDown = indexInLoras === lastIndex;\n      const disableUp = indexInLoras === 0;\n\n      // Down\n      ctx.globalAlpha = (controlsAlpha) * (disableDown ? 0.35 : 1.0);\n      ctx.fillStyle = \"#555\"; ctx.beginPath();\n      ctx.roundRect(downX, posY + arrowY, arrowSize, arrowSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"▼\", downX + arrowSize / 2, posY + midY);\n      this.hitAreas.moveDown.bounds = disableDown ? [0, 0, 0, 0] : [downX, 0, arrowSize, fullHeight];\n\n      // Up\n      ctx.globalAlpha = (controlsAlpha) * (disableUp ? 0.35 : 1.0);\n      ctx.fillStyle = \"#555\"; ctx.beginPath();\n      ctx.roundRect(upX, posY + arrowY, arrowSize, arrowSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"▲\", upX + arrowSize / 2, posY + midY);\n      this.hitAreas.moveUp.bounds = disableUp ? [0, 0, 0, 0] : [upX, 0, arrowSize, fullHeight];\n\n      ctx.globalAlpha = controlsAlpha;\n    } else {\n      this.hitAreas.moveUp.bounds = [0, 0, 0, 0];\n      this.hitAreas.moveDown.bounds = [0, 0, 0, 0];\n    }\n\n    // Draw minus (respect strength visibility)\n    const btnY = (rowHeight - btnSize) / 2;\n    if (showStrength) {\n      ctx.fillStyle = \"#666\"; ctx.beginPath();\n      ctx.roundRect(minusX, posY + btnY, btnSize, btnSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"-\", minusX + btnSize / 2, posY + midY);\n      this.hitAreas.strengthDown.bounds = [minusX, 0, btnSize, fullHeight];\n    } else {\n      this.hitAreas.strengthDown.bounds = [0,0,0,0];\n    }\n\n    // Draw strength\n    if (node?.properties?.showStrengthControls !== false) {\n      const strengthY = (rowHeight - 20) / 2;\n      ctx.fillStyle = this.value.enabled ? \"#FF9800\" : \"#666\"; ctx.beginPath();\n      ctx.roundRect(strengthX, posY + strengthY, strengthWidth, 20, 3);\n      ctx.fill();\n      ctx.fillStyle = this.value.enabled ? \"#fff\" : \"#ddd\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(this.value.strength.toFixed(2), strengthX + strengthWidth / 2, posY + midY);\n      this.hitAreas.strength.bounds = [strengthX, 0, strengthWidth, fullHeight];\n    } else {\n      this.hitAreas.strength.bounds = [0,0,0,0];\n    }\n\n    // Draw plus\n    if (node?.properties?.showStrengthControls !== false) {\n      ctx.fillStyle = \"#666\"; ctx.beginPath();\n      ctx.roundRect(plusX, posY + btnY, btnSize, btnSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"+\", plusX + btnSize / 2, posY + midY);\n      this.hitAreas.strengthUp.bounds = [plusX, 0, btnSize, fullHeight];\n    } else {\n      this.hitAreas.strengthUp.bounds = [0,0,0,0];\n    }\n\n    // End dim group before drawing remove button\n    ctx.restore();\n\n    // Draw remove (trash icon, styled like overlay buttons)\n    if (node?.properties?.showRemoveButton !== false) {\n      const removeY = (rowHeight - removeSize) / 2;\n      // Background and subtle border to match overlay design\n      ctx.fillStyle = \"#3a2a2a\"; ctx.beginPath();\n      ctx.roundRect(removeX, posY + removeY, removeSize, removeSize, 2);\n      ctx.fill();\n      ctx.strokeStyle = \"#5a3a3a\"; ctx.lineWidth = 1; ctx.stroke();\n      // Trash icon\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"🗑\", removeX + removeSize / 2, posY + midY);\n      this.hitAreas.remove.bounds = [removeX, 0, removeSize, fullHeight];\n    } else {\n      this.hitAreas.remove.bounds = [0,0,0,0];\n    }\n  }\n\n  // drawSecondRow removed in compact single-row layout\n\n  private isCollapsedByTag(node: any): boolean {\n    if (!node.customWidgets) return false;\n    const tagWidget = node.customWidgets.find((w: any) => \n      w instanceof SuperLoraTagWidget && w.tag === this.value.tag\n    );\n    return tagWidget?.isCollapsed() || false;\n  }\n\n  private truncateText(ctx: any, text: string, maxWidth: number): string {\n    const metrics = ctx.measureText(text);\n    if (metrics.width <= maxWidth) return text;\n    \n    let truncated = text;\n    while (ctx.measureText(truncated + \"...\").width > maxWidth && truncated.length > 0) {\n      truncated = truncated.slice(0, -1);\n    }\n    return truncated + \"...\";\n  }\n\n  onEnabledDown = (event: any, pos: any, node: any): boolean => {\n    this.value.enabled = !this.value.enabled;\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  onLoraClick = (event: any, pos: any, node: any): boolean => {\n    SuperLoraNode.showLoraSelector(node, this, event);\n    return true;\n  };\n\n  onStrengthClick = (event: any, pos: any, node: any): boolean => {\n    try {\n      const canvas = (app as any)?.canvas;\n      if (canvas?.prompt) {\n        canvas.prompt(\"Model Strength\", this.value.strength ?? 1, (v: any) => {\n          const val = parseFloat(v);\n          if (!Number.isNaN(val)) {\n            this.value.strength = Math.max(-2, Math.min(2, val));\n            node.setDirtyCanvas(true, true);\n          }\n        }, event);\n        return true;\n      }\n    } catch {}\n    return false;\n  };\n\n  onStrengthDownClick = (event: any, pos: any, node: any): boolean => {\n    this.value.strength = Math.max(-2, this.value.strength - 0.1);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  onStrengthUpClick = (event: any, pos: any, node: any): boolean => {\n    this.value.strength = Math.min(2, this.value.strength + 0.1);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  onMoveUpClick = (event: any, pos: any, node: any): boolean => {\n    const index = node.customWidgets.indexOf(this);\n    if (index > 1) { // Don't move above header\n      const temp = node.customWidgets[index];\n      node.customWidgets[index] = node.customWidgets[index - 1];\n      node.customWidgets[index - 1] = temp;\n      node.setDirtyCanvas(true, false);\n    }\n    return true;\n  };\n\n  onMoveDownClick = (event: any, pos: any, node: any): boolean => {\n    const index = node.customWidgets.indexOf(this);\n    if (index < node.customWidgets.length - 1) {\n      const temp = node.customWidgets[index];\n      node.customWidgets[index] = node.customWidgets[index + 1];\n      node.customWidgets[index + 1] = temp;\n      node.setDirtyCanvas(true, false);\n    }\n    return true;\n  };\n\n  onTriggerWordsClick = (event: any, pos: any, node: any): boolean => {\n    try {\n      const canvas = (app as any)?.canvas;\n      if (canvas?.prompt) {\n        canvas.prompt(\"Trigger Words\", this.value.triggerWords || \"\", (v: any) => {\n          this.value.triggerWords = String(v ?? \"\");\n          this.value.autoFetched = false;\n          node.setDirtyCanvas(true, true);\n        }, event);\n        return true;\n      }\n    } catch {}\n    return false;\n  };\n\n  onTagClick = (event: any, pos: any, node: any): boolean => {\n    SuperLoraNode.showTagSelector(node, this);\n    return true;\n  };\n\n  onRemoveClick = (event: any, pos: any, node: any): boolean => {\n    SuperLoraNode.removeLoraWidget(node, this);\n    return true;\n  };\n\n  computeSize(): [number, number] {\n    return [450, 50]; // Bigger widget with 2 rows\n  }\n\n  setLora(lora: string): void {\n    this.value.lora = lora;\n    if (lora !== \"None\") {\n      // Auto-fetch trigger words\n      this.fetchTriggerWords();\n    }\n  }\n\n  private async fetchTriggerWords(): Promise<void> {\n    try {\n      const words = await SuperLoraNode.civitaiService.getTriggerWords(this.value.lora);\n      if (words.length > 0) {\n        this.value.triggerWords = words.join(\", \");\n        this.value.autoFetched = true;\n      }\n    } catch (error) {\n      console.warn(\"Failed to fetch trigger words:\", error);\n    }\n  }\n}\n\nexport class SuperLoraNode {\n  private static readonly NODE_WIDGET_TOP_OFFSET = 64;\n  private static loraService: LoraService = LoraService.getInstance();\n  private static templateService: TemplateService = TemplateService.getInstance();\n  private static civitaiService: CivitAiService;\n  \n  static async initialize(): Promise<void> {\n    this.loraService = LoraService.getInstance();\n    this.templateService = TemplateService.getInstance();\n    this.civitaiService = CivitAiService.getInstance();\n    \n    await Promise.all([\n      this.loraService.initialize(),\n      this.templateService.initialize()\n    ]);\n  }\n\n  /**\n   * Set up the node type with custom widgets\n   */\n  static setup(nodeType: any, nodeData: any): void {\n    const originalNodeCreated = nodeType.prototype.onNodeCreated;\n    \n    nodeType.prototype.onNodeCreated = function() {\n      if (originalNodeCreated) {\n        originalNodeCreated.apply(this, arguments);\n      }\n      \n      SuperLoraNode.setupAdvancedNode(this);\n    };\n\n    // Override drawing and interaction\n    const originalOnDrawForeground = nodeType.prototype.onDrawForeground;\n    nodeType.prototype.onDrawForeground = function(ctx: any) {\n      if (originalOnDrawForeground) {\n        originalOnDrawForeground.call(this, ctx);\n      }\n      SuperLoraNode.drawCustomWidgets(this, ctx);\n    };\n\n    const originalOnMouseDown = nodeType.prototype.onMouseDown;\n    nodeType.prototype.onMouseDown = function(event: any, pos: any) {\n      if (SuperLoraNode.handleMouseDown(this, event, pos)) {\n        return true;\n      }\n      return originalOnMouseDown ? originalOnMouseDown.call(this, event, pos) : false;\n    };\n\n    const originalOnMouseUp = nodeType.prototype.onMouseUp;\n    nodeType.prototype.onMouseUp = function(event: any, pos: any) {\n      if (SuperLoraNode.handleMouseUp(this, event, pos)) {\n        return true;\n      }\n      return originalOnMouseUp ? originalOnMouseUp.call(this, event, pos) : false;\n    };\n\n    // Override serialization to include custom widget data\n    const originalSerialize = nodeType.prototype.serialize;\n    nodeType.prototype.serialize = function() {\n      const data = originalSerialize ? originalSerialize.call(this) : {};\n      data.customWidgets = SuperLoraNode.serializeCustomWidgets(this);\n      return data;\n    };\n\n    // Override configure to restore custom widget data\n    const originalConfigure = nodeType.prototype.configure;\n    nodeType.prototype.configure = function(data: any) {\n      if (originalConfigure) {\n        originalConfigure.call(this, data);\n      }\n      if (data.customWidgets) {\n        SuperLoraNode.deserializeCustomWidgets(this, data.customWidgets);\n      } else {\n        // Ensure we have at least a header widget\n        SuperLoraNode.setupAdvancedNode(this);\n      }\n    };\n\n    // Add getExtraMenuOptions for additional context menu items\n    const originalGetExtraMenuOptions = nodeType.prototype.getExtraMenuOptions;\n    nodeType.prototype.getExtraMenuOptions = function(canvas: any) {\n      const options = originalGetExtraMenuOptions ? originalGetExtraMenuOptions.call(this, canvas) : [];\n      \n      options.push(null); // Separator\n      options.push({\n        content: \"🏷️ Add LoRA\",\n        callback: (event: any) => SuperLoraNode.showLoraSelector(this, undefined, event)\n      });\n      options.push({\n        content: \"⚙️ Settings\",\n        callback: (event: any) => SuperLoraNode.showSettingsDialog(this)\n      });\n      \n      return options;\n    };\n  }\n\n  /**\n   * Initialize advanced node with custom widgets\n   */\n  private static setupAdvancedNode(node: any): void {\n    console.log('Super LoRA Loader: Setting up advanced node');\n    \n    // Don't reinitialize if already set up\n    if (node.customWidgets && node.customWidgets.length > 0) {\n      console.log('Super LoRA Loader: Node already initialized, skipping');\n      return;\n    }\n    \n    // Initialize properties\n    node.properties = node.properties || {};\n    node.properties.enableTags = node.properties.enableTags !== false;\n    node.properties.showTriggerWords = node.properties.showTriggerWords !== false;\n    node.properties.showSeparateStrengths = node.properties.showSeparateStrengths || false;\n    node.properties.autoFetchTriggerWords = node.properties.autoFetchTriggerWords !== false;\n    \n    // Initialize custom widgets array\n    node.customWidgets = node.customWidgets || [];\n    \n    // Add header widget\n    node.customWidgets.push(new SuperLoraHeaderWidget());\n    \n    // Set minimum size\n    node.size = [Math.max(node.size[0], 450), Math.max(node.size[1], 100)];\n    \n    console.log('Super LoRA Loader: Advanced node setup complete');\n  }\n\n  /**\n   * Calculate required node size based on widgets\n   */\n  static calculateNodeSize(node: any): void {\n    if (!node.customWidgets) return;\n\n    const margin = 5;\n    let currentY = this.NODE_WIDGET_TOP_OFFSET; // USE THE CONSTANT\n\n    for (const widget of node.customWidgets) {\n      // Check if the widget is collapsed by its tag\n      const isCollapsed = widget instanceof SuperLoraWidget && widget.isCollapsedByTag(node);\n      if (isCollapsed) continue;\n\n      const size = widget.computeSize();\n      // Compact single-row height with small padding; no second row\n      const height = widget instanceof SuperLoraWidget\n        ? 34\n        : size[1];\n      if (height === 0) continue;\n\n      currentY += height + margin;\n    }\n\n    // Update node size based on content\n    const newHeight = Math.max(currentY, 100);\n    const newWidth = Math.max(node.size[0], 450);\n    if (node.size[1] !== newHeight) {\n      node.size[1] = newHeight;\n    }\n    if (node.size[0] !== newWidth) {\n      node.size[0] = newWidth;\n    }\n  }\n\n  /**\n   * Custom drawing for all widgets\n   */\n  static drawCustomWidgets(node: any, ctx: any): void {\n    if (!node.customWidgets) return;\n\n    const margin = 5;\n    let currentY = this.NODE_WIDGET_TOP_OFFSET; // USE THE CONSTANT\n\n    for (const widget of node.customWidgets) {\n      const size = widget.computeSize();\n\n      // Check if the widget is collapsed by its tag\n      const isCollapsed = widget instanceof SuperLoraWidget && widget.isCollapsedByTag(node);\n      if (size[1] === 0 || isCollapsed) {\n        // Skip collapsed widgets entirely so groups above pull up\n        continue;\n      }\n\n      // Always single-row height (compact)\n      const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n\n      widget.draw(ctx, node, node.size[0], currentY, height);\n      currentY += height + margin;\n    }\n  }\n\n  /**\n   * Handle mouse interactions\n   */\n  static handleMouseDown(node: any, event: any, pos: any): boolean {\n    return this.handleMouseEvent(node, event, pos, 'onMouseDown');\n  }\n\n  static handleMouseUp(node: any, event: any, pos: any): boolean {\n    return this.handleMouseEvent(node, event, pos, 'onClick');\n  }\n\n  private static handleMouseEvent(node: any, event: any, pos: any, handler: string): boolean {\n    if (!node.customWidgets) return false;\n\n    console.log(`[SuperLoraNode] Mouse event: pos=[${pos[0]}, ${pos[1]}], handler=${handler}`);\n    console.log('Node customWidgets:', node.customWidgets.map((w: any, i: number) => `${i}:${w.constructor.name}`));\n\n    // Capture last pointer screen position for inline editors\n    try {\n      const rect = (app as any)?.canvas?.canvas?.getBoundingClientRect?.();\n      const ds = (app as any)?.canvas?.ds;\n      let sx: number | null = (event && (event.clientX ?? event.pageX)) || null;\n      let sy: number | null = (event && (event.clientY ?? event.pageY)) || null;\n      if ((sx == null || sy == null) && rect && ds) {\n        sx = rect.left + (pos[0] + (ds.offset?.[0] || 0)) * (ds.scale || 1);\n        sy = rect.top + (pos[1] + (ds.offset?.[1] || 0)) * (ds.scale || 1);\n      }\n      if (sx != null && sy != null) {\n        (SuperLoraNode as any)._lastPointerScreen = {x: sx, y: sy};\n      }\n    } catch {}\n\n    const margin = 5;\n    let currentY = this.NODE_WIDGET_TOP_OFFSET; // USE THE CONSTANT\n    console.log(`[SuperLoraNode] Starting currentY: ${currentY}`);\n\n    for (const widget of node.customWidgets) {\n      const size = widget.computeSize();\n\n      // Also respect collapsed widgets during hit detection\n      const isCollapsed = widget instanceof SuperLoraWidget && widget.isCollapsedByTag(node);\n      if (size[1] === 0 || isCollapsed) {\n        // Skip collapsed widgets without advancing Y so lower headers align\n        continue;\n      }\n\n      const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n\n      // Check if click is within widget bounds\n      const widgetStartY = currentY;\n      const widgetEndY = currentY + height;\n      if (pos[1] >= widgetStartY && pos[1] <= widgetEndY) {\n        console.log(`[SuperLoraNode] ✓ Click within ${widget.constructor.name} bounds`);\n\n        // Adjust local position to account for the widget's offset\n        const localPos = [pos[0], pos[1] - widgetStartY];\n        console.log(`[SuperLoraNode] Local position: [${localPos[0]}, ${localPos[1]}], widgetStartY=${widgetStartY}`);\n\n        if (widget[handler]) {\n          console.log(`[SuperLoraNode] Calling ${widget.constructor.name}.${handler}()`);\n          if (widget[handler](event, localPos, node)) {\n            console.log(`[SuperLoraNode] ✓ Handler returned true`);\n            return true;\n          } else {\n            console.log(`[SuperLoraNode] ✗ Handler returned false`);\n          }\n        } else {\n          console.log(`[SuperLoraNode] ✗ No ${handler} method on ${widget.constructor.name}`);\n        }\n      } else {\n        console.log(`[SuperLoraNode] ✗ Click outside ${widget.constructor.name} bounds`);\n      }\n\n      currentY += height + margin;\n    }\n\n    console.log(`[SuperLoraNode] No widget handled the event`);\n    return false;\n  }\n\n  /**\n   * Show LoRA selector dialog with enhanced search functionality\n   */\n  static async showLoraSelector(node: any, widget?: SuperLoraWidget, event?: any): Promise<void> {\n    try {\n      // Pull available LoRAs\n      const availableLoras = await SuperLoraNode.loraService.getAvailableLoras();\n      const usedLoras = this.getUsedLoras(node);\n      const items = availableLoras.map(name => ({\n        id: name,\n        label: name.replace(/\\.(safetensors|ckpt|pt)$/, ''),\n        disabled: usedLoras.has(name)\n      }));\n\n      // Show overlay picker (no prompt)\n      this.showSearchOverlay({\n        title: 'Add LoRA',\n        placeholder: 'Search LoRAs...',\n        items,\n        onChoose: (id: string) => {\n          if (this.isDuplicateLora(node, id)) {\n            this.showToast('⚠️ Already added to the list', 'warning');\n            return;\n          }\n          if (widget) {\n            widget.setLora(id);\n            this.showToast('✅ LoRA updated', 'success');\n          } else {\n            this.addLoraWidget(node, { lora: id });\n            this.showToast('✅ LoRA added', 'success');\n          }\n          node.setDirtyCanvas(true, true);\n        }\n      });\n    } catch (error) {\n      console.error('Failed to show LoRA selector:', error);\n      this.showToast('Failed to load LoRAs', 'error');\n    }\n  }\n\n  /**\n   * Show tag selector dialog\n   */\n  static showTagSelector(node: any, widget: SuperLoraWidget): void {\n    const existingTags = this.getExistingTags(node);\n    const commonTags = [\"General\", \"Character\", \"Style\", \"Quality\", \"Effect\"];\n    const allTags = Array.from(new Set([...commonTags, ...existingTags]));\n    const items = allTags.map(tag => ({ id: tag, label: tag }));\n\n    this.showSearchOverlay({\n      title: 'Select Tag',\n      placeholder: 'Search or create tag...',\n      items,\n      allowCreate: true,\n      onChoose: (tag: string) => {\n        widget.value.tag = tag;\n        this.organizeByTags(node);\n        this.calculateNodeSize(node);\n        node.setDirtyCanvas(true, false);\n      }\n    });\n  }\n\n  /**\n   * Show settings dialog\n   */\n  static showSettingsDialog(node: any, event?: any): void {\n    // Top: core toggles\n    const coreItems: any[] = [\n      {\n        content: `${node.properties.enableTags ? \"✅\" : \"❌\"} Enable Tags`,\n        callback: () => {\n          node.properties.enableTags = !node.properties.enableTags;\n          this.organizeByTags(node);\n          this.calculateNodeSize(node);\n          node.setDirtyCanvas(true, false);\n        }\n      },\n      {\n        content: `${node.properties.showSeparateStrengths ? \"✅\" : \"❌\"} Separate Model/CLIP Strengths`,\n        callback: () => {\n          node.properties.showSeparateStrengths = !node.properties.showSeparateStrengths;\n          node.setDirtyCanvas(true, false);\n        }\n      },\n      {\n        content: `${node.properties.autoFetchTriggerWords ? \"✅\" : \"❌\"} Auto-fetch Trigger Words`,\n        callback: () => {\n          node.properties.autoFetchTriggerWords = !node.properties.autoFetchTriggerWords;\n        }\n      }\n    ];\n\n    // Bottom: visibility toggles\n    const showItems: any[] = [\n      {\n        content: `${node.properties.showTriggerWords ? \"✅\" : \"❌\"} Show Trigger Words`,\n        callback: () => {\n          node.properties.showTriggerWords = !node.properties.showTriggerWords;\n          node.setDirtyCanvas(true, false);\n        }\n      },\n      {\n        content: `${node.properties.showTagChip !== false ? \"✅\" : \"❌\"} Show Tag Chip`,\n        callback: () => {\n          node.properties.showTagChip = node.properties.showTagChip === false ? true : false;\n          node.setDirtyCanvas(true, false);\n        }\n      },\n      {\n        content: `${node.properties.showMoveArrows !== false ? \"✅\" : \"❌\"} Show Move Arrows`,\n        callback: () => {\n          node.properties.showMoveArrows = node.properties.showMoveArrows === false ? true : false;\n          node.setDirtyCanvas(true, false);\n        }\n      },\n      {\n        content: `${node.properties.showRemoveButton !== false ? \"✅\" : \"❌\"} Show Remove Button`,\n        callback: () => {\n          node.properties.showRemoveButton = node.properties.showRemoveButton === false ? true : false;\n          node.setDirtyCanvas(true, false);\n        }\n      },\n      {\n        content: `${node.properties.showStrengthControls !== false ? \"✅\" : \"❌\"} Show Strength Controls`,\n        callback: () => {\n          node.properties.showStrengthControls = node.properties.showStrengthControls === false ? true : false;\n          node.setDirtyCanvas(true, false);\n        }\n      }\n    ];\n\n    const menuItems: any[] = [...coreItems, null, ...showItems];\n    new LiteGraph.ContextMenu(menuItems, { title: 'Settings', event: event });\n  }\n\n  /**\n   * Show save template dialog\n   */\n  static showSaveTemplateDialog(node: any): void {\n    const templateName = prompt('Enter template name:', 'My LoRA Set');\n    if (templateName && templateName.trim()) {\n            const configs = this.getLoraConfigs(node);\n      this.templateService.saveTemplate(templateName.trim(), configs)\n        .then(success => {\n            if (success) {\n            this.showToast(`Template \"${templateName.trim()}\" saved successfully!`, 'success');\n            } else {\n              this.showToast('Failed to save template', 'error');\n            }\n        });\n    }\n  }\n\n  /**\n   * Show load template dialog with enhanced UI\n   */\n  static async showLoadTemplateDialog(node: any, event?: any): Promise<void> {\n    try {\n      const templateNames = await this.templateService.getTemplateNames();\n      if (templateNames.length === 0) {\n        this.showToast('📁 No templates available. Create one first!', 'info');\n        return;\n      }\n\n      const items = templateNames.map(name => ({ id: name, label: name }));\n\n      this.showSearchOverlay({\n        title: 'Load Template',\n        placeholder: 'Search templates...',\n        items,\n        onChoose: async (name: string) => {\n          try {\n            const template = await this.templateService.loadTemplate(name);\n            if (template) {\n              this.loadTemplate(node, template);\n              this.showToast(`✅ Template \"${name}\" loaded successfully!`, 'success');\n            } else {\n              this.showToast(`❌ Failed to load template \"${name}\". It may be corrupted.`, 'error');\n            }\n          } catch (error) {\n            console.error(`Template load error for \"${name}\":`, error);\n            this.showToast(`❌ Error loading template. Check console for details.`, 'error');\n          }\n        },\n        rightActions: [\n          {\n            icon: '✏️',\n            title: 'Rename template',\n            onClick: async (name: string) => {\n              this.showNameOverlay({\n                title: 'Rename Template',\n                placeholder: 'New template name...',\n                initial: name,\n                submitLabel: 'Rename',\n                onCommit: async (newName: string) => {\n                  const src = (name || '').trim();\n                  const dst = (newName || '').trim();\n                  if (!dst || dst === src) return;\n                  const ok = await this.templateService.renameTemplate(src, dst);\n                  this.showToast(ok ? '✅ Template renamed' : '❌ Failed to rename', ok ? 'success' : 'error');\n                  if (ok) this.showLoadTemplateDialog(node, event);\n                }\n              });\n            }\n          },\n          {\n            icon: '🗑',\n            title: 'Delete template',\n            onClick: async (name: string) => {\n              const ok = confirm(`Delete template \"${name}\"? This cannot be undone.`);\n              if (!ok) return;\n              const deleted = await this.templateService.deleteTemplate(name);\n              this.showToast(deleted ? '✅ Template deleted' : '❌ Failed to delete template', deleted ? 'success' : 'error');\n              if (deleted) this.showLoadTemplateDialog(node, event);\n            }\n          }\n        ]\n      });\n    } catch (error) {\n      console.error('Failed to show template selector:', error);\n      this.showToast('❌ Error loading templates. Check console for details.', 'error');\n    }\n  }\n\n  /**\n   * Add a new LoRA widget\n   */\n  static addLoraWidget(node: any, config?: Partial<LoraConfig>): SuperLoraWidget {\n    const widget = new SuperLoraWidget(`lora_${Date.now()}`);\n    \n    if (config) {\n      Object.assign(widget.value, config);\n    }\n    // Ensure default tag is General when tags are enabled\n    if (node?.properties?.enableTags) {\n      widget.value.tag = widget.value.tag || 'General';\n    }\n    \n    // Append to bottom (after all existing widgets)\n    node.customWidgets = node.customWidgets || [];\n    node.customWidgets.push(widget);\n\n    // If tags are enabled, re-group under headers immediately\n    if (node?.properties?.enableTags) {\n      this.organizeByTags(node);\n    }\n    \n    // Update node size and trigger redraw\n    this.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n    \n    return widget;\n  }\n\n  /**\n   * Remove a LoRA widget\n   */\n  static removeLoraWidget(node: any, widget: SuperLoraWidget): void {\n    const index = node.customWidgets.indexOf(widget);\n    if (index >= 0) {\n      node.customWidgets.splice(index, 1);\n      this.organizeByTags(node);\n      this.calculateNodeSize(node);\n      node.setDirtyCanvas(true, false);\n    }\n  }\n\n  /**\n   * Organize widgets by tags\n   */\n  static organizeByTags(node: any): void {\n    if (!node.properties.enableTags) {\n      // Remove all tag widgets when tags are disabled\n      node.customWidgets = node.customWidgets.filter(w => !(w instanceof SuperLoraTagWidget));\n      return;\n    }\n    \n    const loraWidgets = node.customWidgets.filter(w => w instanceof SuperLoraWidget);\n    const headerWidget = node.customWidgets.find(w => w instanceof SuperLoraHeaderWidget);\n    \n    // Group by tags\n    const tagGroups: { [key: string]: SuperLoraWidget[] } = {};\n    for (const widget of loraWidgets) {\n      const tag = widget.value.tag || \"General\";\n      if (!tagGroups[tag]) tagGroups[tag] = [];\n      tagGroups[tag].push(widget);\n    }\n\n    // Rebuild widgets array\n    node.customWidgets = [headerWidget].filter(Boolean);\n    \n    const sortedTags = Object.keys(tagGroups).sort((a, b) => \n      a === \"General\" ? -1 : b === \"General\" ? 1 : a.localeCompare(b)\n    );\n    \n    for (const tag of sortedTags) {\n      // Find or create tag widget\n      let tagWidget = node.customWidgets.find((w: any) => \n        w instanceof SuperLoraTagWidget && w.tag === tag\n      );\n      \n      if (!tagWidget) {\n        tagWidget = new SuperLoraTagWidget(tag);\n      }\n\n      node.customWidgets.push(tagWidget);\n      // Insert a subtle group border/separator as a visual container\n      // Tag headers already provide the title; lora rows follow.\n      node.customWidgets.push(...tagGroups[tag]);\n    }\n  }\n\n  /**\n   * Get used LoRA names\n   */\n  private static getUsedLoras(node: any): Set<string> {\n    return new Set(\n      node.customWidgets\n        .filter((w: any) => w instanceof SuperLoraWidget)\n        .map((w: any) => w.value.lora)\n        .filter((lora: string) => lora && lora !== \"None\")\n    );\n  }\n\n  /**\n   * Check if a LoRA is already used in the node\n   */\n  private static isDuplicateLora(node: any, loraName: string): boolean {\n    const usedLoras = this.getUsedLoras(node);\n    return usedLoras.has(loraName);\n  }\n\n  /**\n   * Get existing tags\n   */\n  private static getExistingTags(node: any): string[] {\n    return Array.from(new Set(\n      node.customWidgets\n        .filter((w: any) => w instanceof SuperLoraWidget)\n        .map((w: any) => w.value.tag)\n        .filter((tag: string) => tag)\n    ));\n  }\n\n  /**\n   * Get LoRA configurations\n   */\n  private static getLoraConfigs(node: any): LoraConfig[] {\n    return node.customWidgets\n      .filter((w: any) => w instanceof SuperLoraWidget)\n      .map((w: any) => ({\n        lora: w.value.lora,\n        enabled: w.value.enabled,\n        strength_model: w.value.strength,\n        strength_clip: w.value.strengthClip,\n        trigger_word: w.value.triggerWords,\n        tag: w.value.tag,\n        auto_populated: w.value.autoFetched\n      }))\n      .filter((config: LoraConfig) => config.lora && config.lora !== \"None\");\n  }\n\n  /**\n   * Load template configurations\n   */\n  private static loadTemplate(node: any, configs: LoraConfig[]): void {\n    // Clear existing LoRA widgets\n    node.customWidgets = node.customWidgets.filter(w => \n      !(w instanceof SuperLoraWidget) && !(w instanceof SuperLoraTagWidget)\n    );\n    \n    // Add widgets for each config\n    for (const config of configs) {\n      const widget = new SuperLoraWidget(`lora_${Date.now()}_${Math.random()}`);\n      widget.value = {\n        lora: config.lora,\n        enabled: config.enabled !== false,\n        strength: config.strength_model || 1.0,\n        strengthClip: config.strength_clip || config.strength_model || 1.0,\n        triggerWords: config.trigger_word || \"\",\n        tag: config.tag || \"General\",\n        autoFetched: config.auto_populated || false\n      };\n      node.customWidgets.push(widget);\n    }\n    \n    this.organizeByTags(node);\n    this.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n  }\n\n  /**\n   * Serialize custom widgets for saving\n   */\n  static serializeCustomWidgets(node: any): any {\n    if (!node.customWidgets) return null;\n    \n    return {\n      properties: node.properties,\n      widgets: node.customWidgets.map((widget: any) => ({\n        name: widget.name,\n        type: widget.constructor.name,\n        value: widget.value\n      }))\n    };\n  }\n\n  /**\n   * Deserialize custom widgets when loading\n   */\n  static deserializeCustomWidgets(node: any, data: any): void {\n    if (!data) return;\n    \n    // Restore properties\n    if (data.properties) {\n      Object.assign(node.properties, data.properties);\n    }\n    \n    // Restore widgets\n    if (data.widgets) {\n      node.customWidgets = [];\n      \n      for (const widgetData of data.widgets) {\n        let widget: any;\n        \n        switch (widgetData.type) {\n          case 'SuperLoraHeaderWidget':\n            widget = new SuperLoraHeaderWidget();\n            break;\n          case 'SuperLoraTagWidget':\n            widget = new SuperLoraTagWidget(widgetData.value.tag);\n            break;\n          case 'SuperLoraWidget':\n            widget = new SuperLoraWidget(widgetData.name);\n            break;\n          default:\n            continue;\n        }\n        \n        widget.value = { ...widget.value, ...widgetData.value };\n        node.customWidgets.push(widget);\n      }\n    }\n    \n    // Ensure minimum widgets\n    if (!node.customWidgets.find((w: any) => w instanceof SuperLoraHeaderWidget)) {\n      node.customWidgets.unshift(new SuperLoraHeaderWidget());\n    }\n    \n    node.setDirtyCanvas(true, true);\n  }\n\n  /**\n   * Get execution data for backend\n   */\n  static getExecutionData(node: any): any {\n    const loraWidgets = node.customWidgets?.filter((w: any) => w instanceof SuperLoraWidget) || [];\n    const executionData: any = {};\n    \n    // Add LoRA configurations\n    loraWidgets.forEach((widget: any, index: number) => {\n      if (widget.value.lora && widget.value.lora !== \"None\") {\n        executionData[`lora_${index}`] = {\n          lora: widget.value.lora,\n          enabled: widget.value.enabled,\n          strength: widget.value.strength,\n          strengthClip: widget.value.strengthClip,\n          triggerWords: widget.value.triggerWords,\n          tag: widget.value.tag,\n          autoFetched: widget.value.autoFetched\n        };\n      }\n    });\n    \n    return executionData;\n  }\n\n  /**\n   * Show toast notification with enhanced styling\n   */\n  private static showToast(message: string, type: 'success' | 'warning' | 'error' | 'info' = 'info'): void {\n    console.log(`Super LoRA Loader [${type}]: ${message}`);\n\n    // Define colors for different types\n    const colors = {\n      success: '#28a745',\n      warning: '#ffc107',\n      error: '#dc3545',\n      info: '#17a2b8'\n    };\n\n    const toast = document.createElement('div');\n    toast.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${colors[type]};\n      color: white;\n      padding: 14px 20px;\n      border-radius: 6px;\n      z-index: 10000;\n      font-family: 'Segoe UI', Arial, sans-serif;\n      font-size: 14px;\n      font-weight: 500;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      opacity: 0;\n      transition: all 0.3s ease;\n      max-width: 400px;\n      word-wrap: break-word;\n    `;\n\n    // Add a subtle border\n    toast.style.borderLeft = '4px solid rgba(255,255,255,0.3)';\n    toast.textContent = message;\n\n    document.body.appendChild(toast);\n\n    // Animate in\n    setTimeout(() => {\n      toast.style.opacity = '1';\n      toast.style.transform = 'translateY(0)';\n    }, 10);\n\n    // Auto remove\n    setTimeout(() => {\n      toast.style.opacity = '0';\n      toast.style.transform = 'translateY(-10px)';\n      setTimeout(() => toast.remove(), 300);\n    }, type === 'error' ? 5000 : 3000); // Errors stay longer\n  }\n\n  // Inline editors for better UX\n  static showInlineNumber(event: any, initial: number, onCommit: (v: number) => void): void {\n    const input = document.createElement('input');\n    input.type = 'number';\n    input.step = '0.05';\n    input.value = String(initial ?? 0);\n    input.style.cssText = `\n      position: fixed;\n      left: ${(() => { const p = (SuperLoraNode as any)._lastPointerScreen; return ((event?.clientX ?? p?.x ?? 100) + 8); })()}px;\n      top: ${(() => { const p = (SuperLoraNode as any)._lastPointerScreen; return ((event?.clientY ?? p?.y ?? 100) - 10); })()}px;\n      width: 80px;\n      padding: 4px 6px;\n      font-size: 12px;\n      z-index: 2147483647;\n      pointer-events: auto;\n    `;\n    const cleanup = () => input.remove();\n    const commit = () => { const v = parseFloat(input.value); if (!Number.isNaN(v)) onCommit(v); cleanup(); };\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') commit();\n      if (e.key === 'Escape') cleanup();\n    });\n    input.addEventListener('blur', cleanup);\n    document.body.appendChild(input);\n    input.focus();\n    input.select();\n  }\n\n  static showInlineText(event: any, initial: string, onCommit: (v: string) => void): void {\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.value = initial ?? '';\n    input.style.cssText = `\n      position: fixed;\n      left: ${(() => { const p = (SuperLoraNode as any)._lastPointerScreen; return ((event?.clientX ?? p?.x ?? 100) + 8); })()}px;\n      top: ${(() => { const p = (SuperLoraNode as any)._lastPointerScreen; return ((event?.clientY ?? p?.y ?? 100) - 10); })()}px;\n      width: 260px;\n      padding: 4px 6px;\n      font-size: 12px;\n      z-index: 2147483647;\n      pointer-events: auto;\n    `;\n    const cleanup = () => input.remove();\n    const commit = () => { onCommit(input.value ?? ''); cleanup(); };\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') commit();\n      if (e.key === 'Escape') cleanup();\n    });\n    input.addEventListener('blur', cleanup);\n    document.body.appendChild(input);\n    input.focus();\n    input.select();\n  }\n\n  // Overlay utilities\n  private static showSearchOverlay(opts: { title: string; placeholder: string; items: { id: string; label: string; disabled?: boolean }[]; onChoose: (id: string) => void; allowCreate?: boolean, onRightAction?: (id: string) => void, rightActionIcon?: string, rightActionTitle?: string, rightActions?: Array<{ icon: string; title?: string; onClick: (id: string) => void }> }): void {\n    // Ensure only one overlay at a time\n    try {\n      document.querySelectorAll('[data-super-lora-overlay=\"1\"]').forEach((el: any) => el.remove());\n    } catch {}\n\n    const overlay = document.createElement('div');\n    overlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      background: rgba(0,0,0,0.55);\n      z-index: 2147483600;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(2px);\n    `;\n    overlay.setAttribute('data-super-lora-overlay', '1');\n\n    const panel = document.createElement('div');\n    panel.style.cssText = `\n      width: 560px;\n      max-height: 70vh;\n      background: #222;\n      border: 1px solid #444;\n      border-radius: 8px;\n      box-shadow: 0 12px 30px rgba(0,0,0,0.4);\n      color: #fff;\n      font-family: 'Segoe UI', Arial, sans-serif;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    `;\n\n    const header = document.createElement('div');\n    header.textContent = opts.title;\n    header.style.cssText = `\n      padding: 12px 14px;\n      font-weight: 600;\n      border-bottom: 1px solid #444;\n      background: #2a2a2a;\n    `;\n\n    const search = document.createElement('input');\n    search.type = 'text';\n    search.placeholder = opts.placeholder;\n    search.style.cssText = `\n      margin: 10px 12px;\n      padding: 10px 12px;\n      border-radius: 6px;\n      border: 1px solid #555;\n      background: #1a1a1a;\n      color: #fff;\n      outline: none;\n    `;\n\n    const listWrap = document.createElement('div');\n    listWrap.style.cssText = `\n      overflow: auto;\n      padding: 6px 4px 10px 4px;\n    `;\n\n    const list = document.createElement('div');\n    list.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n      padding: 0 8px 8px 8px;\n    `;\n\n    const empty = document.createElement('div');\n    empty.textContent = 'No results';\n    empty.style.cssText = 'padding: 12px; color: #aaa; display: none;';\n\n    const close = () => overlay.remove();\n\n    const render = (term: string) => {\n      list.innerHTML = '';\n      const q = (term || '').trim().toLowerCase();\n      let filtered = q\n        ? opts.items.filter(i => i.label.toLowerCase().includes(q))\n        : opts.items;\n\n      // Optional create-new row when allowed and search doesn't exactly match\n      if (opts.allowCreate && q) {\n        const exact = opts.items.some(i => i.label.toLowerCase() === q);\n        if (!exact) {\n          filtered = [{ id: term, label: `Create \"${term}\"` }, ...filtered];\n        }\n      }\n\n      empty.style.display = filtered.length ? 'none' : 'block';\n      const maxToShow = Math.min(2000, filtered.length); // show many, still capped for perf\n      filtered.slice(0, maxToShow).forEach(i => {\n        const row = document.createElement('div');\n        row.style.cssText = `\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          padding: 0;\n        `;\n\n        // Left main button (select)\n        const leftBtn = document.createElement('button');\n        leftBtn.type = 'button';\n        leftBtn.textContent = i.label + (i.disabled ? '  (added)' : '');\n        leftBtn.disabled = !!i.disabled;\n        leftBtn.style.cssText = `\n          flex: 1;\n          text-align: left;\n          padding: 10px 12px;\n          background: ${i.disabled ? '#2a2a2a' : '#252525'};\n          color: ${i.disabled ? '#888' : '#fff'};\n          border: 1px solid #3a3a3a;\n          border-radius: 6px;\n          cursor: ${i.disabled ? 'not-allowed' : 'pointer'};\n        `;\n        leftBtn.addEventListener('click', () => { if (!i.disabled) { opts.onChoose(i.id); close(); } });\n        row.appendChild(leftBtn);\n\n        // Right action buttons (e.g., rename, delete) aligned far right\n        const actions: Array<{ icon: string; title?: string; onClick: (id: string) => void }> = [];\n        if (opts.rightActions && opts.rightActions.length) {\n          actions.push(...opts.rightActions);\n        } else if (opts.onRightAction) {\n          actions.push({ icon: (opts.rightActionIcon || '🗑'), title: opts.rightActionTitle, onClick: opts.onRightAction });\n        }\n        if (actions.length && !i.disabled) {\n          actions.forEach((action) => {\n            const rightBtn = document.createElement('button');\n            rightBtn.type = 'button';\n            rightBtn.textContent = action.icon;\n            if (action.title) rightBtn.title = action.title;\n            rightBtn.style.cssText = `\n              margin-left: 8px;\n              padding: 10px 12px;\n              background: #3a2a2a;\n              color: #fff;\n              border: 1px solid #5a3a3a;\n              border-radius: 6px;\n              cursor: pointer;\n            `;\n            rightBtn.addEventListener('click', (e) => { e.stopPropagation(); e.preventDefault(); action.onClick(i.id); });\n            row.appendChild(rightBtn);\n          });\n        }\n\n        list.appendChild(row);\n      });\n    };\n\n    overlay.addEventListener('click', (e) => { if (e.target === overlay) close(); });\n    document.addEventListener('keydown', function onKey(e) { if (e.key === 'Escape') { close(); document.removeEventListener('keydown', onKey as any); } });\n\n    listWrap.appendChild(empty);\n    listWrap.appendChild(list);\n    panel.appendChild(header);\n    panel.appendChild(search);\n    panel.appendChild(listWrap);\n    overlay.appendChild(panel);\n    document.body.appendChild(overlay);\n\n    search.addEventListener('input', () => render(search.value));\n    setTimeout(() => { search.focus(); render(''); }, 0);\n  }\n\n  private static showNameOverlay(opts: { title: string; placeholder: string; initial?: string; submitLabel?: string; onCommit: (name: string) => void }): void {\n    const overlay = document.createElement('div');\n    overlay.style.cssText = `position: fixed; inset: 0; background: rgba(0,0,0,0.55); z-index: 2147483600; display: flex; align-items: center; justify-content: center; backdrop-filter: blur(2px);`;\n    const panel = document.createElement('div');\n    panel.style.cssText = `width: 420px; background: #222; border: 1px solid #444; border-radius: 8px; color: #fff; font-family: 'Segoe UI', Arial, sans-serif; box-shadow: 0 12px 30px rgba(0,0,0,0.4); overflow: hidden;`;\n    const header = document.createElement('div'); header.textContent = opts.title; header.style.cssText = `padding: 12px 14px; font-weight: 600; border-bottom: 1px solid #444; background: #2a2a2a;`;\n    const form = document.createElement('form'); form.style.cssText = `display: flex; gap: 8px; padding: 14px;`;\n    const input = document.createElement('input'); input.type = 'text'; input.placeholder = opts.placeholder; input.value = opts.initial || ''; input.style.cssText = `flex: 1; padding: 10px 12px; border-radius: 6px; border: 1px solid #555; background: #1a1a1a; color: #fff; outline: none;`;\n    const submit = document.createElement('button'); submit.type = 'submit'; submit.textContent = opts.submitLabel || 'Save'; submit.style.cssText = `padding: 10px 14px; background: #1976d2; color: #fff; border: 1px solid #0d47a1; border-radius: 6px; cursor: pointer;`;\n    const close = () => overlay.remove();\n    form.addEventListener('submit', (e) => { e.preventDefault(); opts.onCommit(input.value); close(); });\n    overlay.addEventListener('click', (e) => { if (e.target === overlay) close(); });\n    document.addEventListener('keydown', function onKey(e) { if (e.key === 'Escape') { close(); document.removeEventListener('keydown', onKey as any); } });\n    form.appendChild(input); form.appendChild(submit);\n    panel.appendChild(header); panel.appendChild(form); overlay.appendChild(panel); document.body.appendChild(overlay);\n    setTimeout(() => input.focus(), 0);\n  }\n}\n","/**\n * Super LoRA Loader - ComfyUI Extension\n * \n * A modern, standalone implementation of a powerful LoRA loader with advanced features.\n */\n\nimport { app } from '/scripts/app.js';\nimport { ComfyExtension } from './types';\nimport { SuperLoraNode } from './nodes/SuperLoraNode';\nimport './styles/super-lora.scss';\n\n// Extension configuration\nconst EXTENSION_NAME = 'SuperLoraLoader';\nconst NODE_TYPE = 'SuperLoraLoader';\n\n// Main extension object\nconst superLoraExtension: ComfyExtension = {\n  name: EXTENSION_NAME,\n  \n  // Extension settings\n  settings: [\n    {\n      id: 'superLora.autoFetchTriggerWords',\n      name: 'Auto-fetch Trigger Words',\n      type: 'boolean',\n      defaultValue: true\n    },\n    {\n      id: 'superLora.enableTags',\n      name: 'Enable Tag System',\n      type: 'boolean',\n      defaultValue: false\n    },\n    {\n      id: 'superLora.showSeparateStrengths',\n      name: 'Show Separate Model/CLIP Strengths',\n      type: 'boolean',\n      defaultValue: false\n    },\n    {\n      id: 'superLora.enableTemplates',\n      name: 'Enable Template System',\n      type: 'boolean',\n      defaultValue: true\n    },\n    {\n      id: 'superLora.enableDeletion',\n      name: 'Enable LoRA Deletion',\n      type: 'boolean',\n      defaultValue: true\n    },\n    {\n      id: 'superLora.enableSorting',\n      name: 'Enable LoRA Sorting',\n      type: 'boolean',\n      defaultValue: true\n    }\n  ],\n  \n  // Extension commands\n  commands: [\n    {\n      id: 'superLora.addLora',\n      label: 'Add LoRA to Super LoRA Loader',\n      function: () => {\n        // This could trigger adding a LoRA to a selected node\n        console.log('Super LoRA Loader: Add LoRA command triggered');\n      }\n    },\n    {\n      id: 'superLora.showTriggerWords',\n      label: 'Show All Trigger Words',\n      function: () => {\n        // This could show a combined view of all trigger words\n        console.log('Super LoRA Loader: Show trigger words command triggered');\n      }\n    }\n  ],\n  \n  /**\n   * Called before a node type is registered\n   */\n  async beforeRegisterNodeDef(nodeType: any, nodeData: any): Promise<void> {\n    if (nodeData.name === NODE_TYPE) {\n      console.log('Super LoRA Loader: Registering node type');\n      \n      // Initialize the SuperLoraNode\n      await SuperLoraNode.initialize();\n      \n      // Set up the node type\n      SuperLoraNode.setup(nodeType, nodeData);\n      \n      console.log('Super LoRA Loader: Node type registered successfully');\n    }\n  },\n  \n  /**\n   * Called when a node is created\n   */\n  nodeCreated(node: any): void {\n    if (node.type === NODE_TYPE) {\n      console.log('Super LoRA Loader: Node created', node.id);\n      \n      // Additional node setup if needed\n      this.setupNodeEventHandlers(node);\n    }\n  },\n  \n  /**\n   * Called before the graph is configured\n   */\n  beforeConfigureGraph(graphData: any): void {\n    // Pre-process graph data if needed\n    console.log('Super LoRA Loader: Configuring graph');\n  },\n  \n  /**\n   * Set up additional event handlers for the node\n   */\n  setupNodeEventHandlers(node: any): void {\n    // Handle node removal\n    const originalOnRemoved = node.onRemoved;\n    node.onRemoved = function() {\n      console.log('Super LoRA Loader: Node removed', this.id);\n      \n      if (originalOnRemoved) {\n        originalOnRemoved.apply(this, arguments);\n      }\n    };\n    \n    // Handle node copying\n    const originalClone = node.clone;\n    node.clone = function() {\n      const clonedNode = originalClone ? originalClone.apply(this, arguments) : this;\n      console.log('Super LoRA Loader: Node cloned', this.id, '->', clonedNode.id);\n      return clonedNode;\n    };\n    \n    // Handle property changes\n    const originalOnPropertyChanged = node.onPropertyChanged;\n    node.onPropertyChanged = function(name: string, value: any) {\n      console.log('Super LoRA Loader: Property changed', name, value);\n      \n      // Handle setting changes that affect the UI\n      if (name.startsWith('@')) {\n        const settingName = name.substring(1);\n        this.onSettingChanged?.(settingName, value);\n      }\n      \n      if (originalOnPropertyChanged) {\n        originalOnPropertyChanged.apply(this, arguments);\n      }\n    };\n  }\n};\n\n// Register the extension with ComfyUI\nconsole.log('Super LoRA Loader: Registering extension with ComfyUI');\napp.registerExtension(superLoraExtension);\nconsole.log('Super LoRA Loader: Extension registered successfully');\n\n// Export for potential external use\nexport default superLoraExtension;\nexport { SuperLoraNode };\nexport * from './types';\nexport * from './services/LoraService';\nexport * from './services/CivitAiService';\nexport * from './services/TemplateService';\n"],"names":["list","app","w"],"mappings":"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"}