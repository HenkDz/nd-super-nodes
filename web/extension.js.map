{"version":3,"file":"extension.js","sources":["../frontend/src/services/LoraService.ts","../frontend/src/services/TemplateService.ts","../frontend/src/services/CivitAiService.ts","../frontend/src/services/TagSetService.ts","../frontend/src/services/OverlayService.ts","../frontend/src/services/UpdateService.ts","../frontend/src/services/FilePickerService.ts","../frontend/src/nodes/widgets/SuperLoraBaseWidget.ts","../frontend/src/nodes/widgets/WidgetAPI.ts","../frontend/src/services/TriggerWordStore.ts","../frontend/src/nodes/widgets/SuperLoraTagWidget.ts","../frontend/src/nodes/widgets/SuperLoraWidget.ts","../frontend/src/nodes/widgets/SuperLoraHeaderWidget.ts","../frontend/src/nodes/SuperLoraNode.ts","../frontend/src/extensions/NodeEnhancerExtension.ts","../frontend/src/extensions/NodeEnhancer.ts","../frontend/src/extension.ts"],"sourcesContent":["/**\n * LoRA management service\n */\n\nimport { LoraConfig } from '@/types';\n\nexport class LoraService {\n  private static instance: LoraService;\n  private availableLoras: string[] = [];\n  private loraCache: Map<string, any> = new Map();\n\n  static getInstance(): LoraService {\n    if (!LoraService.instance) {\n      LoraService.instance = new LoraService();\n    }\n    return LoraService.instance;\n  }\n\n  /**\n   * Initialize the service and load available LoRAs\n   */\n  async initialize(): Promise<void> {\n    try {\n      await this.refreshLoraList();\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to initialize LoRA service:', error);\n    }\n  }\n\n  /**\n   * Get list of available LoRA files\n   */\n  async getAvailableLoras(): Promise<string[]> {\n    if (this.availableLoras.length === 0) {\n      await this.refreshLoraList();\n    }\n    return this.availableLoras;\n  }\n\n  /**\n   * Refresh the list of available LoRAs from the backend\n   */\n  async refreshLoraList(): Promise<void> {\n    try {\n      // Call ComfyUI API to get LoRA files\n      const response = await fetch('/object_info');\n      const data = await response.json();\n      \n      // Extract LoRA list from the response\n      const loraLoader = data.LoraLoader;\n      if (loraLoader && loraLoader.input && loraLoader.input.required && loraLoader.input.required.lora_name) {\n        this.availableLoras = loraLoader.input.required.lora_name[0] || [];\n      } else {\n        // Fallback: try to get from folder_paths\n        const folderResponse = await fetch('/api/v1/folder_paths');\n        if (folderResponse.ok) {\n          const folderData = await folderResponse.json();\n          this.availableLoras = folderData.loras || [];\n        }\n      }\n      \n      console.log(`Super LoRA Loader: Found ${this.availableLoras.length} LoRAs`);\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to refresh LoRA list:', error);\n      this.availableLoras = [];\n    }\n  }\n\n  /**\n   * Create a new LoRA configuration with defaults\n   */\n  createLoraConfig(loraName: string = \"None\"): LoraConfig {\n    return {\n      lora: loraName,\n      enabled: true,\n      strength_model: 1.0,\n      strength_clip: 1.0,\n      trigger_word: '',\n      tag: 'General',\n      auto_populated: false\n    };\n  }\n\n  /**\n   * Validate a LoRA configuration\n   */\n  validateLoraConfig(config: LoraConfig): boolean {\n    if (!config || typeof config !== 'object') {\n      return false;\n    }\n\n    // Check required fields\n    if (typeof config.lora !== 'string' || typeof config.enabled !== 'boolean') {\n      return false;\n    }\n\n    // Validate strength values\n    const strengthModel = Number(config.strength_model);\n    const strengthClip = Number(config.strength_clip);\n    \n    if (isNaN(strengthModel) || isNaN(strengthClip)) {\n      return false;\n    }\n\n    if (strengthModel < 0 || strengthModel > 2 || strengthClip < 0 || strengthClip > 2) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if a LoRA is already in the configuration list\n   */\n  isDuplicateLora(configs: LoraConfig[], loraName: string): boolean {\n    return configs.some(config => config.lora === loraName && loraName !== \"None\");\n  }\n\n  /**\n   * Sort LoRA configurations by tag and name\n   */\n  sortLoraConfigs(configs: LoraConfig[]): LoraConfig[] {\n    return [...configs].sort((a, b) => {\n      // First sort by tag\n      if (a.tag !== b.tag) {\n        // \"General\" tag always comes first\n        if (a.tag === 'General') return -1;\n        if (b.tag === 'General') return 1;\n        return a.tag.localeCompare(b.tag);\n      }\n      \n      // Then sort by LoRA name\n      return a.lora.localeCompare(b.lora);\n    });\n  }\n\n  /**\n   * Group LoRA configurations by tag\n   */\n  groupLorasByTag(configs: LoraConfig[]): Map<string, LoraConfig[]> {\n    const groups = new Map<string, LoraConfig[]>();\n    \n    for (const config of configs) {\n      const tag = config.tag || 'General';\n      if (!groups.has(tag)) {\n        groups.set(tag, []);\n      }\n      groups.get(tag)!.push(config);\n    }\n    \n    return groups;\n  }\n\n  /**\n   * Get available tags from a list of LoRA configurations\n   */\n  getAvailableTags(configs: LoraConfig[]): string[] {\n    const tags = new Set<string>();\n    \n    for (const config of configs) {\n      tags.add(config.tag || 'General');\n    }\n    \n    return Array.from(tags).sort((a, b) => {\n      if (a === 'General') return -1;\n      if (b === 'General') return 1;\n      return a.localeCompare(b);\n    });\n  }\n\n  /**\n   * Get common tag suggestions\n   */\n  getCommonTags(): string[] {\n    return [\n      'General',\n      'Character',\n      'Style',\n      'Quality',\n      'Effect',\n      'Background',\n      'Clothing',\n      'Pose',\n      'Lighting'\n    ];\n  }\n\n  /**\n   * Convert LoRA configs to backend format\n   */\n  convertToBackendFormat(configs: LoraConfig[]): Record<string, any> {\n    const result: Record<string, any> = {};\n    \n    configs.forEach((config, index) => {\n      if (config.lora && config.lora !== \"None\") {\n        const key = `lora_${index + 1}`;\n        result[key] = {\n          lora: config.lora,\n          enabled: config.enabled,\n          strength_model: config.strength_model,\n          strength_clip: config.strength_clip,\n          trigger_word: config.trigger_word || '',\n          tag: config.tag || 'General'\n        };\n      }\n    });\n    \n    return result;\n  }\n\n  /**\n   * Extract trigger words from all enabled LoRAs\n   */\n  extractTriggerWords(configs: LoraConfig[]): string {\n    const triggerWords: string[] = [];\n    \n    for (const config of configs) {\n      if (config.enabled && config.trigger_word && config.trigger_word.trim()) {\n        triggerWords.push(config.trigger_word.trim());\n      }\n    }\n    \n    return triggerWords.join(', ');\n  }\n}\n","/**\n * Template management service\n */\n\nimport { LoraTemplate, LoraConfig } from '@/types';\n\nexport class TemplateService {\n  private static instance: TemplateService;\n  private templates: LoraTemplate[] = [];\n  private isLoaded: boolean = false;\n\n  static getInstance(): TemplateService {\n    if (!TemplateService.instance) {\n      TemplateService.instance = new TemplateService();\n    }\n    return TemplateService.instance;\n  }\n\n  /**\n   * Initialize the template service\n   */\n  async initialize(): Promise<void> {\n    if (!this.isLoaded) {\n      await this.loadTemplates();\n    }\n  }\n\n  /**\n   * Load templates from backend\n   */\n  async loadTemplates(): Promise<void> {\n    try {\n      const response = await fetch('/super_lora/templates', {\n        method: 'GET'\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const templates = data.templates ?? data ?? [];\n        // Normalize to array\n        this.templates = Array.isArray(templates) ? templates as any : [];\n        this.isLoaded = true;\n        console.log(`Super LoRA Loader: Loaded ${this.templates.length} templates`);\n      } else {\n        console.warn('Super LoRA Loader: Failed to load templates:', response.statusText);\n        this.templates = [];\n        this.isLoaded = true;\n      }\n    } catch (error) {\n      console.error('Super LoRA Loader: Error loading templates:', error);\n      this.templates = [];\n      this.isLoaded = true;\n    }\n  }\n\n  /**\n   * Get all available templates\n   */\n  async getTemplates(): Promise<LoraTemplate[]> {\n    if (!this.isLoaded) {\n      await this.loadTemplates();\n    }\n    return [...this.templates];\n  }\n\n  /**\n   * Save a new template\n   */\n  async saveTemplate(name: string, loraConfigs: LoraConfig[]): Promise<boolean> {\n    try {\n      // Filter out empty/invalid configs\n      const validConfigs = loraConfigs.filter(config => \n        config.lora && config.lora !== 'None'\n      );\n\n      if (validConfigs.length === 0) {\n        throw new Error('No valid LoRA configurations to save');\n      }\n\n      // Normalize before saving\n      const normalized = validConfigs.map(cfg => ({\n        lora: cfg.lora,\n        enabled: !!cfg.enabled,\n        strength_model: Number(cfg.strength_model ?? 1),\n        strength_clip: Number(cfg.strength_clip ?? cfg.strength_model ?? 1),\n        trigger_word: cfg.trigger_word ?? '',\n        tag: cfg.tag ?? 'General',\n        auto_populated: !!cfg.auto_populated\n      }));\n\n      // Prefer 'lora_configs' for backend, but backend also accepts 'loras'\n      const template: any = {\n        name,\n        version: '1.0',\n        lora_configs: normalized\n      };\n\n      const response = await fetch('/super_lora/templates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(template)\n      });\n\n      if (response.ok) {\n        // Reload templates to get the updated list\n        await this.loadTemplates();\n        console.log(`Super LoRA Loader: Template \"${name}\" saved successfully`);\n        return true;\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to save template \"${name}\":`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Load a template by name\n   */\n  async loadTemplate(name: string): Promise<LoraConfig[] | null> {\n    try {\n      const templates = await this.getTemplates();\n      const template: any = templates.find((t: any) => t && (t.name === name || t.id === name || t.title === name || t === name));\n      \n      const extractList = (tpl: any): any[] | null => {\n        if (!tpl) return null;\n        if (Array.isArray(tpl.loras)) return tpl.loras;\n        if (Array.isArray(tpl.items)) return tpl.items;\n        if (tpl.template) return extractList(tpl.template);\n        if (typeof tpl === 'string') {\n          // Might be a JSON string\n          try { const parsed = JSON.parse(tpl); return extractList(parsed); } catch {}\n        }\n        return null;\n      };\n\n      // Helper to fetch details by name\n      const fetchByName = async (): Promise<LoraConfig[] | null> => {\n        const tryParse = (data: any): LoraConfig[] | null => {\n          const list = extractList(data);\n          if (!list) return null;\n          const valid = list.filter((cfg: any) => this.validateLoraConfig(cfg));\n          return valid;\n        };\n        try {\n          // Attempt query param form\n          let resp = await fetch(`/super_lora/templates?name=${encodeURIComponent(name)}`);\n          if (resp.ok) {\n            const data = await resp.json();\n            const out = tryParse(data);\n            if (out) return out;\n          }\n        } catch {}\n        try {\n          // Attempt REST-style path form\n          const resp2 = await fetch(`/super_lora/templates/${encodeURIComponent(name)}`);\n          if (resp2.ok) {\n            const data2 = await resp2.json();\n            const out2 = tryParse(data2);\n            if (out2) return out2;\n          }\n        } catch {}\n        return null;\n      };\n\n      if (!template) {\n        console.warn(`Super LoRA Loader: Template \"${name}\" not found in cache, trying GET by name`);\n        return await fetchByName();\n      }\n\n      let list: any[] | null = extractList(template);\n      if (!list) {\n        const fetched = await fetchByName();\n        if (!fetched) {\n          console.warn(`Super LoRA Loader: Template \"${name}\" has no loras/items array`);\n        }\n        return fetched;\n      }\n\n      const normalize = (cfg: any) => ({\n        lora: cfg.lora ?? cfg.file ?? cfg.name ?? '',\n        enabled: (cfg.enabled !== undefined) ? !!cfg.enabled : (cfg.on === undefined ? true : !!cfg.on),\n        strength_model: (cfg.strength_model !== undefined) ? Number(cfg.strength_model) : Number(cfg.strength ?? cfg.value ?? 1),\n        strength_clip: (cfg.strength_clip !== undefined) ? Number(cfg.strength_clip) : Number(cfg.strengthTwo ?? cfg.clip_strength ?? cfg.strength_model ?? cfg.strength ?? 1),\n        trigger_word: cfg.trigger_word ?? cfg.triggerWord ?? cfg.trigger ?? '',\n        tag: cfg.tag ?? 'General',\n        auto_populated: cfg.auto_populated ?? cfg._autoPopulatedTriggerWord ?? false\n      });\n\n      const normalized = list.map(normalize);\n      const validConfigs = normalized.filter(config => this.validateLoraConfig(config));\n       \n      if (validConfigs.length !== list.length) {\n        console.warn(`Super LoRA Loader: Some LoRA configs in template \"${name}\" are invalid`);\n      }\n\n      console.log(`Super LoRA Loader: Loaded template \"${name}\" with ${validConfigs.length} LoRAs`);\n      return validConfigs;\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to load template \"${name}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Delete a template\n   */\n  async deleteTemplate(name: string): Promise<boolean> {\n    try {\n      // Try RESTful DELETE by name first\n      let response = await fetch(`/super_lora/templates/${encodeURIComponent(name)}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        // Fallback 1: DELETE with JSON body (older clients)\n        response = await fetch('/super_lora/templates', {\n          method: 'DELETE',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ name })\n        });\n      }\n\n      if (!response.ok && response.status === 405) {\n        // Fallback 2: POST to a delete endpoint\n        response = await fetch('/super_lora/templates/delete', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ name })\n        });\n      }\n\n      if (!response.ok) {\n        // Fallback 3: POST action flag\n        response = await fetch('/super_lora/templates', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ action: 'delete', name })\n        });\n      }\n\n      if (response.ok) {\n        // Verify by reloading list\n        await this.loadTemplates();\n        const stillExists = (this.templates || []).some((t: any) => (t && t.name) ? t.name === name : t === name);\n        if (stillExists) {\n          console.warn(`Super LoRA Loader: Server responded OK but template still present: ${name}`);\n          return false;\n        }\n        console.log(`Super LoRA Loader: Template \"${name}\" deleted successfully`);\n        return true;\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to delete template \"${name}\":`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if a template name already exists\n   */\n  async templateExists(name: string): Promise<boolean> {\n    const templates = await this.getTemplates();\n    return templates.some(t => t.name === name);\n  }\n\n  /**\n   * Get template names for UI selection\n   */\n  async getTemplateNames(): Promise<string[]> {\n    const templates = await this.getTemplates();\n    // Accept arrays of names or arrays of objects\n    return templates.map((t: any) => (t && t.name) ? t.name : String(t)).sort();\n  }\n\n  /**\n   * Validate a LoRA configuration\n   */\n  private validateLoraConfig(config: LoraConfig): boolean {\n    if (!config || typeof config !== 'object') {\n      return false;\n    }\n\n    // Check required fields\n    if (!config.lora || typeof config.enabled !== 'boolean') {\n      return false;\n    }\n\n    // Validate strength values\n    const strengthModel = Number(config.strength_model);\n    const strengthClip = Number(config.strength_clip);\n    \n    if (isNaN(strengthModel) || isNaN(strengthClip)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Export template to JSON string\n   */\n  async exportTemplate(name: string): Promise<string | null> {\n    try {\n      const templates = await this.getTemplates();\n      const template = templates.find(t => t.name === name);\n      \n      if (!template) {\n        return null;\n      }\n\n      return JSON.stringify(template, null, 2);\n    } catch (error) {\n      console.error(`Super LoRA Loader: Failed to export template \"${name}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Import template from JSON string\n   */\n  async importTemplate(jsonString: string): Promise<boolean> {\n    try {\n      const template = JSON.parse(jsonString) as LoraTemplate;\n      \n      // Validate template structure\n      if (!template.name || !template.loras || !Array.isArray(template.loras)) {\n        throw new Error('Invalid template format');\n      }\n\n      // Check if template already exists\n      if (await this.templateExists(template.name)) {\n        throw new Error(`Template \"${template.name}\" already exists`);\n      }\n\n      return await this.saveTemplate(template.name, template.loras);\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to import template:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Rename an existing template\n   */\n  async renameTemplate(oldName: string, newName: string): Promise<boolean> {\n    try {\n      const src = (oldName || '').trim();\n      const dst = (newName || '').trim();\n      if (!src || !dst) return false;\n      if (src === dst) return true;\n\n      // Ensure destination does not already exist\n      if (await this.templateExists(dst)) {\n        throw new Error(`Template \"${dst}\" already exists`);\n      }\n\n      // Load source template configs\n      const configs = await this.loadTemplate(src);\n      if (!configs || configs.length === 0) {\n        throw new Error(`Template \"${src}\" not found or empty`);\n      }\n\n      // Save under new name\n      const saved = await this.saveTemplate(dst, configs);\n      if (!saved) return false;\n\n      // Delete old\n      await this.deleteTemplate(src);\n\n      // Refresh list\n      await this.loadTemplates();\n      return true;\n    } catch (error) {\n      console.error('Super LoRA Loader: Failed to rename template:', error);\n      return false;\n    }\n  }\n}\n","/**\n * CivitAI API integration service\n */\n\nimport { CivitAiModelInfo } from '@/types';\n\nexport class CivitAiService {\n  private static instance: CivitAiService;\n  private cache: Map<string, CivitAiModelInfo> = new Map();\n  private pendingRequests: Map<string, Promise<CivitAiModelInfo | null>> = new Map();\n\n  static getInstance(): CivitAiService {\n    if (!CivitAiService.instance) {\n      CivitAiService.instance = new CivitAiService();\n    }\n    return CivitAiService.instance;\n  }\n\n  /**\n   * Get trigger words for a LoRA file\n   */\n  async getTriggerWords(loraFileName: string): Promise<string[]> {\n    try {\n      const modelInfo = await this.getModelInfo(loraFileName);\n      if (!modelInfo) {\n        return [];\n      }\n\n      return this.extractTriggerWordsFromModelInfo(modelInfo);\n    } catch (error) {\n      console.warn(`Super LoRA Loader: Failed to get trigger words for ${loraFileName}:`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Get model information from CivitAI\n   */\n  async getModelInfo(loraFileName: string): Promise<CivitAiModelInfo | null> {\n    // Check cache first\n    if (this.cache.has(loraFileName)) {\n      return this.cache.get(loraFileName)!;\n    }\n\n    // Check if request is already pending\n    if (this.pendingRequests.has(loraFileName)) {\n      return await this.pendingRequests.get(loraFileName)!;\n    }\n\n    // Create new request\n    const requestPromise = this.fetchModelInfo(loraFileName);\n    this.pendingRequests.set(loraFileName, requestPromise);\n\n    try {\n      const result = await requestPromise;\n      this.pendingRequests.delete(loraFileName);\n      \n      if (result) {\n        this.cache.set(loraFileName, result);\n      }\n      \n      return result;\n    } catch (error) {\n      this.pendingRequests.delete(loraFileName);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch model info from backend API\n   */\n  private async fetchModelInfo(loraFileName: string): Promise<CivitAiModelInfo | null> {\n    try {\n      // Call our backend endpoint that handles CivitAI integration\n      const response = await fetch('/super_lora/civitai_info', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          lora_filename: loraFileName\n        })\n      });\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          // Model not found on CivitAI\n          return null;\n        }\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      if (data.error) {\n        console.warn(`Super LoRA Loader: CivitAI API error for ${loraFileName}:`, data.error);\n        return null;\n      }\n\n      return data;\n    } catch (error) {\n      console.warn(`Super LoRA Loader: Failed to fetch model info for ${loraFileName}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Extract trigger words from CivitAI model info\n   */\n  private extractTriggerWordsFromModelInfo(modelInfo: CivitAiModelInfo): string[] {\n    const triggerWords: string[] = [];\n\n    // Extract from trainedWords array\n    if (modelInfo.trainedWords && Array.isArray(modelInfo.trainedWords)) {\n      for (const item of modelInfo.trainedWords) {\n        if (typeof item === 'string') {\n          triggerWords.push(item);\n        } else if (item && typeof item === 'object' && 'word' in item) {\n          triggerWords.push(item.word);\n        }\n      }\n    }\n\n    // Limit to top 3 trigger words\n    return triggerWords.slice(0, 3);\n  }\n\n  /**\n   * Clear the cache\n   */\n  clearCache(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Get cache size for debugging\n   */\n  getCacheSize(): number {\n    return this.cache.size;\n  }\n\n  /**\n   * Check if auto-fetch is enabled in settings\n   */\n  private isAutoFetchEnabled(): boolean {\n    // This would check the global ComfyUI settings\n    // For now, we'll assume it's enabled by default\n    try {\n      const app = (window as any).app;\n      if (app && app.ui && app.ui.settings) {\n        return app.ui.settings.getSettingValue('superLora.autoFetchTriggerWords', true);\n      }\n    } catch (error) {\n      console.warn('Super LoRA Loader: Failed to check auto-fetch setting:', error);\n    }\n    \n    return true;\n  }\n\n  /**\n   * Auto-populate trigger words for a LoRA if enabled\n   */\n  async autoPopulateTriggerWords(loraFileName: string): Promise<string> {\n    if (!this.isAutoFetchEnabled() || !loraFileName || loraFileName === 'None') {\n      return '';\n    }\n\n    try {\n      const triggerWords = await this.getTriggerWords(loraFileName);\n      return triggerWords.length > 0 ? triggerWords[0] : '';\n    } catch (error) {\n      console.warn(`Super LoRA Loader: Auto-populate failed for ${loraFileName}:`, error);\n      return '';\n    }\n  }\n}\n","/**\n * TagSetService\n * Simple persistent store for available tag names.\n * Uses localStorage for persistence and provides basic CRUD operations.\n */\n\nexport class TagSetService {\n  private static instance: TagSetService | null = null;\n  private static readonly STORAGE_KEY = 'superlora_tagset_v1';\n  private static readonly DEFAULT_TAGS = ['General', 'Character', 'Style', 'Quality', 'Effect'];\n\n  static getInstance(): TagSetService {\n    if (!TagSetService.instance) {\n      TagSetService.instance = new TagSetService();\n    }\n    return TagSetService.instance;\n  }\n\n  private read(): string[] {\n    try {\n      const raw = localStorage.getItem(TagSetService.STORAGE_KEY);\n      if (raw) {\n        const arr = JSON.parse(raw);\n        if (Array.isArray(arr)) return this.normalize(arr);\n      }\n    } catch {}\n    // Initialize with defaults\n    this.write(TagSetService.DEFAULT_TAGS);\n    return [...TagSetService.DEFAULT_TAGS];\n  }\n\n  private write(tags: string[]): void {\n    try {\n      const unique = this.normalize(tags);\n      localStorage.setItem(TagSetService.STORAGE_KEY, JSON.stringify(unique));\n    } catch {}\n  }\n\n  private normalize(tags: string[]): string[] {\n    const set = new Set<string>();\n    for (const t of tags) {\n      const name = String(t || '').trim();\n      if (!name) continue;\n      set.add(name);\n    }\n    return Array.from(set).sort((a, b) => a.localeCompare(b));\n  }\n\n  getAll(): string[] {\n    return this.read();\n  }\n\n  addTag(name: string): boolean {\n    const n = String(name || '').trim();\n    if (!n) return false;\n    const tags = this.read();\n    if (tags.includes(n)) return false;\n    tags.push(n);\n    this.write(tags);\n    return true;\n  }\n\n  renameTag(oldName: string, newName: string): boolean {\n    const src = String(oldName || '').trim();\n    const dst = String(newName || '').trim();\n    if (!src || !dst || src === dst) return false;\n    const tags = this.read();\n    const idx = tags.indexOf(src);\n    if (idx === -1) return false;\n    // Avoid duplicates on rename\n    if (!tags.includes(dst)) {\n      tags[idx] = dst;\n    } else {\n      tags.splice(idx, 1);\n    }\n    this.write(tags);\n    return true;\n  }\n\n  deleteTag(name: string): boolean {\n    const n = String(name || '').trim();\n    if (!n) return false;\n    const tags = this.read();\n    const idx = tags.indexOf(n);\n    if (idx === -1) return false;\n    tags.splice(idx, 1);\n    // Ensure fallback exists\n    if (!tags.includes('General')) tags.push('General');\n    this.write(tags);\n    return true;\n  }\n}\n\n\n","/**\n * Overlay and toast utilities shared across the Super LoRA node and ND Super Selector enhancer.\n */\n\nexport type OverlayItem = {\n  id: string;\n  label: string;\n  disabled?: boolean;\n};\n\nexport type OverlayAction = {\n  icon: string;\n  title?: string;\n  onClick: (id: string) => void;\n};\n\nexport interface OverlayOptions {\n  title: string;\n  placeholder: string;\n  items: OverlayItem[];\n  onChoose: (id: string) => void;\n  allowCreate?: boolean;\n  enableMultiToggle?: boolean;\n  onChooseMany?: (ids: string[]) => void;\n  rightActions?: OverlayAction[];\n  onRightAction?: (id: string) => void;\n  rightActionIcon?: string;\n  rightActionTitle?: string;\n  folderChips?: string[];\n  baseFolderName?: string;\n  currentValue?: string;\n}\n\nexport type ToastType = 'success' | 'warning' | 'error' | 'info';\n\nexport class OverlayService {\n  private static instance: OverlayService;\n  private stylesInjected = false;\n\n  static getInstance(): OverlayService {\n    if (!OverlayService.instance) {\n      OverlayService.instance = new OverlayService();\n    }\n    return OverlayService.instance;\n  }\n\n  showSearchOverlay(options: OverlayOptions): void {\n    this.ensureOverlayStyles();\n\n    const baseFolderKey = options.baseFolderName || 'files';\n    const restoredState = this.restoreOverlayState(baseFolderKey);\n\n    this.removeExistingOverlays();\n\n    const items = options.items ?? [];\n    const overlay = document.createElement('div');\n    overlay.setAttribute('data-super-lora-overlay', '1');\n    overlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      background: rgba(0,0,0,0.55);\n      z-index: 2147483600;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(2px);\n    `;\n\n    const panel = document.createElement('div');\n    panel.style.cssText = `\n      width: 560px;\n      max-height: 70vh;\n      background: #222;\n      border: 1px solid #444;\n      border-radius: 8px;\n      box-shadow: 0 12px 30px rgba(0,0,0,0.4);\n      color: #fff;\n      font-family: 'Segoe UI', Arial, sans-serif;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    `;\n\n    const header = document.createElement('div');\n    header.textContent = options.title;\n    header.style.cssText = `\n      padding: 12px 14px;\n      font-weight: 600;\n      border-bottom: 1px solid #444;\n      background: #2a2a2a;\n    `;\n\n    const search = document.createElement('input');\n    search.type = 'text';\n    search.placeholder = options.placeholder;\n    search.style.cssText = `\n      margin: 10px 12px;\n      padding: 10px 12px;\n      border-radius: 6px;\n      border: 1px solid #555;\n      background: #1a1a1a;\n      color: #fff;\n      outline: none;\n    `;\n\n    const multiEnabled = !!options.enableMultiToggle;\n    let multiMode = false;\n    const selectedIds = new Set<string>();\n    const ROOT_KEY = '__ROOT__';\n\n    const controls = document.createElement('div');\n    controls.style.cssText = `\n      display: ${multiEnabled ? 'flex' : 'none'};\n      align-items: center;\n      justify-content: flex-end;\n      gap: 10px;\n      padding: 0 12px 6px 12px;\n      color: #ddd;\n      font-size: 12px;\n    `;\n\n    const multiLabel = document.createElement('label');\n    multiLabel.className = 'nd-overlay-multi-toggle';\n    const multiToggle = document.createElement('input');\n    multiToggle.type = 'checkbox';\n    multiToggle.className = 'nd-overlay-multi-toggle-checkbox';\n    multiToggle.addEventListener('change', () => {\n      multiMode = !!multiToggle.checked;\n      render(search.value);\n      renderFooter();\n    });\n    const multiText = document.createElement('span');\n    multiText.textContent = 'Multi-select';\n    multiText.className = 'nd-overlay-multi-toggle-label';\n    multiLabel.appendChild(multiToggle);\n    multiLabel.appendChild(multiText);\n    controls.appendChild(multiLabel);\n\n  const chipWrap = document.createElement('div');\n  chipWrap.className = 'nd-overlay-chips-container';\n\n  const subChipWrap = document.createElement('div');\n  subChipWrap.className = 'nd-overlay-subchips-container';\n  subChipWrap.style.display = 'none';\n\n    let folderFeatureEnabled = false;\n    const activeFolders = new Set<string>(restoredState.activeFolders);\n    const activeSubfolders = new Set<string>(restoredState.activeSubfolders);\n\n    const listWrap = document.createElement('div');\n    listWrap.style.cssText = 'overflow: auto; padding: 6px 4px 10px 4px;';\n\n    const list = document.createElement('div');\n    list.style.cssText = 'display: flex; flex-direction: column; gap: 4px; padding: 0 8px 8px 8px;';\n\n    const empty = document.createElement('div');\n    empty.textContent = 'No results';\n    empty.style.cssText = 'padding: 12px; color: #aaa; display: none;';\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        closeOverlay();\n      }\n    };\n\n    const closeOverlay = () => {\n      try { overlay.remove(); } catch {}\n      document.removeEventListener('keydown', handleKeyDown);\n    this.persistOverlayState(baseFolderKey, activeFolders, activeSubfolders);\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    overlay.addEventListener('click', (event) => {\n      if (event.target === overlay) closeOverlay();\n    });\n\n    const renderChips = (folderCounts: Record<string, number>) => {\n      chipWrap.innerHTML = '';\n      const header = document.createElement('div');\n      header.className = 'nd-overlay-chip-header';\n      header.textContent = 'Folders';\n      chipWrap.appendChild(header);\n\n      const chipList = document.createElement('div');\n      chipList.className = 'nd-overlay-chip-list';\n      chipWrap.appendChild(chipList);\n\n      const allFolderNames = Object.keys(folderCounts)\n        .sort((a, b) => {\n          if (a === ROOT_KEY) return -1;\n          if (b === ROOT_KEY) return 1;\n          return a.localeCompare(b);\n        });\n\n      const baseFolderName = options.baseFolderName || 'files';\n\n      allFolderNames.forEach((name) => {\n        const chip = document.createElement('button');\n        chip.type = 'button';\n        chip.className = 'nd-overlay-chip';\n        const isActive = activeFolders.has(name);\n        if (isActive) chip.classList.add('is-active');\n\n        const icon = document.createElement('span');\n        icon.className = 'nd-overlay-chip-icon';\n        icon.textContent = name === ROOT_KEY ? '🏠' : '📁';\n\n        const label = document.createElement('span');\n        label.className = 'nd-overlay-chip-label';\n        label.textContent = (name === ROOT_KEY) ? `${baseFolderName} (root)` : name;\n\n        const count = document.createElement('span');\n        count.className = 'nd-overlay-chip-count';\n        count.textContent = String(folderCounts[name] ?? 0);\n\n        chip.appendChild(icon);\n        chip.appendChild(label);\n        chip.appendChild(count);\n\n        chip.title = name === ROOT_KEY ? `${baseFolderName} root` : name;\n        chip.addEventListener('click', () => {\n          if (activeFolders.has(name)) {\n            activeFolders.delete(name);\n          } else {\n            activeFolders.add(name);\n          }\n          this.persistOverlayState(baseFolderKey, activeFolders, activeSubfolders);\n          render(search.value);\n          renderSubChips();\n        });\n\n        chipList.appendChild(chip);\n      });\n    };\n\n    const renderSubChips = () => {\n      subChipWrap.innerHTML = '';\n      const show = activeFolders.size > 0;\n      subChipWrap.style.display = show ? 'flex' : 'none';\n      if (!show) return;\n\n      const subCountsByKey: Record<string, number> = {};\n      const subToTops: Record<string, Set<string>> = {};\n      items.forEach((item) => {\n        const parts = item.id.split(/[\\\\/]/);\n        const top = parts.length > 1 ? parts[0] : ROOT_KEY;\n        if (top === ROOT_KEY) return;\n        if (!activeFolders.has(top)) return;\n        const sub = parts.length > 2 ? parts[1] : ROOT_KEY;\n        if (sub === ROOT_KEY) {\n          const key = `${top}/${ROOT_KEY}`;\n          subCountsByKey[key] = (subCountsByKey[key] || 0) + 1;\n          if (!subToTops['(root)']) subToTops['(root)'] = new Set<string>();\n          subToTops['(root)'].add(top);\n          return;\n        }\n        const key = `${top}/${sub}`;\n        subCountsByKey[key] = (subCountsByKey[key] || 0) + 1;\n        if (!subToTops[sub]) subToTops[sub] = new Set<string>();\n        subToTops[sub].add(top);\n      });\n\n      const header = document.createElement('div');\n      header.className = 'nd-overlay-chip-header';\n      header.textContent = activeFolders.size === 1 ? 'Subfolders' : 'Subfolders (selected)';\n      subChipWrap.appendChild(header);\n\n      const chipList = document.createElement('div');\n      chipList.className = 'nd-overlay-chip-list';\n      subChipWrap.appendChild(chipList);\n\n      Object.keys(subCountsByKey).sort().forEach((key) => {\n        const [top, sub] = key.split('/');\n        const isRootSub = (sub === ROOT_KEY);\n        const duplicate = subToTops[sub]?.size && subToTops[sub]!.size > 1;\n        const labelText = isRootSub ? `${top} (root)` : duplicate ? `${top} / ${sub}` : sub;\n        const countVal = subCountsByKey[key] ?? 0;\n\n        const chip = document.createElement('button');\n        chip.type = 'button';\n        chip.className = 'nd-overlay-chip nd-overlay-chip--sub';\n        const isActive = activeSubfolders.has(key);\n        if (isActive) chip.classList.add('is-active');\n\n        const icon = document.createElement('span');\n        icon.className = 'nd-overlay-chip-icon';\n        icon.textContent = isRootSub ? '🗂️' : '↳';\n\n        const label = document.createElement('span');\n        label.className = 'nd-overlay-chip-label';\n        label.textContent = labelText;\n\n        const count = document.createElement('span');\n        count.className = 'nd-overlay-chip-count';\n        count.textContent = String(countVal);\n\n        chip.appendChild(icon);\n        chip.appendChild(label);\n        chip.appendChild(count);\n\n        chip.title = `${top}/${isRootSub ? '(root)' : sub}`;\n        chip.addEventListener('click', () => {\n          if (activeSubfolders.has(key)) {\n            activeSubfolders.delete(key);\n          } else {\n            activeSubfolders.add(key);\n          }\n          this.persistOverlayState(baseFolderKey, activeFolders, activeSubfolders);\n          render(search.value);\n          renderSubChips();\n        });\n\n        chipList.appendChild(chip);\n      });\n    };\n\n    const render = (term: string) => {\n      list.innerHTML = '';\n      const query = (term || '').trim().toLowerCase();\n      const termFiltered = query ? items.filter((item) => item.label.toLowerCase().includes(query)) : items;\n\n      if (folderFeatureEnabled) {\n        const folderCounts: Record<string, number> = {};\n        termFiltered.forEach((item) => {\n          const parts = item.id.split(/[\\\\/]/);\n          const top = parts.length > 1 ? parts[0] : ROOT_KEY;\n          folderCounts[top] = (folderCounts[top] || 0) + 1;\n        });\n        renderChips(folderCounts);\n      }\n\n      let filtered = termFiltered;\n      if (folderFeatureEnabled && activeFolders.size > 0) {\n        filtered = termFiltered.filter((item) => {\n          const parts = item.id.split(/[\\\\/]/);\n          const top = parts.length > 1 ? parts[0] : ROOT_KEY;\n          return activeFolders.has(top);\n        });\n\n        if (activeSubfolders.size > 0) {\n          filtered = filtered.filter((item) => {\n            const parts = item.id.split(/[\\\\/]/);\n            const top = parts.length > 1 ? parts[0] : '';\n            if (!top) return false;\n            const sub = parts.length > 2 ? parts[1] : ROOT_KEY;\n            const key = `${top}/${sub}`;\n            return activeSubfolders.has(key);\n          });\n        }\n      }\n\n      if (options.allowCreate && query) {\n        const exact = items.some((item) => item.label.toLowerCase() === query);\n        if (!exact) {\n          filtered = [{ id: term, label: `Create \"${term}\"` }, ...filtered];\n        }\n      }\n\n      empty.style.display = filtered.length ? 'none' : 'block';\n      try { header.textContent = `${options.title} (${filtered.length}/${items.length})`; } catch {}\n\n      const maxToShow = Math.min(2000, filtered.length);\n      filtered.slice(0, maxToShow).forEach((item) => {\n        const row = document.createElement('div');\n        row.style.cssText = 'display: flex; align-items: center; gap: 8px; padding: 0;';\n\n        const leftBtn = document.createElement('button');\n        leftBtn.type = 'button';\n        leftBtn.className = 'nd-overlay-item-button';\n        leftBtn.disabled = !!item.disabled;\n\n  const rawParts = item.id.split(/[\\\\/]/);\n  const parts = rawParts.filter(Boolean);\n        const folderPath = parts.slice(0, -1);\n        const lastSegment = parts[parts.length - 1] || item.label;\n        const pathDisplay = folderPath.length ? folderPath.join(' / ') : '(root)';\n        const isFolder = !/\\.[^./\\\\]{2,}$/i.test(lastSegment);\n        const iconGlyph = isFolder ? '📁' : '📄';\n        leftBtn.title = item.id;\n\n        const checkboxSpan = document.createElement('span');\n        checkboxSpan.className = 'nd-overlay-item-checkbox';\n  checkboxSpan.dataset.state = 'hidden';\n\n        const iconSpan = document.createElement('span');\n        iconSpan.className = 'nd-overlay-item-icon';\n        iconSpan.textContent = iconGlyph;\n        iconSpan.setAttribute('aria-hidden', 'true');\n\n        const textWrap = document.createElement('div');\n        textWrap.className = 'nd-overlay-item-text';\n\n        const primaryLine = document.createElement('div');\n        primaryLine.className = 'nd-overlay-item-title';\n        primaryLine.textContent = item.label;\n\n        if (item.disabled) {\n          const badge = document.createElement('span');\n          badge.className = 'nd-overlay-item-badge';\n          badge.textContent = 'added';\n          primaryLine.appendChild(badge);\n        }\n\n        const secondaryLine = document.createElement('div');\n        secondaryLine.className = 'nd-overlay-item-path';\n        secondaryLine.textContent = pathDisplay;\n        secondaryLine.style.display = folderPath.length ? 'block' : 'none';\n\n        textWrap.appendChild(primaryLine);\n        textWrap.appendChild(secondaryLine);\n\n        leftBtn.appendChild(checkboxSpan);\n        leftBtn.appendChild(iconSpan);\n        leftBtn.appendChild(textWrap);\n\n        const applyState = () => {\n          const isSelected = selectedIds.has(item.id);\n          if (!multiMode) {\n            checkboxSpan.dataset.state = 'hidden';\n          } else {\n            checkboxSpan.dataset.state = isSelected ? 'checked' : 'unchecked';\n          }\n          leftBtn.classList.toggle('is-disabled', !!item.disabled);\n          leftBtn.classList.toggle('is-selected', multiMode && isSelected);\n        };\n\n        applyState();\n\n        leftBtn.addEventListener('click', () => {\n          if (item.disabled) return;\n          if (!multiMode) {\n            options.onChoose(item.id);\n            closeOverlay();\n            return;\n          }\n          if (selectedIds.has(item.id)) selectedIds.delete(item.id); else selectedIds.add(item.id);\n          applyState();\n          renderFooter();\n        });\n        row.appendChild(leftBtn);\n\n        const actions: OverlayAction[] = [];\n        if (options.rightActions && options.rightActions.length) {\n          actions.push(...options.rightActions);\n        } else if (options.onRightAction) {\n          actions.push({ icon: options.rightActionIcon || '🗑', title: options.rightActionTitle, onClick: options.onRightAction });\n        }\n\n        if (actions.length && !item.disabled) {\n          actions.forEach((action) => {\n            const rightBtn = document.createElement('button');\n            rightBtn.type = 'button';\n            rightBtn.textContent = action.icon;\n            if (action.title) rightBtn.title = action.title;\n            rightBtn.style.cssText = `\n              margin-left: 8px;\n              padding: 10px 12px;\n              background: #3a2a2a;\n              color: #fff;\n              border: 1px solid #5a3a3a;\n              border-radius: 6px;\n              cursor: pointer;\n            `;\n            rightBtn.addEventListener('click', (event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              action.onClick(item.id);\n            });\n            row.appendChild(rightBtn);\n          });\n        }\n\n        list.appendChild(row);\n      });\n\n      renderFooter();\n    };\n\n    const footer = document.createElement('div');\n    footer.style.cssText = `\n      display: none;\n      padding: 10px 12px;\n      border-top: 1px solid #444;\n      background: #1e1e1e;\n      gap: 8px;\n      justify-content: flex-end;\n    `;\n\n    const clearBtn = document.createElement('button');\n    clearBtn.type = 'button';\n    clearBtn.textContent = 'Clear';\n    clearBtn.style.cssText = 'padding: 8px 12px; border-radius: 6px; background: #333; color: #fff; border: 1px solid #555; cursor: pointer;';\n    clearBtn.addEventListener('click', () => {\n      selectedIds.clear();\n      render(search.value);\n    });\n\n    const cancelBtn = document.createElement('button');\n    cancelBtn.type = 'button';\n    cancelBtn.textContent = 'Cancel';\n    cancelBtn.style.cssText = 'padding: 8px 12px; border-radius: 6px; background: #444; color: #fff; border: 1px solid #555; cursor: pointer;';\n    cancelBtn.addEventListener('click', () => closeOverlay());\n\n    const addBtn = document.createElement('button');\n    addBtn.type = 'button';\n    addBtn.textContent = 'Add Selected (0)';\n    addBtn.style.cssText = 'padding: 8px 12px; border-radius: 6px; background: #1976d2; color: #fff; border: 1px solid #0d47a1; cursor: pointer; opacity: 0.6;';\n    addBtn.disabled = true;\n    addBtn.addEventListener('click', () => {\n      if (!multiMode) return;\n      const ids = Array.from(selectedIds);\n      if (!ids.length) return;\n      if (typeof options.onChooseMany === 'function') {\n        options.onChooseMany(ids);\n      } else {\n        ids.forEach((id) => options.onChoose(id));\n      }\n      closeOverlay();\n    });\n\n    footer.appendChild(clearBtn);\n    footer.appendChild(cancelBtn);\n    footer.appendChild(addBtn);\n\n    const renderFooter = () => {\n      const count = selectedIds.size;\n      addBtn.textContent = `Add Selected (${count})`;\n      addBtn.disabled = count === 0;\n      addBtn.style.opacity = count === 0 ? '0.6' : '1';\n      footer.style.display = (multiEnabled && multiMode) ? 'flex' : 'none';\n    };\n\n    listWrap.appendChild(empty);\n    listWrap.appendChild(list);\n    panel.appendChild(header);\n    panel.appendChild(search);\n    panel.appendChild(controls);\n\n    const allowFolderChips = (Array.isArray(options.folderChips) && options.folderChips.length > 0)\n      || items.some((item) => /[\\\\/]/.test(item.id));\n    if (allowFolderChips) {\n      const initialCounts: Record<string, number> = {};\n      items.forEach((item) => {\n        const parts = item.id.split(/[\\\\/]/);\n        const top = parts.length > 1 ? parts[0] : ROOT_KEY;\n        initialCounts[top] = (initialCounts[top] || 0) + 1;\n      });\n      if (Object.keys(initialCounts).length) {\n        folderFeatureEnabled = true;\n        renderChips(initialCounts);\n        panel.appendChild(chipWrap);\n        panel.appendChild(subChipWrap);\n        renderSubChips();\n      }\n    }\n\n    panel.appendChild(listWrap);\n    panel.appendChild(footer);\n    overlay.appendChild(panel);\n    document.body.appendChild(overlay);\n\n    search.addEventListener('input', () => render(search.value));\n    setTimeout(() => {\n      try { search.focus(); } catch {}\n      render('');\n      renderFooter();\n    }, 0);\n  }\n\n  showToast(message: string, type: ToastType = 'info'): void {\n    console.log(`Super LoRA Loader [${type}]: ${message}`);\n\n    const colors: Record<ToastType, string> = {\n      success: '#28a745',\n      warning: '#ffc107',\n      error: '#dc3545',\n      info: '#17a2b8'\n    };\n\n    const toast = document.createElement('div');\n    toast.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${colors[type]};\n      color: white;\n      padding: 14px 20px;\n      border-radius: 6px;\n      z-index: 10000;\n      font-family: 'Segoe UI', Arial, sans-serif;\n      font-size: 14px;\n      font-weight: 500;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      opacity: 0;\n      transition: all 0.3s ease;\n      max-width: 400px;\n      word-wrap: break-word;\n      border-left: 4px solid rgba(255,255,255,0.3);\n    `;\n    toast.textContent = message;\n\n    document.body.appendChild(toast);\n\n    requestAnimationFrame(() => {\n      toast.style.opacity = '1';\n      toast.style.transform = 'translateY(0)';\n    });\n\n    const timeout = type === 'error' ? 5000 : 3000;\n    setTimeout(() => {\n      toast.style.opacity = '0';\n      toast.style.transform = 'translateY(-10px)';\n      setTimeout(() => {\n        try { toast.remove(); } catch {}\n      }, 300);\n    }, timeout);\n  }\n\n  private ensureOverlayStyles(): void {\n    if (this.stylesInjected) return;\n    try {\n      if (typeof document === 'undefined') return;\n      const existing = document.querySelector('style[data-super-lora-overlay-style=\"1\"]');\n      if (existing) {\n        this.stylesInjected = true;\n        return;\n      }\n      const style = document.createElement('style');\n      style.setAttribute('data-super-lora-overlay-style', '1');\n      style.textContent = `\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-button {\n          position: relative;\n          width: 100%;\n          display: flex;\n          align-items: flex-start;\n          gap: 10px;\n          padding: 8px 10px;\n          background: #252525;\n          border: 1px solid #3a3a3a;\n          border-radius: 6px;\n          color: #fff;\n          cursor: pointer;\n          text-align: left;\n          transition: background 0.15s ease, border-color 0.15s ease, box-shadow 0.15s ease;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-button:hover:not(.is-disabled) {\n          background: #2c2c2c;\n          border-color: #4a4a4a;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-button.is-disabled {\n          background: #2a2a2a;\n          color: #888;\n          cursor: not-allowed;\n          border-color: #343434;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-button.is-selected {\n          background: #263238;\n          border-color: #4a90e2;\n          box-shadow: inset 0 0 0 1px rgba(74, 144, 226, 0.35);\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-checkbox {\n          width: 16px;\n          height: 16px;\n          min-width: 16px;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          border: 1px solid #4a4a4a;\n          border-radius: 4px;\n          background: #1d1d1d;\n          color: #8ab4f8;\n          font-size: 12px;\n          line-height: 1;\n          transition: border-color 0.15s ease, background 0.15s ease;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-checkbox[data-state=\"hidden\"] {\n          opacity: 0;\n          visibility: hidden;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-checkbox[data-state=\"unchecked\"]::after {\n          content: '';\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-checkbox[data-state=\"checked\"] {\n          border-color: #4a90e2;\n          background: rgba(74, 144, 226, 0.18);\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-checkbox[data-state=\"checked\"]::after {\n          content: '✔';\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-checkbox::after {\n          font-size: 10px;\n          color: #8ab4f8;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-icon {\n          font-size: 16px;\n          line-height: 1.5;\n          opacity: 0.85;\n          min-width: 18px;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-text {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          gap: 2px;\n          overflow: hidden;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-title {\n          font-size: 14px;\n          font-weight: 500;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-path {\n          font-size: 12px;\n          color: #9aa4b4;\n          opacity: 0.85;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-item-badge {\n          font-size: 11px;\n          color: #9aa4b4;\n          border: 1px solid #4a4f55;\n          border-radius: 999px;\n          padding: 1px 6px;\n          text-transform: uppercase;\n          letter-spacing: 0.02em;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chips-container,\n        [data-super-lora-overlay=\"1\"] .nd-overlay-subchips-container {\n          display: flex;\n          flex-direction: column;\n          gap: 6px;\n          padding: 0 12px 6px 12px;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip-header {\n          font-size: 12px;\n          text-transform: uppercase;\n          letter-spacing: 0.08em;\n          color: #9aa4b4;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip-list {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip {\n          display: inline-flex;\n          align-items: center;\n          gap: 6px;\n          padding: 6px 10px;\n          border-radius: 999px;\n          border: 1px solid #3a3a3a;\n          background: #252525;\n          color: #fff;\n          cursor: pointer;\n          font-size: 12px;\n          transition: background 0.15s ease, border-color 0.15s ease, box-shadow 0.15s ease;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip.is-active {\n          border-color: #4a90e2;\n          background: rgba(74, 144, 226, 0.18);\n          box-shadow: inset 0 0 0 1px rgba(74, 144, 226, 0.35);\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip-icon {\n          font-size: 14px;\n          opacity: 0.85;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip-label {\n          font-weight: 500;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip-count {\n          font-size: 11px;\n          background: rgba(255, 255, 255, 0.08);\n          padding: 0 6px;\n          border-radius: 999px;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip--sub {\n          font-size: 11px;\n          padding: 5px 9px;\n          background: #1f1f1f;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-chip--sub.is-active {\n          background: rgba(255, 255, 255, 0.06);\n          border-color: #66aaff;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-multi-toggle {\n          display: inline-flex;\n          align-items: center;\n          gap: 8px;\n          padding: 4px 8px;\n          border-radius: 999px;\n          border: 1px solid #3a3a3a;\n          background: #1f1f1f;\n          color: #fff;\n          font-size: 12px;\n          cursor: pointer;\n          user-select: none;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-multi-toggle-checkbox {\n          appearance: none;\n          width: 16px;\n          height: 16px;\n          border-radius: 4px;\n          border: 1px solid #4a4a4a;\n          background: #111;\n          position: relative;\n          cursor: pointer;\n          transition: border-color 0.15s ease, background 0.15s ease;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-multi-toggle-checkbox:checked {\n          border-color: #4a90e2;\n          background: rgba(74, 144, 226, 0.2);\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-multi-toggle-checkbox:checked::after {\n          content: '✔';\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -55%);\n          font-size: 10px;\n          color: #8ab4f8;\n        }\n        [data-super-lora-overlay=\"1\"] .nd-overlay-multi-toggle-label {\n          font-weight: 500;\n          letter-spacing: 0.01em;\n        }\n      `;\n      document.head.appendChild(style);\n      this.stylesInjected = true;\n    } catch {}\n  }\n\n  private removeExistingOverlays(): void {\n    try {\n      document.querySelectorAll('[data-super-lora-overlay=\"1\"]').forEach((el) => el.remove());\n    } catch {}\n  }\n\n  private restoreOverlayState(baseFolderKey: string): { activeFolders: string[]; activeSubfolders: string[] } {\n    try {\n      const folderRaw = sessionStorage.getItem(this.getFolderStorageKey(baseFolderKey));\n      const subRaw = sessionStorage.getItem(this.getSubfolderStorageKey(baseFolderKey));\n      const activeFolders = folderRaw ? JSON.parse(folderRaw) : [];\n      const activeSubfolders = subRaw ? JSON.parse(subRaw) : [];\n      return {\n        activeFolders: Array.isArray(activeFolders) ? activeFolders : [],\n        activeSubfolders: Array.isArray(activeSubfolders) ? activeSubfolders : []\n      };\n    } catch {\n      return { activeFolders: [], activeSubfolders: [] };\n    }\n  }\n\n  private persistOverlayState(baseFolderKey: string, folders: Set<string>, subfolders: Set<string>): void {\n    try {\n      sessionStorage.setItem(this.getFolderStorageKey(baseFolderKey), JSON.stringify(Array.from(folders)));\n      sessionStorage.setItem(this.getSubfolderStorageKey(baseFolderKey), JSON.stringify(Array.from(subfolders)));\n    } catch {}\n  }\n\n  private getFolderStorageKey(baseFolderKey?: string): string {\n    const suffix = baseFolderKey ? `_${baseFolderKey}` : '';\n    return `superlora_folder_filters${suffix}`;\n  }\n\n  private getSubfolderStorageKey(baseFolderKey?: string): string {\n    const suffix = baseFolderKey ? `_${baseFolderKey}` : '';\n    return `superlora_subfolder_filters${suffix}`;\n  }\n}\n\n","import { OverlayService } from '@/services/OverlayService';\n\ntype VersionInfo = {\n  checkedAt: string;\n  localVersion: {\n    version: string;\n    builtAt?: string;\n  };\n  latestVersion?: string;\n  publishedAt?: string;\n  releaseUrl?: string;\n  hasUpdate: boolean;\n  raw?: {\n    tag?: string;\n    name?: string;\n    notes?: string;\n    prerelease?: boolean;\n  };\n};\n\ntype CheckOptions = {\n  force?: boolean;\n  silent?: boolean;\n};\n\nexport class UpdateService {\n  private static instance: UpdateService;\n\n  private status: VersionInfo | null = null;\n  private checkingPromise: Promise<VersionInfo> | null = null;\n  private lastNotifiedVersion: string | null = null;\n\n  static getInstance(): UpdateService {\n    if (!UpdateService.instance) {\n      UpdateService.instance = new UpdateService();\n    }\n    return UpdateService.instance;\n  }\n\n  getStatus(): VersionInfo | null {\n    return this.status;\n  }\n\n  async initialize(): Promise<void> {\n    try {\n      const status = await this.checkForUpdates({ silent: true });\n      this.maybeNotify(status);\n    } catch (error) {\n      console.warn('ND Super Nodes: update check failed to initialize', error);\n    }\n  }\n\n  async checkForUpdates(options: CheckOptions = {}): Promise<VersionInfo> {\n    const { force = false, silent = false } = options;\n\n    if (this.checkingPromise) {\n      return this.checkingPromise;\n    }\n\n    if (!force && this.status) {\n      if (!silent) {\n        this.maybeNotify(this.status, { showUpToDate: true });\n      }\n      return this.status;\n    }\n\n    this.checkingPromise = this.fetchStatus(force)\n      .then((status) => {\n        this.status = status;\n        if (!silent) {\n          this.maybeNotify(status, { showUpToDate: true });\n        } else {\n          this.maybeNotify(status);\n        }\n        return status;\n      })\n      .catch((error) => {\n        console.warn('ND Super Nodes: update check failed', error);\n        if (!silent) {\n          OverlayService.getInstance().showToast('ND Super Nodes update check failed. See console for details.', 'warning');\n        }\n        throw error;\n      })\n      .finally(() => {\n        this.checkingPromise = null;\n      });\n\n    return this.checkingPromise;\n  }\n\n  openReleasePage(): void {\n    const url = this.status?.releaseUrl || 'https://github.com/HenkDz/nd-super-nodes/releases/latest';\n    try {\n      window.open(url, '_blank', 'noopener,noreferrer');\n    } catch (error) {\n      OverlayService.getInstance().showToast('Unable to open release page. Copy URL from console.', 'warning');\n      console.warn('ND Super Nodes release URL:', url, error);\n    }\n  }\n\n  private async fetchStatus(force: boolean): Promise<VersionInfo> {\n    const url = force ? '/super_lora/version?force=1' : '/super_lora/version';\n    const response = await fetch(url, { cache: force ? 'reload' : 'no-store' });\n\n    if (!response.ok) {\n      const text = await response.text();\n      throw new Error(`HTTP ${response.status}: ${text}`);\n    }\n\n    const payload = (await response.json()) as VersionInfo;\n    return payload;\n  }\n\n  private maybeNotify(status: VersionInfo, options: { showUpToDate?: boolean } = {}): void {\n    if (!status) {\n      return;\n    }\n    const latestVersion = status.latestVersion || status.localVersion?.version;\n    const alreadyNotified = latestVersion && latestVersion === this.lastNotifiedVersion;\n\n    if (status.hasUpdate) {\n      if (alreadyNotified) {\n        return;\n      }\n      this.lastNotifiedVersion = latestVersion || null;\n      const messageParts = [\n        `🚀 ND Super Nodes v${latestVersion} available`,\n        'Run update.ps1 / update.sh in your node folder to upgrade.',\n      ];\n      OverlayService.getInstance().showToast(messageParts.join('\\n'), 'info');\n      console.info('ND Super Nodes: Update available', status);\n      return;\n    }\n\n    if (options.showUpToDate && !alreadyNotified) {\n      this.lastNotifiedVersion = latestVersion || null;\n      OverlayService.getInstance().showToast('ND Super Nodes is up to date.', 'success');\n    }\n  }\n}\n","/**\n * Generic File Picker Service\n * Provides enhanced file selection with overlay, filters, and multi-select\n * Works with different file types (models, VAEs, LoRAs, etc.)\n */\n\nimport { OverlayService } from '@/services/OverlayService';\nimport { LoraService } from '@/services/LoraService';\n\nexport interface FileTypeConfig {\n  folderName: string;           // ComfyUI folder name (e.g., \"checkpoints\", \"vae\", \"loras\")\n  displayName: string;          // Human-readable name (e.g., \"Models\", \"VAEs\", \"LoRAs\")\n  fileExtensions: string[];     // Supported file extensions\n  icon?: string;                // Optional icon\n  placeholder?: string;         // Search placeholder text\n}\n\nexport interface FileItem {\n  id: string;                   // Value applied to LiteGraph widget (relative path)\n  label: string;                // Display name (filename without extension)\n  path: string;                 // Relative path (matches ComfyUI combo values)\n  fullPath: string;             // Absolute path on disk\n  filename: string;             // Just the filename\n  extension: string;            // File extension\n  size?: number;                // File size in bytes\n  modified?: number;            // Last modified timestamp\n}\n\nexport class FilePickerService {\n  private static instance: FilePickerService;\n  private fileCache: Map<string, FileItem[]> = new Map();\n  private cacheTimestamps: Map<string, number> = new Map();\n  private static readonly REFRESH_DEBOUNCE_MS = 400;\n  private lastRefreshTimestamp = 0;\n  private pendingLoraRefresh: Promise<void> | null = null;\n  private readonly handleGlobalKeyDown = (event: KeyboardEvent) => {\n    if (!this.isRefreshHotkey(event)) {\n      return;\n    }\n    this.onExternalRefresh('hotkey:R');\n  };\n  private readonly handleManualRefreshEvent: EventListener = () => {\n    this.onExternalRefresh('event:nd-super-nodes:refresh-files');\n  };\n\n  private constructor() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    this.setupGlobalRefreshListeners();\n  }\n\n  // Supported file types\n  private static readonly FILE_TYPES: Record<string, FileTypeConfig> = {\n    models: {\n      folderName: 'checkpoints',\n      displayName: 'Models',\n      fileExtensions: ['.ckpt', '.pt', '.pt2', '.bin', '.pth', '.safetensors', '.pkl', '.sft'],\n      icon: '🏗️',\n      placeholder: 'Search models...'\n    },\n    vae: {\n      folderName: 'vae',\n      displayName: 'VAEs',\n      fileExtensions: ['.ckpt', '.pt', '.pt2', '.bin', '.pth', '.safetensors', '.pkl', '.sft'],\n      icon: '🎨',\n      placeholder: 'Search VAEs...'\n    },\n    loras: {\n      folderName: 'loras',\n      displayName: 'LoRAs',\n      fileExtensions: ['.ckpt', '.pt', '.pt2', '.bin', '.pth', '.safetensors', '.pkl', '.sft'],\n      icon: '🏷️',\n      placeholder: 'Search LoRAs...'\n    },\n    text_encoders: {\n      folderName: 'text_encoders',\n      displayName: 'Text Encoders',\n      fileExtensions: ['.ckpt', '.pt', '.pt2', '.bin', '.pth', '.safetensors', '.pkl', '.sft'],\n      icon: '📝',\n      placeholder: 'Search text encoders...'\n    },\n    diffusion_models: {\n      folderName: 'diffusion_models',\n      displayName: 'Diffusion Models',\n      fileExtensions: ['.ckpt', '.pt', '.pt2', '.bin', '.pth', '.safetensors', '.pkl', '.sft'],\n      icon: '🧠',\n      placeholder: 'Search diffusion models...'\n    },\n    gguf_unet_models: {\n      folderName: 'unet',\n      displayName: 'UNET GGUF Models',\n      fileExtensions: ['.gguf'],\n      icon: '🧠',\n      placeholder: 'Search GGUF UNET models...'\n    },\n    controlnet: {\n      folderName: 'controlnet',\n      displayName: 'ControlNets',\n      fileExtensions: ['.ckpt', '.pt', '.pt2', '.bin', '.pth', '.safetensors', '.pkl', '.sft'],\n      icon: '🎛️',\n      placeholder: 'Search ControlNets...'\n    },\n    upscale_models: {\n      folderName: 'upscale_models',\n      displayName: 'Upscale Models',\n      fileExtensions: ['.ckpt', '.pt', '.pt2', '.bin', '.pth', '.safetensors', '.pkl', '.sft'],\n      icon: '🔍',\n      placeholder: 'Search upscale models...'\n    }\n  };\n\n  static getInstance(): FilePickerService {\n    if (!FilePickerService.instance) {\n      FilePickerService.instance = new FilePickerService();\n    }\n    return FilePickerService.instance;\n  }\n\n  private setupGlobalRefreshListeners(): void {\n    try {\n      if (typeof document !== 'undefined' && document.addEventListener) {\n        document.addEventListener('keydown', this.handleGlobalKeyDown, true);\n      }\n\n      window.addEventListener('nd-super-nodes:refresh-files', this.handleManualRefreshEvent);\n    } catch (error) {\n      console.warn('ND Super Nodes: failed to attach refresh listeners', error);\n    }\n\n    this.tryHookComfyRefreshFunctions();\n  }\n\n  private tryHookComfyRefreshFunctions(attempt = 0): void {\n    const hooked =\n      this.patchRefreshFunctions((window as any)?.app, 'app') ||\n      this.patchRefreshFunctions((window as any)?.api, 'api') ||\n      this.patchRefreshFunctions((window as any)?.ui, 'ui');\n\n    if (hooked || attempt >= 20) {\n      return;\n    }\n\n    setTimeout(() => this.tryHookComfyRefreshFunctions(attempt + 1), 250 * Math.max(1, attempt + 1));\n  }\n\n  private patchRefreshFunctions(source: any, sourceName: string): boolean {\n    if (!source || typeof source !== 'object') {\n      return false;\n    }\n\n    const marker = '__ndSuperNodesRefreshWrapped';\n    const service = this;\n    const seen = new Set<string>();\n    let hookedAny = false;\n\n    let cursor: any = source;\n    while (cursor && cursor !== Object.prototype && cursor !== Function.prototype) {\n      const keys = Object.getOwnPropertyNames(cursor);\n      for (const key of keys) {\n        if (seen.has(key)) {\n          continue;\n        }\n        seen.add(key);\n        if (!/refresh/i.test(key) || key === marker) {\n          continue;\n        }\n\n        const original = (source as any)[key];\n        if (typeof original !== 'function' || original[marker]) {\n          continue;\n        }\n\n        const wrapped = function(this: any, ...args: any[]) {\n          try {\n            service.onExternalRefresh(`${sourceName}.${key}`);\n          } catch (error) {\n            console.warn('ND Super Nodes: refresh hook error', error);\n          }\n          return original.apply(this, args);\n        };\n        (wrapped as any)[marker] = true;\n\n        const descriptor = Object.getOwnPropertyDescriptor(source, key);\n        if (descriptor && 'value' in descriptor) {\n          Object.defineProperty(source, key, {\n            ...descriptor,\n            value: wrapped,\n          });\n        } else {\n          (source as any)[key] = wrapped;\n        }\n\n        hookedAny = true;\n      }\n      cursor = Object.getPrototypeOf(cursor);\n    }\n\n    return hookedAny;\n  }\n\n  private isRefreshHotkey(event: KeyboardEvent): boolean {\n    if (!event || event.repeat) {\n      return false;\n    }\n    if (event.ctrlKey || event.metaKey || event.altKey) {\n      return false;\n    }\n\n    const key = event.key?.toLowerCase();\n    if (key !== 'r') {\n      return false;\n    }\n\n    const target = event.target as EventTarget | null;\n    if (this.isInteractiveElement(target)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private isInteractiveElement(target: EventTarget | null): boolean {\n    if (!target || typeof window === 'undefined') {\n      return false;\n    }\n\n    if (target instanceof HTMLElement) {\n      if (target.isContentEditable) {\n        return true;\n      }\n\n      const interactiveTags = ['INPUT', 'TEXTAREA', 'SELECT'];\n      if (interactiveTags.includes(target.tagName)) {\n        return true;\n      }\n\n      const role = target.getAttribute?.('role');\n      if (role && ['textbox', 'combobox', 'searchbox'].includes(role)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private onExternalRefresh(trigger: string): void {\n    const now = Date.now();\n    if (now - this.lastRefreshTimestamp < FilePickerService.REFRESH_DEBOUNCE_MS) {\n      return;\n    }\n    this.lastRefreshTimestamp = now;\n\n    this.clearCache();\n    this.triggerLinkedServiceRefresh();\n\n    try {\n      window.dispatchEvent(new CustomEvent('nd-super-nodes:files-refreshed', { detail: { trigger } }));\n    } catch {}\n  }\n\n  private triggerLinkedServiceRefresh(): void {\n    try {\n      const loraService = LoraService.getInstance();\n      if (!loraService || typeof loraService.refreshLoraList !== 'function') {\n        return;\n      }\n\n      if (this.pendingLoraRefresh) {\n        return;\n      }\n\n      this.pendingLoraRefresh = Promise.resolve(loraService.refreshLoraList())\n        .catch((error) => {\n          console.warn('ND Super Nodes: Failed to refresh LoRA list after global refresh', error);\n        })\n        .finally(() => {\n          this.pendingLoraRefresh = null;\n        });\n    } catch (error) {\n      console.warn('ND Super Nodes: LoRA refresh hook failed', error);\n    }\n  }\n\n  static getSupportedFileTypes(): Record<string, FileTypeConfig> {\n    return this.FILE_TYPES;\n  }\n\n  /**\n   * Get files for a specific file type\n   */\n  async getFilesForType(fileType: string): Promise<FileItem[]> {\n    const config = FilePickerService.FILE_TYPES[fileType];\n    if (!config) {\n      throw new Error(`Unknown file type: ${fileType}`);\n    }\n\n    // Check cache first (5 minute expiry)\n    const cacheKey = `files_${fileType}`;\n    const cached = this.getCachedFiles(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      // Fetch from our API endpoint (prefer GET for broader server compatibility)\n      const params = new URLSearchParams();\n      params.set('folder_name', config.folderName);\n      params.set('extensions', config.fileExtensions.join(','));\n      // Prefer our aiohttp route under /super_lora/files; fallback to /superlora/files for legacy\n      let response = await fetch(`/super_lora/files?${params.toString()}`, { method: 'GET' });\n      if (!response.ok) {\n        response = await fetch(`/superlora/files?${params.toString()}`, { method: 'GET' });\n      }\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch files: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const files: FileItem[] = data.files?.map((file: any) => {\n        const relativePath: string = file.relative_path || file.path;\n        return {\n          id: relativePath,\n          label: file.name.replace(/\\.(ckpt|pt|pt2|bin|pth|safetensors|pkl|sft|gguf)$/i, ''),\n          path: relativePath,\n          fullPath: file.path,\n          filename: file.name,\n          extension: file.extension || '',\n          size: file.size,\n          modified: file.modified\n        } as FileItem;\n      }) || [];\n\n      // Cache the results\n      this.setCachedFiles(cacheKey, files);\n      return files;\n    } catch (error) {\n      console.error(`Error fetching ${fileType} files:`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Show enhanced file picker overlay\n   */\n  showFilePicker(\n    fileType: string,\n    onSelect: (file: FileItem) => void,\n    options: {\n      title?: string;\n      multiSelect?: boolean;\n      onMultiSelect?: (files: FileItem[]) => void;\n      currentValue?: string;\n    } = {}\n  ): void {\n    const config = FilePickerService.FILE_TYPES[fileType];\n    if (!config) {\n      throw new Error(`Unknown file type: ${fileType}`);\n    }\n\n    const {\n      title = `Select ${config.displayName}`,\n      multiSelect = false,\n      onMultiSelect,\n      currentValue\n    } = options;\n\n    this.getFilesForType(fileType).then(files => {\n      const items = files.map(file => ({\n        id: file.id,\n        label: file.label,\n        disabled: currentValue === file.id\n      }));\n\n      const overlay = OverlayService.getInstance();\n      // Compute folder chips from first path segment of relative path\n      const topFolders = Array.from(new Set(\n        files.map(file => {\n          const rel = file.path || '';\n          const parts = rel.split(/[\\\\/]/);\n          return parts.length > 1 ? parts[0] : '__ROOT__';\n        })\n      ));\n\n      overlay.showSearchOverlay({\n        title,\n        placeholder: config.placeholder || `Search ${config.displayName.toLowerCase()}...`,\n        items,\n        allowCreate: false,\n        enableMultiToggle: multiSelect,\n        onChoose: (id: string) => {\n          const file = files.find(f => f.id === id);\n          if (file) {\n            onSelect(file);\n          }\n        },\n        onChooseMany: onMultiSelect ? (ids: string[]) => {\n          const selectedFiles = ids.map(id => files.find(f => f.id === id)).filter(Boolean) as FileItem[];\n          if (onMultiSelect && selectedFiles.length > 0) {\n            onMultiSelect(selectedFiles);\n          }\n        } : undefined,\n        folderChips: topFolders,\n        baseFolderName: config.folderName,\n        currentValue,\n        rightActions: []\n      });\n    }).catch(error => {\n      console.error('Failed to load file picker:', error);\n      OverlayService.getInstance().showToast(`Failed to load ${config.displayName.toLowerCase()}`, 'error');\n    });\n  }\n\n  /**\n   * Cache management\n   */\n  private getCachedFiles(key: string): FileItem[] | null {\n    const cacheTime = this.cacheTimestamps.get(key);\n    if (!cacheTime) return null;\n\n    // Cache expires after 5 minutes\n    const fiveMinutesAgo = Date.now() - (5 * 60 * 1000);\n    if (cacheTime < fiveMinutesAgo) {\n      this.fileCache.delete(key);\n      this.cacheTimestamps.delete(key);\n      return null;\n    }\n\n    return this.fileCache.get(key) || null;\n  }\n\n  private setCachedFiles(key: string, files: FileItem[]): void {\n    this.fileCache.set(key, files);\n    this.cacheTimestamps.set(key, Date.now());\n  }\n\n  /**\n   * Clear all caches\n   */\n  clearCache(): void {\n    this.fileCache.clear();\n    this.cacheTimestamps.clear();\n  }\n\n  /**\n   * Refresh cache for specific file type\n   */\n  async refreshFileType(fileType: string): Promise<void> {\n    const cacheKey = `files_${fileType}`;\n    this.fileCache.delete(cacheKey);\n    this.cacheTimestamps.delete(cacheKey);\n    await this.getFilesForType(fileType);\n  }\n}\n","export class SuperLoraBaseWidget {\n  public type: string;\n  public value: any;\n  public hitAreas: any;\n\n  constructor(public name: string) {\n    this.type = \"custom\";\n    this.value = {};\n    this.hitAreas = {};\n  }\n\n  draw(_ctx: any, _node: any, _w: number, _posY: number, _height: number): void {\n    // Override in subclasses\n  }\n\n  onMouseDown(event: any, pos: any, node: any): boolean {\n    return this.handleHitAreas(event, pos, node, 'onDown');\n  }\n\n  onClick(event: any, pos: any, node: any): boolean {\n    return this.handleHitAreas(event, pos, node, 'onClick');\n  }\n\n  protected handleHitAreas(event: any, pos: any, node: any, handler: 'onDown' | 'onClick'): boolean {\n    // console.log(`[${this.constructor.name}] Click at: [${pos[0]}, ${pos[1]}], Handler: ${handler}`);\n\n    type HitArea = { bounds: number[]; onDown?: (e:any,p:any,n:any)=>boolean; onClick?: (e:any,p:any,n:any)=>boolean; priority?: number };\n    const entries: Array<[string, HitArea]> = Object.entries(this.hitAreas as Record<string, HitArea>) as Array<[string, HitArea]>;\n    entries.sort((a, b) => {\n      const pa = (a[1]?.priority) || 0;\n      const pb = (b[1]?.priority) || 0;\n      return pb - pa; // higher priority first\n    });\n\n    for (const [key, area] of entries) {\n      const bounds = area.bounds;\n      // console.log(`  Checking ${key}: bounds=${bounds}`);\n\n      if (bounds && bounds.length >= 4 && this.isInBounds(pos, bounds)) {\n        const fn = (handler === 'onDown' ? area.onDown : area.onClick) || (handler === 'onDown' ? area.onClick : area.onDown);\n        if (fn) {\n          // console.log(`  ✓ HIT: ${key} - calling ${handler}`);\n          return fn.call(this, event, pos, node);\n        }\n      }\n    }\n    // console.log('  ✗ No hit areas matched');\n    return false;\n  }\n\n  protected isInBounds(pos: any, bounds: number[]): boolean {\n    if (bounds.length < 4) return false;\n    const [x, y, width, height] = bounds;\n    return pos[0] >= x && pos[0] <= x + width && \n           pos[1] >= y && pos[1] <= y + height;\n  }\n\n  computeSize(): [number, number] {\n    return [200, 25];\n  }\n}\n\n\n","/*\n * Shared API for widgets to call back into SuperLoraNode without importing it directly.\n * This avoids circular dependencies when splitting widget classes into separate modules.\n */\n\nexport type WidgetAPIType = {\n  // Node lifecycle and UI helpers\n  showLoraSelector: (node: any, widget?: any, event?: any) => void | Promise<void>;\n  showTagSelector: (node: any, widget: any) => void;\n  showSettingsDialog: (node: any, event?: any) => void;\n  showLoadTemplateDialog: (node: any, event?: any) => void | Promise<void>;\n  showNameOverlay: (opts: { title: string; placeholder: string; initial?: string; submitLabel?: string; onCommit: (name: string) => void }) => void;\n  showInlineText: (event: any, initial: string, onCommit: (v: string) => void, place?: { rect: { x: number; y: number; w: number; h: number }; node: any }) => void;\n  showToast: (message: string, type?: 'success' | 'warning' | 'error' | 'info') => void;\n\n  // Node structure helpers\n  calculateNodeSize: (node: any) => void;\n  organizeByTags: (node: any) => void;\n  addLoraWidget: (node: any, config?: any) => any;\n  removeLoraWidget: (node: any, widget: any) => void;\n  getLoraConfigs: (node: any) => Array<any>;\n  syncExecutionWidgets: (node: any) => void;\n\n  // Backend/service helpers\n  templateService: any;\n  civitaiService: any;\n};\n\n// Mutable API object that widgets will use. It is populated by SuperLoraNode at runtime.\nexport const WidgetAPI: WidgetAPIType = {\n  showLoraSelector: () => { throw new Error('WidgetAPI.showLoraSelector not initialized'); },\n  showTagSelector: () => { throw new Error('WidgetAPI.showTagSelector not initialized'); },\n  showSettingsDialog: () => { throw new Error('WidgetAPI.showSettingsDialog not initialized'); },\n  showLoadTemplateDialog: () => { throw new Error('WidgetAPI.showLoadTemplateDialog not initialized'); },\n  showNameOverlay: () => { throw new Error('WidgetAPI.showNameOverlay not initialized'); },\n  showInlineText: () => { throw new Error('WidgetAPI.showInlineText not initialized'); },\n  showToast: () => { throw new Error('WidgetAPI.showToast not initialized'); },\n  calculateNodeSize: () => { throw new Error('WidgetAPI.calculateNodeSize not initialized'); },\n  organizeByTags: () => { throw new Error('WidgetAPI.organizeByTags not initialized'); },\n  addLoraWidget: () => { throw new Error('WidgetAPI.addLoraWidget not initialized'); },\n  removeLoraWidget: () => { throw new Error('WidgetAPI.removeLoraWidget not initialized'); },\n  getLoraConfigs: () => { throw new Error('WidgetAPI.getLoraConfigs not initialized'); },\n  syncExecutionWidgets: () => { throw new Error('WidgetAPI.syncExecutionWidgets not initialized'); },\n  templateService: null,\n  civitaiService: null,\n};\n\nexport function setWidgetAPI(api: Partial<WidgetAPIType>): void {\n  Object.assign(WidgetAPI, api);\n}\n\n\n","/**\n * Simple local persistence for manual trigger words keyed by LoRA filename.\n * Prevents re-fetching from CivitAI when the user has supplied their own.\n */\n\nconst STORAGE_KEY = 'super_lora_manual_triggers_v1';\n\nfunction readStore(): Record<string, string> {\n  try {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    if (!raw) return {};\n    const data = JSON.parse(raw);\n    return data && typeof data === 'object' ? data as Record<string, string> : {};\n  } catch {\n    return {};\n  }\n}\n\nfunction writeStore(map: Record<string, string>): void {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(map));\n  } catch {}\n}\n\nexport const TriggerWordStore = {\n  get(loraFileName: string): string | null {\n    if (!loraFileName) return null;\n    const map = readStore();\n    const val = map[loraFileName];\n    return typeof val === 'string' && val.trim().length ? val : null;\n  },\n\n  set(loraFileName: string, triggerWords: string): void {\n    if (!loraFileName) return;\n    const map = readStore();\n    if (typeof triggerWords === 'string' && triggerWords.trim().length) {\n      map[loraFileName] = triggerWords.trim();\n    } else {\n      delete map[loraFileName];\n    }\n    writeStore(map);\n  },\n\n  remove(loraFileName: string): void {\n    if (!loraFileName) return;\n    const map = readStore();\n    if (map[loraFileName] !== undefined) {\n      delete map[loraFileName];\n      writeStore(map);\n    }\n  }\n};\n\n\n","import { SuperLoraBaseWidget } from './SuperLoraBaseWidget';\nimport { WidgetAPI } from './WidgetAPI';\nimport { SuperLoraWidget } from './SuperLoraWidget';\n\nexport class SuperLoraTagWidget extends SuperLoraBaseWidget {\n  constructor(public tag: string) {\n    super(`tag_${tag}`);\n    this.value = { type: \"SuperLoraTagWidget\", tag, collapsed: false };\n    this.hitAreas = {\n      toggle: { bounds: [0, 0], onDown: this.onToggleDown, priority: 10 },\n      collapse: { bounds: [0, 0], onDown: this.onCollapseDown, priority: 0 }\n    };\n  }\n\n  draw(ctx: any, node: any, w: number, posY: number, height: number): void {\n    const margin = 10;\n    let posX = margin;\n\n    ctx.save();\n    ctx.fillStyle = \"#2a2a2a\";\n    ctx.fillRect(0, posY, w, height);\n    //ctx.strokeStyle = \"#3a3a3a\";\n    //ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(0, posY + 0.5);\n    ctx.lineTo(w, posY + 0.5);\n    ctx.moveTo(0, posY + height - 0.5);\n    ctx.lineTo(w, posY + height - 0.5);\n    //ctx.stroke();\n\n    const midY = height / 2;\n    const lorasInTag = this.getLorasInTag(node);\n    lorasInTag.length > 0 && lorasInTag.every((w2: any) => w2.value.enabled);\n\n    ctx.fillStyle = \"#fff\";\n    ctx.font = \"12px Arial\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.value.collapsed ? \"▶\" : \"▼\", posX, posY + midY);\n    this.hitAreas.collapse.bounds = [0, 0, w, height];\n    posX += 20;\n    this.hitAreas.toggle.bounds = [0, 0, 0, 0];\n\n    ctx.fillStyle = \"#fff\";\n    ctx.fillText(`${this.tag} (${lorasInTag.length})`, posX, posY + midY);\n\n    ctx.restore();\n  }\n\n  private getLorasInTag(node: any): any[] {\n    if (!node.customWidgets) return [];\n    return node.customWidgets.filter((w: any) => \n      w instanceof SuperLoraWidget && w.value.tag === this.tag\n    );\n  }\n\n  onCollapseDown = (_event: any, _pos: any, node: any): boolean => {\n    this.value.collapsed = !this.value.collapsed;\n    WidgetAPI.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  onToggleDown = (_event: any, _pos: any, node: any): boolean => {\n    const lorasInTag = this.getLorasInTag(node);\n    const allEnabled = lorasInTag.every((w: any) => w.value.enabled);\n    lorasInTag.forEach((w: any) => w.value.enabled = !allEnabled);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  computeSize(): [number, number] {\n    return [400, 25];\n  }\n\n  isCollapsed(): boolean {\n    return this.value.collapsed;\n  }\n}\n\n\n","import { SuperLoraBaseWidget } from './SuperLoraBaseWidget';\nimport { WidgetAPI } from './WidgetAPI';\nimport { TriggerWordStore } from '@/services/TriggerWordStore';\nimport { SuperLoraTagWidget } from './SuperLoraTagWidget';\n\nexport class SuperLoraWidget extends SuperLoraBaseWidget {\n  constructor(name: string) {\n    super(name);\n    this.value = {\n      lora: \"None\",\n      enabled: true,\n      strength: 1.0,\n      strengthClip: 1.0,\n      triggerWords: \"\",\n      tag: \"General\",\n      autoFetched: false,\n      fetchAttempted: false\n    };\n    this.hitAreas = {\n      enabled: { bounds: [0, 0], onDown: this.onEnabledDown, priority: 60 },\n      lora: { bounds: [0, 0], onClick: this.onLoraClick, priority: 10 },\n      tag: { bounds: [0, 0], onClick: this.onTagClick, priority: 20 },\n      strength: { bounds: [0, 0], onClick: this.onStrengthClick, priority: 80 },\n      strengthDown: { bounds: [0, 0], onClick: this.onStrengthDownClick, priority: 90 },\n      strengthUp: { bounds: [0, 0], onClick: this.onStrengthUpClick, priority: 90 },\n      strengthClip: { bounds: [0, 0], onClick: this.onStrengthClipClick, priority: 80 },\n      strengthClipDown: { bounds: [0, 0], onClick: this.onStrengthClipDownClick, priority: 90 },\n      strengthClipUp: { bounds: [0, 0], onClick: this.onStrengthClipUpClick, priority: 90 },\n      triggerWords: { bounds: [0, 0], onClick: this.onTriggerWordsClick, priority: 85 },\n      refresh: { bounds: [0, 0], onClick: this.onRefreshClick, priority: 95 },\n      remove: { bounds: [0, 0], onClick: this.onRemoveClick, priority: 100 },\n      moveUp: { bounds: [0, 0], onClick: this.onMoveUpClick, priority: 70 },\n      moveDown: { bounds: [0, 0], onClick: this.onMoveDownClick, priority: 70 }\n    };\n  }\n\n  draw(ctx: any, node: any, w: number, posY: number, height: number): void {\n    const margin = 8;\n    const rowHeight = 28;\n\n    ctx.save();\n    const innerWidth = Math.max(0, w - margin * 2);\n    const clampedHeight = Math.max(0, height);\n\n    ctx.beginPath();\n    ctx.rect(margin, posY, innerWidth, clampedHeight);\n    ctx.clip();\n\n    const bodyHeight = Math.max(4, height - 4);\n    const bodyY = posY + (height >= bodyHeight ? Math.floor((height - bodyHeight) / 2) : 0);\n    const cornerRadius = Math.min(6, bodyHeight / 2);\n\n    ctx.fillStyle = \"#2a2a2a\";\n    ctx.beginPath();\n    ctx.roundRect(margin, bodyY, innerWidth, bodyHeight, cornerRadius || 0);\n    ctx.fill();\n    ctx.strokeStyle = \"#3a3a3a\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n    ctx.clip();\n\n    if (!this.value.enabled) {\n      ctx.fillStyle = \"rgba(0,0,0,0.4)\";\n      ctx.fill();\n    }\n\n    ctx.font = \"11px 'Segoe UI', Arial, sans-serif\";\n    ctx.textBaseline = \"middle\";\n\n    const topPad = node.properties?.showTriggerWords ? 4 : Math.max(4, Math.floor((height - rowHeight) / 2));\n    let currentY = posY + topPad;\n\n    this.drawFirstRow(ctx, node, w, currentY, rowHeight, height);\n\n    ctx.restore();\n  }\n\n  private drawFirstRow(ctx: any, node: any, w: number, posY: number, rowHeight: number, fullHeight: number): void {\n    const margin = 8;\n    let posX = margin + 6;\n    const midY = rowHeight / 2;\n\n    const toggleSize = 20;\n    const toggleY = (rowHeight - toggleSize) / 2;\n    ctx.fillStyle = \"#2a2a2a\";\n    ctx.beginPath();\n    ctx.roundRect(posX, posY + toggleY, toggleSize, toggleSize, 2);\n    ctx.fill();\n    ctx.strokeStyle = this.value.enabled ? \"#1b5e20\" : \"#3a3a3a\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n    ctx.fillStyle = this.value.enabled ? \"#2e7d32\" : \"\";\n    ctx.textAlign = \"center\";\n    ctx.font = \"12px Arial\";\n    if (this.value.enabled) {\n      ctx.fillText(\"●\", posX + toggleSize / 2, posY + midY);\n    }\n    this.hitAreas.enabled.bounds = [posX, 0, toggleSize, fullHeight];\n    posX += toggleSize + 8;\n\n    const loraWidgets = node.customWidgets?.filter((w: any) => w instanceof SuperLoraWidget) || [];\n    const indexInLoras = loraWidgets.indexOf(this as any);\n    const lastIndex = loraWidgets.length - 1;\n    const showMoveArrows = (loraWidgets.length > 1) && (node?.properties?.showMoveArrows !== false);\n    const showStrength = node?.properties?.showStrengthControls !== false;\n    const showRemove = node?.properties?.showRemoveButton !== false;\n\n    const arrowSize = 20;\n    const strengthWidth = 50;\n    const btnSize = 20;\n    const removeSize = 20;\n    const gapSmall = 2;\n    const gap = 8;\n\n    const rightEdge = node.size[0] - margin;\n    let cursorX = rightEdge;\n    let removeX = -9999;\n    let plusX = -9999;\n    let minusX = -9999;\n    let strengthX = -9999;\n    let plusClipX = -9999;\n    let minusClipX = -9999;\n    let strengthClipX = -9999;\n    let upX = -9999;\n    let downX = -9999;\n\n    if (showRemove) {\n      cursorX -= removeSize; removeX = cursorX - gap; cursorX -= gap;\n    }\n    if (showStrength) {\n      // Model strength group (rightmost)\n      cursorX -= btnSize; plusX = cursorX - gap; cursorX -= gapSmall;\n      cursorX -= strengthWidth; strengthX = cursorX - gap; cursorX -= gapSmall;\n      cursorX -= btnSize; minusX = cursorX - gap; cursorX -= gap;\n      // Optional CLIP strength group (to the left) when separate strengths enabled\n      if (node?.properties?.showSeparateStrengths) {\n        cursorX -= btnSize; plusClipX = cursorX - gap; cursorX -= gapSmall;\n        cursorX -= strengthWidth; strengthClipX = cursorX - gap; cursorX -= gapSmall;\n        cursorX -= btnSize; minusClipX = cursorX - gap; cursorX -= gap;\n      }\n    }\n    if (showMoveArrows) {\n      const leftMostMinus = (showStrength && node?.properties?.showSeparateStrengths)\n        ? Math.min(minusX, minusClipX)\n        : minusX;\n      const arrowRightStart = showStrength ? (leftMostMinus - gap) : (showRemove ? (removeX - gap) : (rightEdge - gap));\n      upX = arrowRightStart - arrowSize - 4;\n      downX = upX - (arrowSize + 2);\n      cursorX -= gap;\n    }\n\n    if (node?.properties?.enableTags && node?.properties?.showTagChip !== false) {\n      const iconSize = 20;\n      const iconY = posY + Math.floor((rowHeight - iconSize) / 2);\n      ctx.fillStyle = this.value.enabled ? \"#333\" : \"#2a2a2a\";\n      ctx.beginPath(); ctx.roundRect(posX, iconY, iconSize, iconSize, 2); ctx.fill();\n      ctx.strokeStyle = \"#444\"; ctx.lineWidth = 1; ctx.stroke();\n      // Set the icon font color to golden and dim when disabled\n      ctx.fillStyle = \"#FFD700\"; // Gold color\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.font = \"12px Arial\";\n      ctx.save();\n      if (!this.value.enabled) { ctx.globalAlpha *= 0.55; }\n      ctx.fillText(\"🏷\", posX + iconSize / 2, posY + midY);\n      ctx.restore();\n      this.hitAreas.tag.bounds = [posX, 0, iconSize, fullHeight];\n      posX += iconSize + 6;\n      ctx.font = \"12px 'Segoe UI', Arial, sans-serif\";\n    } else {\n      this.hitAreas.tag.bounds = [0,0,0,0];\n    }\n\n    const loraLeft = posX;\n    const rightMost = [\n      showMoveArrows ? downX : null,\n      showStrength ? minusX : null,\n      (showStrength && node?.properties?.showSeparateStrengths) ? minusClipX : null,\n      showRemove ? removeX : null\n    ].filter(v => typeof v === 'number') as number[];\n    const loraMaxRight = (rightMost.length ? Math.min(...rightMost) : rightEdge) - gap;\n    const loraWidth = Math.max(100, loraMaxRight - loraLeft);\n\n    const showTriggers = !!(node.properties && node.properties.showTriggerWords);\n    const nameWidth = showTriggers ? Math.max(80, Math.floor(loraWidth * 0.6)) : loraWidth;\n    const trigWidth = showTriggers ? (loraWidth - nameWidth) : 0;\n\n    ctx.textAlign = \"left\";\n    ctx.font = \"12px 'Segoe UI', Arial, sans-serif\";\n    ctx.fillStyle = this.value.enabled ? \"#fff\" : \"#888\";\n    const loraText = this.value.lora === \"None\" ? \"Click to select LoRA...\" : this.value.lora;\n    const loraDisplay = this.truncateText(ctx, loraText, nameWidth);\n    ctx.fillText(loraDisplay, loraLeft, posY + midY);\n    this.hitAreas.lora.bounds = [loraLeft, 0, nameWidth, fullHeight];\n\n    const controlsAlpha = this.value.enabled ? 1 : 0.55;\n    ctx.save();\n    ctx.globalAlpha *= controlsAlpha;\n\n    const triggerLeft = loraLeft + nameWidth;\n    if (showTriggers && trigWidth > 0) {\n      const hasTrigger = !!(this.value.triggerWords && String(this.value.triggerWords).trim());\n      const pillH = 20;\n      const pillY = posY + Math.floor((rowHeight - pillH) / 2);\n      (this as any)._triggerRect = { x: triggerLeft, y: pillY, w: trigWidth, h: pillH };\n      ctx.fillStyle = \"#2f2f2f\";\n      ctx.beginPath(); ctx.roundRect(triggerLeft, pillY, trigWidth, pillH, 3); ctx.fill();\n      const padX = 6;\n      ctx.textAlign = \"left\";\n      ctx.font = \"10px 'Segoe UI', Arial, sans-serif\";\n      if (hasTrigger) {\n        ctx.fillStyle = this.value.enabled ? \"#fff\" : \"#aaa\";\n        const trigDisplay = this.truncateText(ctx, String(this.value.triggerWords), trigWidth - padX * 2);\n        ctx.fillText(trigDisplay, triggerLeft + padX, posY + midY);\n      } else {\n        ctx.fillStyle = \"#888\";\n        const placeholder = \"Click to add trigger words...\";\n        const phDisplay = this.truncateText(ctx, placeholder, trigWidth - padX * 2);\n        ctx.fillText(phDisplay, triggerLeft + padX, posY + midY);\n      }\n      this.hitAreas.triggerWords.bounds = [triggerLeft, 0, trigWidth, fullHeight];\n\n      try {\n      const dotRadius = 7; // larger for clickable icon\n      const dotCx = triggerLeft + trigWidth - 10;\n      const dotCy = posY + midY;\n        let showDot = true;\n        let color = \"rgba(74, 158, 255, 0.85)\"; // default manual/edited (blue)\n        const has = hasTrigger;\n        const auto = !!this.value.autoFetched;\n        const attempted = !!(this as any).value?.fetchAttempted;\n        if (has && auto) {\n          color = \"rgba(40, 167, 69, 0.85)\"; // green\n        } else if (has && !auto) {\n          color = \"rgba(74, 158, 255, 0.85)\"; // blue manual\n        } else if (!has && attempted) {\n          color = \"rgba(253, 126, 20, 0.9)\"; // orange, attempted but empty\n        } else {\n          // No trigger and not attempted yet: show neutral gray, keep clickable\n          color = \"rgba(160, 160, 160, 0.7)\";\n        }\n      if (showDot) {\n        ctx.save();\n        // Outer circle\n        ctx.fillStyle = color;\n        ctx.beginPath();\n        ctx.arc(dotCx, dotCy, dotRadius, 0, Math.PI * 2);\n        ctx.fill();\n        // Refresh arrow glyph (↻) with optional spin animation\n        const now = (typeof performance !== 'undefined' && (performance as any).now) ? (performance as any).now() : Date.now();\n        const spinActive = !!(this as any)._refreshSpinActive;\n        const spinEnd = (this as any)._refreshSpinEnd || 0;\n        const spinStart = (this as any)._refreshSpinStarted || 0;\n        const isSpinning = spinActive && now < spinEnd;\n\n        // Schedule next frame while spinning\n        if (isSpinning) {\n          try {\n            if (!(this as any)._spinRafScheduled) {\n              (this as any)._spinRafScheduled = true;\n              (window.requestAnimationFrame || ((cb: any) => setTimeout(cb, 16)))(() => {\n                (this as any)._spinRafScheduled = false;\n                try { node.setDirtyCanvas(true, false); } catch {}\n              });\n            }\n          } catch {}\n        }\n\n        ctx.fillStyle = '#111';\n        ctx.font = '10px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        if (isSpinning) {\n          const period = Math.max(500, (this as any)._refreshSpinPeriod || 800); // ms per rotation\n          const progress = ((now - spinStart) % period) / period;\n          const angle = progress * Math.PI * 2;\n          ctx.save();\n          ctx.translate(dotCx, dotCy);\n          ctx.rotate(angle);\n          ctx.fillText('↻', 0, 0);\n          ctx.restore();\n        } else {\n          ctx.fillText('↻', dotCx, dotCy);\n        }\n        ctx.restore();\n        // Click bounds for refresh (always enabled)\n        const size = dotRadius * 2 + 2;\n        this.hitAreas.refresh.bounds = [dotCx - dotRadius, 0, size, fullHeight];\n      } else {\n        this.hitAreas.refresh.bounds = [0,0,0,0];\n      }\n      } catch {}\n    } else {\n      this.hitAreas.triggerWords.bounds = [0, 0, 0, 0];\n    }\n\n    if (showMoveArrows && node?.properties?.showMoveArrows !== false) {\n      const arrowY = (rowHeight - arrowSize) / 2;\n      let disableDown: boolean;\n      let disableUp: boolean;\n      if (node?.properties?.enableTags) {\n        const groupWidgets = (node.customWidgets || []).filter((w: any) => w instanceof SuperLoraWidget && w.value?.tag === this.value.tag);\n        const groupIndex = groupWidgets.indexOf(this as any);\n        const groupLastIndex = groupWidgets.length - 1;\n        disableDown = groupIndex === groupLastIndex;\n        disableUp = groupIndex === 0;\n      } else {\n        disableDown = indexInLoras === lastIndex;\n        disableUp = indexInLoras === 0;\n      }\n\n      ctx.globalAlpha = (controlsAlpha) * (disableDown ? 0.35 : 1.0);\n      ctx.fillStyle = \"#555\"; ctx.beginPath();\n      ctx.roundRect(downX, posY + arrowY, arrowSize, arrowSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"▼\", downX + arrowSize / 2, posY + midY);\n      this.hitAreas.moveDown.bounds = disableDown ? [0, 0, 0, 0] : [downX, 0, arrowSize, fullHeight];\n\n      ctx.globalAlpha = (controlsAlpha) * (disableUp ? 0.35 : 1.0);\n      ctx.fillStyle = \"#555\"; ctx.beginPath();\n      ctx.roundRect(upX, posY + arrowY, arrowSize, arrowSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"▲\", upX + arrowSize / 2, posY + midY);\n      this.hitAreas.moveUp.bounds = disableUp ? [0, 0, 0, 0] : [upX, 0, arrowSize, fullHeight];\n\n      ctx.globalAlpha = controlsAlpha;\n    } else {\n      this.hitAreas.moveUp.bounds = [0, 0, 0, 0];\n      this.hitAreas.moveDown.bounds = [0, 0, 0, 0];\n    }\n\n    const btnY = (rowHeight - btnSize) / 2;\n    if (showStrength) {\n      ctx.fillStyle = \"#666\"; ctx.beginPath();\n      ctx.roundRect(minusX, posY + btnY, btnSize, btnSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"-\", minusX + btnSize / 2, posY + midY);\n      this.hitAreas.strengthDown.bounds = [minusX, 0, btnSize, fullHeight];\n    } else {\n      this.hitAreas.strengthDown.bounds = [0,0,0,0];\n    }\n\n    if (node?.properties?.showStrengthControls !== false) {\n      const strengthY = (rowHeight - 20) / 2;\n      // Model strength background: muted purple when enabled, dark neutral when disabled\n      ctx.fillStyle = this.value.enabled ? \"#3b2a4a\" : \"#2a2a2a\"; ctx.beginPath();\n      ctx.roundRect(strengthX, posY + strengthY, strengthWidth, 20, 3);\n      ctx.fill();\n      ctx.strokeStyle = \"#4a4a4a\"; ctx.lineWidth = 1; ctx.stroke();\n      ctx.fillStyle = this.value.enabled ? \"#e5e5e5\" : \"#bdbdbd\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(this.value.strength.toFixed(2), strengthX + strengthWidth / 2, posY + midY);\n      this.hitAreas.strength.bounds = [strengthX, 0, strengthWidth, fullHeight];\n    } else {\n      this.hitAreas.strength.bounds = [0,0,0,0];\n    }\n\n    if (node?.properties?.showStrengthControls !== false) {\n      ctx.fillStyle = \"#666\"; ctx.beginPath();\n      ctx.roundRect(plusX, posY + btnY, btnSize, btnSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"+\", plusX + btnSize / 2, posY + midY);\n      this.hitAreas.strengthUp.bounds = [plusX, 0, btnSize, fullHeight];\n    } else {\n      this.hitAreas.strengthUp.bounds = [0,0,0,0];\n    }\n\n    // Draw CLIP strength controls when separate strengths are enabled\n    if (showStrength && node?.properties?.showSeparateStrengths) {\n      // Minus\n      ctx.fillStyle = \"#666\"; ctx.beginPath();\n      ctx.roundRect(minusClipX, posY + btnY, btnSize, btnSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"-\", minusClipX + btnSize / 2, posY + midY);\n      this.hitAreas.strengthClipDown.bounds = [minusClipX, 0, btnSize, fullHeight];\n\n      // Value box\n      const strengthY2 = (rowHeight - 20) / 2;\n      // CLIP strength background: muted yellow/amber when enabled, dark neutral when disabled\n      ctx.fillStyle = this.value.enabled ? \"#4a3f1f\" : \"#2a2a2a\"; ctx.beginPath();\n      ctx.roundRect(strengthClipX, posY + strengthY2, strengthWidth, 20, 3);\n      ctx.fill();\n      ctx.strokeStyle = \"#4a4a4a\"; ctx.lineWidth = 1; ctx.stroke();\n      ctx.fillStyle = this.value.enabled ? \"#e5e5e5\" : \"#bdbdbd\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(this.value.strengthClip.toFixed(2), strengthClipX + strengthWidth / 2, posY + midY);\n      this.hitAreas.strengthClip.bounds = [strengthClipX, 0, strengthWidth, fullHeight];\n\n      // Plus\n      ctx.fillStyle = \"#666\"; ctx.beginPath();\n      ctx.roundRect(plusClipX, posY + btnY, btnSize, btnSize, 2);\n      ctx.fill();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"+\", plusClipX + btnSize / 2, posY + midY);\n      this.hitAreas.strengthClipUp.bounds = [plusClipX, 0, btnSize, fullHeight];\n    } else {\n      this.hitAreas.strengthClipDown.bounds = [0,0,0,0];\n      this.hitAreas.strengthClip.bounds = [0,0,0,0];\n      this.hitAreas.strengthClipUp.bounds = [0,0,0,0];\n    }\n\n    ctx.restore();\n\n    if (node?.properties?.showRemoveButton !== false) {\n      const removeY = (rowHeight - removeSize) / 2;\n      ctx.fillStyle = \"#3a2a2a\"; ctx.beginPath();\n      ctx.roundRect(removeX, posY + removeY, removeSize, removeSize, 2);\n      ctx.fill();\n      ctx.strokeStyle = \"#5a3a3a\"; ctx.lineWidth = 1; ctx.stroke();\n      ctx.fillStyle = \"#fff\"; ctx.textAlign = \"center\"; ctx.font = \"12px Arial\";\n      ctx.fillText(\"🗑\", removeX + removeSize / 2, posY + midY);\n      this.hitAreas.remove.bounds = [removeX, 0, removeSize, fullHeight];\n    } else {\n      this.hitAreas.remove.bounds = [0,0,0,0];\n    }\n  }\n\n  public isCollapsedByTag(node: any): boolean {\n    if (!node.customWidgets) return false;\n    const tagWidget = node.customWidgets.find((w: any) => w instanceof SuperLoraTagWidget && w.tag === this.value.tag);\n    return tagWidget?.isCollapsed?.() || false;\n  }\n\n  private truncateText(ctx: any, text: string, maxWidth: number): string {\n    const metrics = ctx.measureText(text);\n    if (metrics.width <= maxWidth) return text;\n    let truncated = text;\n    while (ctx.measureText(truncated + \"...\").width > maxWidth && truncated.length > 0) {\n      truncated = truncated.slice(0, -1);\n    }\n    return truncated + \"...\";\n  }\n\n  onEnabledDown = (_event: any, _pos: any, node: any): boolean => {\n    this.value.enabled = !this.value.enabled;\n    node.setDirtyCanvas(true, false);\n    try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n    return true;\n  };\n\n  onLoraClick = (event: any, _pos: any, node: any): boolean => {\n    WidgetAPI.showLoraSelector(node, this, event);\n    return true;\n  };\n\n  onStrengthClick = (event: any, _pos: any, node: any): boolean => {\n    try {\n      const app = (window as any)?.app;\n      const canvas = app?.canvas;\n      if (canvas?.prompt) {\n        canvas.prompt(\"Model Strength\", this.value.strength ?? 1, (v: any) => {\n          const val = parseFloat(v);\n          if (!Number.isNaN(val)) {\n            this.value.strength = Math.max(-10, Math.min(10, val));\n            node.setDirtyCanvas(true, true);\n          }\n        }, event);\n        return true;\n      }\n    } catch {}\n    return false;\n  };\n\n  onStrengthDownClick = (_event: any, _pos: any, node: any): boolean => {\n    this.value.strength = Math.max(-10, this.value.strength - 0.1);\n    node.setDirtyCanvas(true, false);\n    try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n    return true;\n  };\n\n  onStrengthUpClick = (_event: any, _pos: any, node: any): boolean => {\n    this.value.strength = Math.min(10, this.value.strength + 0.1);\n    node.setDirtyCanvas(true, false);\n    try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n    return true;\n  };\n\n  onStrengthClipClick = (event: any, _pos: any, node: any): boolean => {\n    try {\n      const app = (window as any)?.app;\n      const canvas = app?.canvas;\n      if (canvas?.prompt) {\n        canvas.prompt(\"CLIP Strength\", this.value.strengthClip ?? this.value.strength ?? 1, (v: any) => {\n          const val = parseFloat(v);\n          if (!Number.isNaN(val)) {\n            this.value.strengthClip = Math.max(-10, Math.min(10, val));\n            node.setDirtyCanvas(true, true);\n            try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n          }\n        }, event);\n        return true;\n      }\n    } catch {}\n    return false;\n  };\n\n  onStrengthClipDownClick = (_event: any, _pos: any, node: any): boolean => {\n    this.value.strengthClip = Math.max(-10, (this.value.strengthClip ?? this.value.strength ?? 1) - 0.1);\n    node.setDirtyCanvas(true, false);\n    try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n    return true;\n  };\n\n  onStrengthClipUpClick = (_event: any, _pos: any, node: any): boolean => {\n    this.value.strengthClip = Math.min(10, (this.value.strengthClip ?? this.value.strength ?? 1) + 0.1);\n    node.setDirtyCanvas(true, false);\n    try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n    return true;\n  };\n\n  onMoveUpClick = (_event: any, _pos: any, node: any): boolean => {\n    const idx = node.customWidgets.indexOf(this);\n    if (idx <= 1) return true;\n    if (node?.properties?.enableTags) {\n      for (let j = idx - 1; j >= 0; j--) {\n        const w = node.customWidgets[j];\n        if (w instanceof SuperLoraWidget) {\n          if (w.value?.tag === (this as any).value?.tag) {\n            const tmp = node.customWidgets[idx];\n            node.customWidgets[idx] = node.customWidgets[j];\n            node.customWidgets[j] = tmp;\n            break;\n          } else if (!(w instanceof SuperLoraWidget)) {\n            break;\n          }\n        }\n        if (w instanceof SuperLoraTagWidget) break;\n      }\n    } else {\n      const temp = node.customWidgets[idx];\n      node.customWidgets[idx] = node.customWidgets[idx - 1];\n      node.customWidgets[idx - 1] = temp;\n    }\n    WidgetAPI.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  onMoveDownClick = (_event: any, _pos: any, node: any): boolean => {\n    const idx = node.customWidgets.indexOf(this);\n    if (idx >= node.customWidgets.length - 1) return true;\n    if (node?.properties?.enableTags) {\n      for (let j = idx + 1; j < node.customWidgets.length; j++) {\n        const w = node.customWidgets[j];\n        if (w instanceof SuperLoraWidget) {\n          if (w.value?.tag === (this as any).value?.tag) {\n            const tmp = node.customWidgets[idx];\n            node.customWidgets[idx] = node.customWidgets[j];\n            node.customWidgets[j] = tmp;\n            break;\n          } else if (!(w instanceof SuperLoraWidget)) {\n            break;\n          }\n        }\n        if (w instanceof SuperLoraTagWidget) break;\n      }\n    } else {\n      const temp = node.customWidgets[idx];\n      node.customWidgets[idx] = node.customWidgets[idx + 1];\n      node.customWidgets[idx + 1] = temp;\n    }\n    WidgetAPI.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n    return true;\n  };\n\n  onTriggerWordsClick = (event: any, _pos: any, node: any): boolean => {\n    try {\n      try { event?.stopPropagation?.(); event?.preventDefault?.(); } catch {}\n      if (WidgetAPI && typeof WidgetAPI.showInlineText === 'function') {\n        const rect = (this as any)._triggerRect;\n        const place = rect ? { rect, node, widget: this } : undefined as any;\n        WidgetAPI.showInlineText(event, this.value.triggerWords || \"\", async (v: string) => {\n          const newVal = String(v ?? \"\");\n          this.value.triggerWords = newVal;\n          this.value.autoFetched = false;\n          (this as any).value = { ...this.value, fetchAttempted: false };\n          try { TriggerWordStore.set(this.value.lora, newVal); } catch {}\n          // If cleared, do NOT auto-fetch while widget remains. Fetch will occur on re-add or via refresh.\n          (this as any).value = { ...this.value };\n          node.setDirtyCanvas(true, true);\n          try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n        }, place);\n        return true;\n      }\n    } catch {}\n    try {\n      const app = (window as any)?.app;\n      const canvas = app?.canvas;\n      if (canvas?.prompt) {\n        canvas.prompt(\"Trigger Words\", this.value.triggerWords || \"\", async (v: any) => {\n          const newVal = String(v ?? \"\");\n          this.value.triggerWords = newVal;\n          this.value.autoFetched = false;\n          (this as any).value = { ...this.value, fetchAttempted: false };\n          try { TriggerWordStore.set(this.value.lora, newVal); } catch {}\n          // Do not auto-fetch on clear while widget remains\n          node.setDirtyCanvas(true, true);\n          try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n        }, event);\n        return true;\n      }\n    } catch {}\n    return false;\n  };\n\n  onRefreshClick = async (_event: any, _pos: any, node: any): Promise<boolean> => {\n    // Start a short spin animation immediately for user feedback\n    try {\n      const now = (typeof performance !== 'undefined' && (performance as any).now) ? (performance as any).now() : Date.now();\n      (this as any)._refreshSpinActive = true;\n      (this as any)._refreshSpinStarted = now;\n      (this as any)._refreshSpinEnd = now + 650; // minimum visible spin duration\n      (this as any)._refreshSpinPeriod = 800; // ms per full rotation\n      try { node.setDirtyCanvas(true, false); } catch {}\n    } catch {}\n    try {\n      // Force re-fetch regardless of saved manual state\n      try { TriggerWordStore.remove(this.value.lora); } catch {}\n      this.value.triggerWords = '';\n      this.value.autoFetched = false;\n      (this as any).value = { ...this.value, fetchAttempted: false };\n      await this.fetchTriggerWords();\n      node.setDirtyCanvas(true, true);\n      try { WidgetAPI.syncExecutionWidgets(node); } catch {}\n      return true;\n    } catch {\n      return false;\n    } finally {\n      // Ensure the spin continues briefly even if operation is instant\n      try {\n        const now2 = (typeof performance !== 'undefined' && (performance as any).now) ? (performance as any).now() : Date.now();\n        const end = Math.max(((this as any)._refreshSpinEnd || now2), now2 + 200);\n        (this as any)._refreshSpinEnd = end;\n        const timeoutMs = Math.max(0, end - now2);\n        setTimeout(() => { (this as any)._refreshSpinActive = false; try { node.setDirtyCanvas(true, false); } catch {}; }, timeoutMs);\n      } catch {}\n    }\n  };\n\n  onTagClick = (_event: any, _pos: any, node: any): boolean => {\n    WidgetAPI.showTagSelector(node, this);\n    return true;\n  };\n\n  onRemoveClick = (_event: any, _pos: any, node: any): boolean => {\n    WidgetAPI.removeLoraWidget(node, this);\n    return true;\n  };\n\n  computeSize(): [number, number] {\n    return [450, 50];\n  }\n\n  setLora(lora: string, node?: any): void {\n    this.value.lora = lora;\n    // Always reset base state on LoRA change to avoid stale trigger words\n    this.value.triggerWords = '';\n    this.value.autoFetched = false;\n    (this as any).value = { ...this.value, fetchAttempted: false };\n    if (lora !== \"None\") {\n      // Load any manually stored trigger words first\n      try {\n        const manual = TriggerWordStore.get(lora);\n        if (manual) {\n          this.value.triggerWords = manual;\n          this.value.autoFetched = false;\n          return; // Do not auto-fetch if user provided\n        }\n      } catch {}\n      // If no manual value and auto-fetch enabled, fetch (only when node context provided)\n      if (node && node?.properties?.autoFetchTriggerWords !== false) {\n        this.fetchTriggerWords();\n      }\n    }\n  }\n\n  private async fetchTriggerWords(): Promise<void> {\n    try {\n      (this as any).value.fetchAttempted = true;\n      // Respect manual override\n      try {\n        const manual = TriggerWordStore.get(this.value.lora);\n        if (manual) {\n          this.value.triggerWords = manual;\n          this.value.autoFetched = false;\n          return;\n        }\n      } catch {}\n\n      const words = await WidgetAPI.civitaiService.getTriggerWords(this.value.lora);\n      if (words.length > 0) {\n        this.value.triggerWords = words.join(\", \");\n        this.value.autoFetched = true;\n        try { TriggerWordStore.set(this.value.lora, this.value.triggerWords); } catch {}\n      } else {\n        // Mark attempted with no result so the indicator shows orange\n        (this as any).value = { ...this.value, fetchAttempted: true };\n      }\n    } catch (error) {\n      console.warn(\"Failed to fetch trigger words:\", error);\n    }\n  }\n}\n\n\n","import { SuperLoraBaseWidget } from './SuperLoraBaseWidget';\nimport { WidgetAPI } from './WidgetAPI';\nimport { SuperLoraWidget } from './SuperLoraWidget';\n\nexport class SuperLoraHeaderWidget extends SuperLoraBaseWidget {\n  constructor() {\n    super(\"SuperLoraHeaderWidget\");\n    this.value = { type: \"SuperLoraHeaderWidget\" };\n    this.hitAreas = {\n      toggleAll: { bounds: [0, 0], onDown: this.onToggleAllDown },\n      addLora: { bounds: [0, 0], onDown: this.onAddLoraDown },\n      saveTemplate: { bounds: [0, 0], onDown: this.onSaveTemplateDown },\n      loadTemplate: { bounds: [0, 0], onDown: this.onLoadTemplateDown },\n      settings: { bounds: [0, 0], onDown: this.onSettingsDown }\n    };\n  }\n\n  draw(ctx: any, node: any, w: number, posY: number, height: number): void {\n  const margin = 8;\n  const buttonHeight = 24;\n  const buttonSpacing = 8;\n  let posX = margin;\n\n    ctx.save();\n  ctx.beginPath();\n  ctx.rect(0, posY, w, height);\n  ctx.clip();\n\n  const headerGradient = ctx.createLinearGradient(0, posY, 0, posY + height);\n  headerGradient.addColorStop(0, \"#2f2f2f\");\n  headerGradient.addColorStop(1, \"#232323\");\n  ctx.fillStyle = headerGradient;\n    ctx.fillRect(0, posY, w, height);\n  ctx.strokeStyle = \"#3a3a3a\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(0, posY + 0.5);\n    ctx.lineTo(w, posY + 0.5);\n    ctx.moveTo(0, posY + height - 0.5);\n    ctx.lineTo(w, posY + height - 0.5);\n    ctx.stroke();\n\n    const midY = posY + height / 2;\n    ctx.font = \"500 11px 'Segoe UI', Arial, sans-serif\";\n    ctx.textBaseline = \"middle\";\n\n    type ButtonStyle = {\n      gradient: [string, string];\n      border: string;\n      text: string;\n      innerStroke?: string;\n      shadow?: {\n        color: string;\n        blur: number;\n        offsetY?: number;\n      };\n      font?: string;\n      iconFont?: string;\n    };\n\n    const buttonStyles: Record<\"primary\" | \"secondary\", ButtonStyle> = {\n      primary: {\n        gradient: [\"#4f81ff\", \"#2f60f0\"],\n        border: \"#1f3fbf\",\n        text: \"#f7f9ff\",\n        innerStroke: \"rgba(255, 255, 255, 0.18)\",\n        shadow: { color: \"rgba(56, 109, 255, 0.45)\", blur: 10, offsetY: 1 },\n        font: \"600 11px 'Segoe UI', Arial, sans-serif\",\n        iconFont: \"700 14px 'Segoe UI', Arial, sans-serif\"\n      },\n      secondary: {\n        gradient: [\"#3a3a3a\", \"#2c2c2c\"],\n        border: \"#4a4a4a\",\n        text: \"#dedede\",\n        innerStroke: \"rgba(255, 255, 255, 0.08)\",\n        font: \"500 11px 'Segoe UI', Arial, sans-serif\",\n        iconFont: \"600 13px 'Segoe UI', Arial, sans-serif\"\n      }\n    };\n\n    type ButtonMode = \"full\" | \"short\" | \"icon\";\n\n    const modeWidths: Record<string, Record<ButtonMode, number>> = {\n      addLora: { full: 132, short: 92, icon: 44 },\n      default: { full: 100, short: 64, icon: 36 }\n    };\n\n    const drawButton = (\n      x: number,\n      width: number,\n      style: ButtonStyle,\n      label: string,\n      mode: ButtonMode\n    ) => {\n      const buttonY = posY + (height - buttonHeight) / 2;\n      ctx.save();\n      const gradient = ctx.createLinearGradient(x, buttonY, x, buttonY + buttonHeight);\n      gradient.addColorStop(0, style.gradient[0]);\n      gradient.addColorStop(1, style.gradient[1]);\n\n      ctx.beginPath();\n      if (style.shadow) {\n        ctx.shadowColor = style.shadow.color;\n        ctx.shadowBlur = style.shadow.blur;\n        ctx.shadowOffsetY = style.shadow.offsetY ?? 0;\n      }\n      ctx.fillStyle = gradient;\n      ctx.roundRect(x, buttonY, width, buttonHeight, 5);\n      ctx.fill();\n\n      ctx.shadowColor = \"transparent\";\n      ctx.shadowBlur = 0;\n      ctx.shadowOffsetY = 0;\n\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = style.border;\n      ctx.stroke();\n\n      if (style.innerStroke) {\n        ctx.beginPath();\n        const inset = 0.6;\n        ctx.roundRect(x + inset, buttonY + inset, width - inset * 2, buttonHeight - inset * 2, 4);\n        ctx.strokeStyle = style.innerStroke;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      }\n\n      ctx.fillStyle = style.text;\n      ctx.textAlign = \"center\";\n      const font = mode === \"icon\" ? style.iconFont ?? \"600 13px 'Segoe UI', Arial, sans-serif\" : style.font ?? \"500 11px 'Segoe UI', Arial, sans-serif\";\n      ctx.font = font;\n      const verticalOffset = mode === \"icon\" ? -0.5 : 0;\n      ctx.fillText(label, x + width / 2, midY + verticalOffset);\n      ctx.restore();\n    };\n\n    const availableWidth = w - (margin * 2);\n    const allEnabled = this.getAllLorasState(node);\n    const toggleText = allEnabled ? 'Disable All' : 'Enable All';\n    const toggleShort = allEnabled ? 'Disable' : 'Enable';\n    const buttons = [\n      { id: 'addLora', text: 'Add LoRA', shortText: 'Add', icon: '➕', style: buttonStyles.primary, initialMode: 'full' as ButtonMode, combineIcon: true },\n      { id: 'toggleAll', text: toggleText, shortText: toggleShort, icon: '⏯️', style: buttonStyles.secondary, initialMode: 'full' as ButtonMode },\n      { id: 'saveTemplate', text: 'Save Set', shortText: 'Save', icon: '💾', style: buttonStyles.secondary, initialMode: 'full' as ButtonMode },\n      { id: 'loadTemplate', text: 'Load Set', shortText: 'Load', icon: '📂', style: buttonStyles.secondary, initialMode: 'full' as ButtonMode },\n      { id: 'settings', text: 'Settings', shortText: 'Set', icon: '⚙️', style: buttonStyles.secondary, initialMode: 'full' as ButtonMode }\n    ];\n\n    const totalSpacing = buttonSpacing * (buttons.length - 1);\n\n    const getModeWidth = (id: string, mode: ButtonMode) => {\n      const preset = modeWidths[id as keyof typeof modeWidths] || modeWidths.default;\n      return preset[mode];\n    };\n\n    const computeTotalWidth = (modes: ButtonMode[]) => {\n      return modes.reduce((sum, mode, idx) => {\n        const btn = buttons[idx];\n        return sum + getModeWidth(btn.id, mode);\n      }, 0);\n    };\n\n    const modes: ButtonMode[] = buttons.map((btn) => btn.initialMode);\n\n    const degradeSteps: { indices: number[]; from: ButtonMode; to: ButtonMode }[] = [\n      { indices: [1, 2, 3], from: 'full', to: 'short' },\n      { indices: [4], from: 'full', to: 'short' },\n      { indices: [0], from: 'full', to: 'short' },\n      { indices: [1, 2, 3], from: 'short', to: 'icon' },\n      { indices: [4], from: 'short', to: 'icon' },\n      { indices: [0], from: 'short', to: 'icon' }\n    ];\n\n    let totalWidth = computeTotalWidth(modes);\n    const availableForButtons = Math.max(60, availableWidth - totalSpacing);\n\n    let stepIndex = 0;\n    while (totalWidth > availableForButtons && stepIndex < degradeSteps.length) {\n      const step = degradeSteps[stepIndex];\n      let changed = false;\n      for (const index of step.indices) {\n        if (modes[index] === step.from) {\n          modes[index] = step.to;\n          changed = true;\n        }\n      }\n      if (changed) {\n        totalWidth = computeTotalWidth(modes);\n      } else {\n        stepIndex++;\n      }\n    }\n\n    if (totalWidth > availableForButtons) {\n      const scale = availableForButtons / totalWidth;\n      const minWidths = buttons.map((btn) => getModeWidth(btn.id, 'icon'));\n      totalWidth = 0;\n      const scaledWidths = buttons.map((btn, idx) => {\n        const rawWidth = getModeWidth(btn.id, modes[idx]) * scale;\n        const clamped = Math.max(minWidths[idx], rawWidth);\n        totalWidth += clamped;\n        return clamped;\n      });\n      const over = totalWidth - availableForButtons;\n      if (over > 0.1) {\n        let remainingOver = over;\n        for (let i = scaledWidths.length - 1; i >= 0 && remainingOver > 0.1; i--) {\n          const minWidth = minWidths[i];\n          const reducible = scaledWidths[i] - minWidth;\n          if (reducible > 0) {\n            const delta = Math.min(reducible, remainingOver);\n            scaledWidths[i] -= delta;\n            remainingOver -= delta;\n          }\n        }\n      }\n\n      buttons.forEach((btn, idx) => {\n        const btnWidth = scaledWidths[idx];\n        const mode = modes[idx];\n        let label: string;\n        if (mode === 'icon') {\n          label = btn.icon;\n        } else if (mode === 'short') {\n          label = btn.combineIcon && btn.icon ? `${btn.icon} ${btn.shortText}` : btn.shortText;\n        } else {\n          label = btn.combineIcon && btn.icon ? `${btn.icon} ${btn.text}` : btn.text;\n        }\n        drawButton(posX, btnWidth, btn.style, label, mode);\n        this.hitAreas[btn.id].bounds = [posX, 0, btnWidth, height];\n        posX += btnWidth + buttonSpacing;\n      });\n    } else {\n      buttons.forEach((btn, idx) => {\n        const mode = modes[idx];\n        const btnWidth = getModeWidth(btn.id, mode);\n        let label: string;\n        if (mode === 'icon') {\n          label = btn.icon;\n        } else if (mode === 'short') {\n          label = btn.combineIcon && btn.icon ? `${btn.icon} ${btn.shortText}` : btn.shortText;\n        } else {\n          label = btn.combineIcon && btn.icon ? `${btn.icon} ${btn.text}` : btn.text;\n        }\n        drawButton(posX, btnWidth, btn.style, label, mode);\n        this.hitAreas[btn.id].bounds = [posX, 0, btnWidth, height];\n        posX += btnWidth + buttonSpacing;\n      });\n    }\n\n    ctx.restore();\n  }\n\n  private getAllLorasState(node: any): boolean {\n    if (!node.customWidgets) return false;\n    const loraWidgets = node.customWidgets.filter((w: any) => w instanceof SuperLoraWidget);\n    return loraWidgets.length > 0 && loraWidgets.every((w: any) => w.value.enabled);\n  }\n\n  onToggleAllDown = (_event: any, _pos: any, node: any): boolean => {\n    const allState = this.getAllLorasState(node);\n    if (!node.customWidgets) return true;\n    const loraWidgets = node.customWidgets.filter((w: any) => w instanceof SuperLoraWidget);\n    loraWidgets.forEach((w: any) => w.value.enabled = !allState);\n    node.setDirtyCanvas(true, true);\n    return true;\n  };\n\n  onAddLoraDown = (event: any, _pos: any, node: any): boolean => {\n    WidgetAPI.showLoraSelector(node, undefined, event);\n    return true;\n  };\n\n  onSaveTemplateDown = (_event: any, _pos: any, node: any): boolean => {\n    WidgetAPI.showNameOverlay({\n      title: 'Save Template',\n      placeholder: 'Template name...',\n      initial: 'My LoRA Set',\n      submitLabel: 'Save',\n      onCommit: async (templateName: string) => {\n        const name = (templateName || '').trim();\n        if (!name) {\n          WidgetAPI.showToast('Please enter a template name', 'warning');\n          return;\n        }\n        const configs = WidgetAPI.getLoraConfigs(node);\n        const validConfigs = configs.filter((config: any) => config.lora && config.lora !== 'None');\n        if (validConfigs.length === 0) {\n          WidgetAPI.showToast('⚠️ No valid LoRAs to save in template', 'warning');\n          return;\n        }\n        try {\n          const exists = await WidgetAPI.templateService.templateExists(name as string);\n          if (exists) {\n            WidgetAPI.showToast(`⚠️ Template \"${name}\" already exists. Choose a different name.`, 'warning');\n            return;\n          }\n          const success = await WidgetAPI.templateService.saveTemplate(name as string, validConfigs);\n          WidgetAPI.showToast(success ? `✅ Template \"${name}\" saved successfully!` : '❌ Failed to save template. Please try again.', success ? 'success' : 'error');\n        } catch (error) {\n          console.error('Template save error:', error);\n          WidgetAPI.showToast('❌ Error saving template. Check console for details.', 'error');\n        }\n      }\n    });\n    return true;\n  };\n\n  onLoadTemplateDown = (event: any, _pos: any, node: any): boolean => {\n    WidgetAPI.showLoadTemplateDialog(node, event);\n    return true;\n  };\n\n  onSettingsDown = (event: any, _pos: any, node: any): boolean => {\n    WidgetAPI.showSettingsDialog(node, event);\n    return true;\n  };\n\n  computeSize(): [number, number] {\n    return [450, 35];\n  }\n}\n\n\n","/**\n * Super LoRA Loader Node - Advanced Implementation\n * Based on rgthree's sophisticated custom widget system\n */\n\nimport { LoraConfig } from '@/types';\nimport { LoraService } from '@/services/LoraService';\nimport { TemplateService } from '@/services/TemplateService';\nimport { CivitAiService } from '@/services/CivitAiService';\nimport { TagSetService } from '@/services/TagSetService';\nimport { OverlayService } from '@/services/OverlayService';\nimport { UpdateService } from '@/services/UpdateService';\nimport { FilePickerService } from '@/services/FilePickerService';\n// import { SuperLoraBaseWidget } from './widgets/SuperLoraBaseWidget';\nimport { SuperLoraHeaderWidget } from './widgets/SuperLoraHeaderWidget';\nimport { SuperLoraTagWidget } from './widgets/SuperLoraTagWidget';\nimport { SuperLoraWidget } from './widgets/SuperLoraWidget';\nimport { setWidgetAPI } from './widgets/WidgetAPI';\n\n// ComfyUI imports\nconst app: any = (window as any).app;\n\n// Widget drawing utilities (simplified versions of rgthree utilities)\nconst LiteGraph = (window as any).LiteGraph;\n\n// Widgets moved to ./widgets/*.ts\n\nexport class SuperLoraNode {\n  private static readonly NODE_WIDGET_TOP_OFFSET = 68;\n  private static readonly MARGIN_SMALL = 2;\n  private static loraService: LoraService = LoraService.getInstance();\n  public static templateService: TemplateService = TemplateService.getInstance();\n  public static civitaiService: CivitAiService;\n  private static updateService: UpdateService;\n  private static initialized = false;\n  private static initializationPromise: Promise<void> | null = null;\n  \n  static async initialize(): Promise<void> {\n    if (this.initialized) {\n      return;\n    }\n\n    if (this.initializationPromise) {\n      return this.initializationPromise;\n    }\n\n    this.initializationPromise = (async () => {\n      this.loraService = LoraService.getInstance();\n      this.templateService = TemplateService.getInstance();\n      this.civitaiService = CivitAiService.getInstance();\n  this.updateService = UpdateService.getInstance();\n  FilePickerService.getInstance();\n\n      // Bridge internal helpers/services to widgets via WidgetAPI immediately\n      setWidgetAPI({\n        showLoraSelector: (node: any, widget?: any, e?: any) => SuperLoraNode.showLoraSelector(node, widget, e),\n        showTagSelector: (node: any, widget: any) => SuperLoraNode.showTagSelector(node, widget),\n        showSettingsDialog: (node: any, e?: any) => SuperLoraNode.showSettingsDialog(node, e),\n        showLoadTemplateDialog: (node: any, e?: any) => SuperLoraNode.showLoadTemplateDialog(node, e),\n        showNameOverlay: (opts: any) => SuperLoraNode.showNameOverlay(opts),\n        showInlineText: (e: any, initial: string, onCommit: (v: string) => void, place?: any) => SuperLoraNode.showInlineText(e, initial, onCommit, place),\n        showToast: (m: string, t?: any) => SuperLoraNode.showToast(m, t),\n        calculateNodeSize: (node: any) => SuperLoraNode.calculateNodeSize(node),\n        organizeByTags: (node: any) => SuperLoraNode.organizeByTags(node),\n        addLoraWidget: (node: any, config?: any) => SuperLoraNode.addLoraWidget(node, config),\n        removeLoraWidget: (node: any, widget: any) => SuperLoraNode.removeLoraWidget(node, widget),\n        getLoraConfigs: (node: any) => SuperLoraNode.getLoraConfigs(node),\n        templateService: SuperLoraNode.templateService,\n        civitaiService: SuperLoraNode.civitaiService,\n        syncExecutionWidgets: (node: any) => SuperLoraNode.syncExecutionWidgets(node),\n      });\n\n      await Promise.all([\n        this.loraService.initialize(),\n        this.templateService.initialize(),\n        this.updateService.initialize()\n      ]);\n\n      try {\n        (window as any).NDSuperNodesUpdateStatus = this.updateService.getStatus();\n      } catch {}\n\n      this.initialized = true;\n    })();\n\n    try {\n      await this.initializationPromise;\n    } finally {\n      this.initializationPromise = null;\n    }\n  }\n\n  private static isNodeBypassed(node: any): boolean {\n    if (!node) {\n      return false;\n    }\n    const flags = node.flags || {};\n    if (flags.bypass || flags.bypassed || flags.skip_processing || flags.skipProcessing) {\n      return true;\n    }\n    if (node.properties && (node.properties.bypass === true || node.properties.skip === true)) {\n      return true;\n    }\n    try {\n      if (typeof LiteGraph !== 'undefined' && LiteGraph && typeof LiteGraph.NEVER === 'number') {\n        if (node.mode === LiteGraph.NEVER) {\n          return true;\n        }\n      }\n    } catch {}\n    return false;\n  }\n\n  /**\n   * Set up the node type with custom widgets\n   */\n  static setup(nodeType: any, _nodeData: any): void {\n    const originalNodeCreated = nodeType.prototype.onNodeCreated;\n    \n    nodeType.prototype.onNodeCreated = function() {\n      if (originalNodeCreated) {\n        originalNodeCreated.apply(this, arguments);\n      }\n      \n      SuperLoraNode.setupAdvancedNode(this);\n      // Purge any legacy execution widgets (ensure nothing visible remains)\n      try {\n        this.widgets = (this.widgets || []).filter((w: any) => {\n          const nm = w?.name || \"\";\n          return !(nm === 'lora_bundle' || nm.startsWith('lora_'));\n        });\n      } catch {}\n    };\n\n    // Override drawing and interaction\n    const originalOnDrawForeground = nodeType.prototype.onDrawForeground;\n    nodeType.prototype.onDrawForeground = function(ctx: any) {\n      if (originalOnDrawForeground) {\n        originalOnDrawForeground.call(this, ctx);\n      }\n      SuperLoraNode.drawCustomWidgets(this, ctx);\n    };\n\n    const originalOnMouseDown = nodeType.prototype.onMouseDown;\n    nodeType.prototype.onMouseDown = function(event: any, pos: any) {\n      if (SuperLoraNode.handleMouseDown(this, event, pos)) {\n        return true;\n      }\n      return originalOnMouseDown ? originalOnMouseDown.call(this, event, pos) : false;\n    };\n\n    const originalOnMouseUp = nodeType.prototype.onMouseUp;\n    nodeType.prototype.onMouseUp = function(event: any, pos: any) {\n      if (SuperLoraNode.handleMouseUp(this, event, pos)) {\n        return true;\n      }\n      return originalOnMouseUp ? originalOnMouseUp.call(this, event, pos) : false;\n    };\n\n    const originalOnResize = nodeType.prototype.onResize;\n    nodeType.prototype.onResize = function(size: any, ...rest: any[]) {\n      const minHeight = SuperLoraNode.computeContentHeight(this);\n\n      if (Array.isArray(size)) {\n        size[1] = Math.max(size[1], minHeight);\n      } else if (size && typeof size === 'object') {\n        if (typeof size[1] === 'number') {\n          size[1] = Math.max(size[1], minHeight);\n        }\n        if (typeof size.y === 'number') {\n          size.y = Math.max(size.y, minHeight);\n        }\n      }\n\n      if (this.size) {\n        this.size[1] = Math.max(this.size[1], minHeight);\n      }\n\n      if (originalOnResize) {\n        return originalOnResize.apply(this, [size, ...rest]);\n      }\n      return undefined;\n    };\n\n    // Override serialization to include custom widget data\n    const originalSerialize = nodeType.prototype.serialize;\n    nodeType.prototype.serialize = function() {\n      // Start with the default serialization (ensures normal ComfyUI behavior)\n      const data = originalSerialize.apply(this, arguments);\n\n      // Always inject the backend optional input 'lora_bundle' with a fresh JSON bundle.\n      try {\n        // If a bridge widget exists, update it with a fresh bundle and serialize its value.\n        const freshBundle = SuperLoraNode.buildBundle(this);\n        let bridge = (this.widgets || []).find((w: any) => w?.name === 'lora_bundle');\n        if (!bridge) {\n          // Create once (real widget so ComfyUI serializes it reliably)\n          bridge = this.addWidget('text', 'lora_bundle', freshBundle, () => {}, {});\n        }\n        // Make it effectively invisible and non-interactive while still serializable\n        bridge.type = 'text';\n        bridge.hidden = true;\n        bridge.draw = () => {};\n        bridge.computeSize = () => [0, 0];\n        bridge.value = freshBundle;\n        bridge.serializeValue = () => freshBundle;\n\n        data.inputs = data.inputs || {};\n        data.inputs.lora_bundle = freshBundle;\n      } catch {}\n\n      // Also save our custom UI widget structures for workflow persistence\n      data.customWidgets = SuperLoraNode.serializeCustomWidgets(this);\n\n      return data;\n    };\n\n    // Override configure to restore custom widget data\n    const originalConfigure = nodeType.prototype.configure;\n    nodeType.prototype.configure = function(data: any) {\n      if (originalConfigure) {\n        originalConfigure.call(this, data);\n      }\n      if (data.customWidgets) {\n        SuperLoraNode.deserializeCustomWidgets(this, data.customWidgets);\n      } else {\n        // Ensure we have at least a header widget\n        SuperLoraNode.setupAdvancedNode(this);\n      }\n      // Purge any legacy execution widgets except the lora_bundle bridge\n      try {\n        this.widgets = (this.widgets || []).filter((w: any) => {\n          const nm = w?.name || \"\";\n          return !(nm.startsWith('lora_') && nm !== 'lora_bundle');\n        });\n      } catch {}\n      // Sync invisible widgets after configuring\n      SuperLoraNode.syncExecutionWidgets(this);\n    };\n\n    // Add getExtraMenuOptions for additional context menu items\n    const originalGetExtraMenuOptions = nodeType.prototype.getExtraMenuOptions;\n    nodeType.prototype.getExtraMenuOptions = function(_canvas: any, optionsArr?: any[]) {\n      try {\n        let options = Array.isArray(optionsArr) ? optionsArr : [];\n        if (originalGetExtraMenuOptions) {\n          const maybe = originalGetExtraMenuOptions.call(this, _canvas, options);\n          if (Array.isArray(maybe)) options = maybe;\n        }\n\n        const hasAddLoRA = options.some((opt: any) => opt && opt.content === \"🏷️ Add LoRA\");\n        const hasSettings = options.some((opt: any) => opt && opt.content === \"⚙️ Settings\");\n\n        if (!hasAddLoRA || !hasSettings) {\n          if (options.length === 0 || options[options.length - 1] !== null) {\n            options.push(null);\n          }\n          if (!hasAddLoRA) {\n            options.push({ content: \"🏷️ Add LoRA\", callback: (_event: any) => SuperLoraNode.showLoraSelector(this, undefined, undefined) });\n          }\n          if (!hasSettings) {\n            options.push({ content: \"⚙️ Settings\", callback: (_event: any) => SuperLoraNode.showSettingsDialog(this) });\n          }\n        }\n\n        return options;\n      } catch {\n        const safe: any[] = optionsArr && Array.isArray(optionsArr) ? optionsArr : [];\n        const ensureSeparator = () => {\n          if (safe.length === 0 || safe[safe.length - 1] !== null) {\n            safe.push(null);\n          }\n        };\n        if (!safe.some((opt: any) => opt && opt.content === \"🏷️ Add LoRA\")) {\n          ensureSeparator();\n          safe.push({ content: \"🏷️ Add LoRA\", callback: (_event: any) => SuperLoraNode.showLoraSelector(this, undefined, undefined) });\n        }\n        if (!safe.some((opt: any) => opt && opt.content === \"⚙️ Settings\")) {\n          ensureSeparator();\n          safe.push({ content: \"⚙️ Settings\", callback: (_event: any) => SuperLoraNode.showSettingsDialog(this) });\n        }\n        return safe;\n      }\n    };\n  }\n\n  /**\n   * Initialize advanced node with custom widgets\n   */\n  private static setupAdvancedNode(node: any): void {\n    // console.log('Super LoRA Loader: Setting up advanced node');\n    \n    // Don't reinitialize if already set up\n    if (node.customWidgets && node.customWidgets.length > 0) {\n      console.log('Super LoRA Loader: Node already initialized, skipping');\n      return;\n    }\n    \n    // Initialize properties\n    node.properties = node.properties || {};\n    node.properties.enableTags = node.properties.enableTags !== false;\n    node.properties.showTriggerWords = node.properties.showTriggerWords !== false;\n    node.properties.showSeparateStrengths = node.properties.showSeparateStrengths || false;\n    node.properties.autoFetchTriggerWords = node.properties.autoFetchTriggerWords !== false;\n    \n    // Initialize custom widgets array\n    node.customWidgets = node.customWidgets || [];\n    \n    // Add header widget\n    node.customWidgets.push(new SuperLoraHeaderWidget());\n    \n    // Set minimum height only - preserve user's width preference\n    const contentHeight = this.computeContentHeight(node);\n    node.size = [node.size[0], Math.max(node.size[1], contentHeight)];\n    \n    console.log('Super LoRA Loader: Advanced node setup complete');\n  }\n\n  private static computeContentHeight(node: any): number {\n    const marginDefault = SuperLoraNode.MARGIN_SMALL;\n    let currentY = this.NODE_WIDGET_TOP_OFFSET;\n\n    if (!node?.customWidgets) {\n      return Math.max(currentY, 100);\n    }\n\n    const renderable: any[] = [];\n    for (const widget of node.customWidgets) {\n      const isCollapsed = widget instanceof SuperLoraWidget && widget.isCollapsedByTag(node);\n      if (isCollapsed) continue;\n      const size = widget.computeSize();\n      const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n      if (height === 0) continue;\n      renderable.push(widget);\n    }\n\n    renderable.forEach((widget, index) => {\n      const size = widget.computeSize();\n      const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n      let marginAfter = (widget instanceof SuperLoraTagWidget && widget.isCollapsed()) ? 0 : marginDefault;\n      const isLast = index === renderable.length - 1;\n      if (isLast && widget instanceof SuperLoraTagWidget && widget.isCollapsed()) {\n        marginAfter = Math.max(marginDefault, 8);\n      }\n      currentY += height + marginAfter;\n    });\n\n    return Math.max(currentY, 100);\n  }\n\n  /**\n   * Calculate required node size based on widgets\n   */\n  static calculateNodeSize(node: any): void {\n    const newHeight = this.computeContentHeight(node);\n    // Preserve the user's preferred width - only update height\n    if (node.size[1] !== newHeight) {\n      node.size[1] = newHeight;\n    }\n  }\n\n  /**\n   * Custom drawing for all widgets\n   */\n  static drawCustomWidgets(node: any, ctx: any): void {\n    if (!node.customWidgets) return;\n    const isBypassed = SuperLoraNode.isNodeBypassed(node);\n    const marginDefault = SuperLoraNode.MARGIN_SMALL;\n    let currentY = this.NODE_WIDGET_TOP_OFFSET; // USE THE CONSTANT\n\n    if (!isBypassed) {\n      // Build list of widgets that will render\n      const renderable: any[] = [];\n      for (const widget of node.customWidgets) {\n        const size = widget.computeSize();\n        const isCollapsed = widget instanceof SuperLoraWidget && widget.isCollapsedByTag(node);\n        const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n        if (height === 0 || isCollapsed) continue;\n        renderable.push(widget);\n      }\n\n      renderable.forEach((widget, index) => {\n        const size = widget.computeSize();\n        const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n        widget.draw(ctx, node, node.size[0], currentY, height);\n        let marginAfter = (widget instanceof SuperLoraTagWidget && widget.isCollapsed()) ? 0 : marginDefault;\n        const isLast = index === renderable.length - 1;\n        if (isLast && widget instanceof SuperLoraTagWidget && widget.isCollapsed()) {\n          marginAfter = Math.max(marginDefault, 8);\n        }\n        currentY += height + marginAfter;\n      });\n    }\n\n    if (isBypassed) {\n      try {\n        ctx.save();\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.fillStyle = 'rgba(142, 88, 255, 0.42)';\n        const radius = 6;\n        if (typeof ctx.roundRect === 'function') {\n          ctx.beginPath();\n          ctx.roundRect(4, 4, Math.max(0, node.size[0] - 8), Math.max(0, node.size[1] - 8), radius);\n          ctx.fill();\n        } else {\n          ctx.fillRect(4, 4, Math.max(0, node.size[0] - 8), Math.max(0, node.size[1] - 8));\n        }\n        ctx.restore();\n      } catch {}\n    }\n  }\n\n  /**\n   * Handle mouse interactions\n   */\n  static handleMouseDown(node: any, event: any, pos: any): boolean {\n    return this.handleMouseEvent(node, event, pos, 'onMouseDown');\n  }\n\n  static handleMouseUp(node: any, event: any, pos: any): boolean {\n    return this.handleMouseEvent(node, event, pos, 'onClick');\n  }\n\n  private static handleMouseEvent(node: any, event: any, pos: any, handler: string): boolean {\n    if (!node.customWidgets) return false;\n\n    if (SuperLoraNode.isNodeBypassed(node)) {\n      return true;\n    }\n\n    //console.log(`[SuperLoraNode] Mouse event: pos=[${pos[0]}, ${pos[1]}], handler=${handler}`);\n    //console.log('Node customWidgets:', node.customWidgets.map((w: any, i: number) => `${i}:${w.constructor.name}`));\n\n    // Capture last pointer screen position for inline editors\n    try {\n      const rect = (app as any)?.canvas?.canvas?.getBoundingClientRect?.();\n      const ds = (app as any)?.canvas?.ds;\n      let sx: number | null = (event && (event.clientX ?? event.pageX)) || null;\n      let sy: number | null = (event && (event.clientY ?? event.pageY)) || null;\n      if ((sx == null || sy == null) && rect && ds) {\n        sx = rect.left + (pos[0] + (ds.offset?.[0] || 0)) * (ds.scale || 1);\n        sy = rect.top + (pos[1] + (ds.offset?.[1] || 0)) * (ds.scale || 1);\n      }\n      if (sx != null && sy != null) {\n        (SuperLoraNode as any)._lastPointerScreen = {x: sx, y: sy};\n      }\n    } catch {}\n\n    const marginDefault = SuperLoraNode.MARGIN_SMALL;\n    let currentY = this.NODE_WIDGET_TOP_OFFSET; // USE THE CONSTANT\n    // console.log(`[SuperLoraNode] Starting currentY: ${currentY}`);\n\n    for (const widget of node.customWidgets) {\n      const size = widget.computeSize();\n\n      // Also respect collapsed widgets during hit detection\n      const isCollapsed = widget instanceof SuperLoraWidget && widget.isCollapsedByTag(node);\n      if (size[1] === 0 || isCollapsed) {\n        // Skip collapsed widgets without advancing Y so lower headers align\n        continue;\n      }\n\n      const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n\n      // Check if click is within widget bounds\n      const widgetStartY = currentY;\n      const widgetEndY = currentY + height;\n      if (pos[1] >= widgetStartY && pos[1] <= widgetEndY) {\n        // console.log(`[SuperLoraNode] ✓ Click within ${widget.constructor.name} bounds`);\n\n        // Adjust local position to account for the widget's offset\n        const localPos = [pos[0], pos[1] - widgetStartY];\n        // console.log(`[SuperLoraNode] Local position: [${localPos[0]}, ${localPos[1]}], widgetStartY=${widgetStartY}`);\n\n        if (widget[handler]) {\n          // console.log(`[SuperLoraNode] Calling ${widget.constructor.name}.${handler}()`);\n          if (widget[handler](event, localPos, node)) {\n            // console.log(`[SuperLoraNode] ✓ Handler returned true`);\n            return true;\n          } else {\n            // console.log(`[SuperLoraNode] ✗ Handler returned false`);\n          }\n        } else {\n          // console.log(`[SuperLoraNode] ✗ No ${handler} method on ${widget.constructor.name}`);\n        }\n      } else {\n        // console.log(`[SuperLoraNode] ✗ Click outside ${widget.constructor.name} bounds`);\n      }\n\n      const marginAfter = (widget instanceof SuperLoraTagWidget && widget.isCollapsed()) ? 0 : marginDefault;\n      currentY += height + marginAfter;\n    }\n\n    // console.log(`[SuperLoraNode] No widget handled the event`);\n    return false;\n  }\n\n  /**\n   * Compute the top Y offset (in node-local coordinates) for a given widget\n   */\n  private static computeWidgetTop(node: any, targetWidget: any): number {\n    if (!node?.customWidgets) return this.NODE_WIDGET_TOP_OFFSET;\n    const marginDefault = SuperLoraNode.MARGIN_SMALL;\n    let currentY = this.NODE_WIDGET_TOP_OFFSET;\n    for (const widget of node.customWidgets) {\n      const size = widget.computeSize?.() || [0, 0];\n      const isCollapsed = widget instanceof SuperLoraWidget && widget.isCollapsedByTag?.(node);\n      const height = widget instanceof SuperLoraWidget ? 34 : size[1];\n      if (height === 0 || isCollapsed) {\n        continue;\n      }\n      if (widget === targetWidget) {\n        return currentY;\n      }\n      const marginAfter = (widget instanceof SuperLoraTagWidget && widget.isCollapsed?.()) ? 0 : marginDefault;\n      currentY += height + marginAfter;\n    }\n    return currentY;\n  }\n\n  /**\n   * Show LoRA selector dialog with enhanced search functionality\n   */\n  static async showLoraSelector(node: any, widget?: SuperLoraWidget, _event?: any): Promise<void> {\n    try {\n      // Pull available LoRAs\n      const availableLoras = await SuperLoraNode.loraService.getAvailableLoras();\n      const usedLoras = this.getUsedLoras(node);\n      const items = availableLoras.map(name => ({\n        id: name,\n        label: name.replace(/\\.(safetensors|ckpt|pt)$/i, ''),\n        disabled: usedLoras.has(name)\n      }));\n\n      // Show overlay picker (no prompt)\n      OverlayService.getInstance().showSearchOverlay({\n        title: 'Add LoRA',\n        placeholder: 'Search LoRAs...',\n        items,\n        onChoose: (id: string) => {\n          if (this.isDuplicateLora(node, id)) {\n            this.showToast('⚠️ Already added to the list', 'warning');\n            return;\n          }\n          if (widget) {\n            widget.setLora(id, node);\n            this.showToast('✅ LoRA updated', 'success');\n          } else {\n            this.addLoraWidget(node, { lora: id });\n            this.showToast('✅ LoRA added', 'success');\n          }\n          node.setDirtyCanvas(true, true);\n        },\n        enableMultiToggle: true,\n        onChooseMany: (ids: string[]) => {\n          const added: string[] = [];\n          const skipped: string[] = [];\n          ids.forEach((id) => {\n            if (this.isDuplicateLora(node, id)) {\n              skipped.push(id);\n              return;\n            }\n            if (widget) {\n              // If launched from a specific row, first selection updates that row\n              if (added.length === 0) {\n                widget.setLora(id, node);\n                added.push(id);\n                return;\n              }\n            }\n            this.addLoraWidget(node, { lora: id });\n            added.push(id);\n          });\n          if (added.length) this.showToast(`✅ Added ${added.length} LoRA${added.length>1?'s':''}`, 'success');\n          if (skipped.length) this.showToast(`⚠️ Skipped ${skipped.length} duplicate${skipped.length>1?'s':''}`, 'warning');\n          node.setDirtyCanvas(true, true);\n        },\n        // Provide folder chips explicitly (top-level folders)\n        folderChips: Array.from(new Set(\n          availableLoras\n            .map((p: string) => p.split(/[\\\\/]/)[0])\n            .filter(Boolean)\n        )).sort(),\n        // Fix the root chip label for LoRAs\n        baseFolderName: 'loras'\n      });\n    } catch (error) {\n      console.error('Failed to show LoRA selector:', error);\n      this.showToast('Failed to load LoRAs', 'error');\n    }\n  }\n\n  /**\n   * Show tag selector dialog\n   */\n  static showTagSelector(node: any, widget: SuperLoraWidget): void {\n    const svc = TagSetService.getInstance();\n    const existingTags = this.getExistingTags(node);\n    const fromStore = svc.getAll();\n    const allTags = Array.from(new Set([...\n      fromStore,\n      ...existingTags\n    ]));\n    const items = allTags.map(tag => ({ id: tag, label: tag }));\n\n    OverlayService.getInstance().showSearchOverlay({\n      title: 'Select Tag',\n      placeholder: 'Search or create tag...',\n      items,\n      allowCreate: true,\n      onChoose: (tag: string) => {\n        // Persist in TagSet store if new\n        try { svc.addTag(tag); } catch {}\n        widget.value.tag = tag;\n        this.organizeByTags(node);\n        this.calculateNodeSize(node);\n        node.setDirtyCanvas(true, false);\n      },\n      rightActions: [\n        {\n          icon: '✏️',\n          title: 'Rename tag',\n          onClick: (name: string) => {\n            this.showNameOverlay({\n              title: 'Rename Tag',\n              placeholder: 'New tag name...',\n              initial: name,\n              submitLabel: 'Rename',\n              onCommit: (newName: string) => {\n                const ok = svc.renameTag(name, newName);\n                this.showToast(ok ? '✅ Tag renamed' : '❌ Failed to rename tag', ok ? 'success' : 'error');\n                this.showTagSelector(node, widget);\n              }\n            });\n          }\n        },\n        {\n          icon: '🗑',\n          title: 'Delete tag',\n          onClick: (name: string) => {\n            const okConfirm = confirm(`Delete tag \"${name}\"?`);\n            if (!okConfirm) return;\n            const ok = svc.deleteTag(name);\n            this.showToast(ok ? '✅ Tag deleted' : '❌ Failed to delete tag', ok ? 'success' : 'error');\n            this.showTagSelector(node, widget);\n          }\n        }\n      ]\n    });\n  }\n\n  /**\n   * Show settings dialog\n   */\n  static showSettingsDialog(node: any, event?: any): void {\n    // Top: core toggles\n    const coreItems: any[] = [\n      {\n        content: `${node.properties.enableTags ? \"✅\" : \"❌\"} Enable Tags`,\n        callback: () => {\n          node.properties.enableTags = !node.properties.enableTags;\n          this.organizeByTags(node);\n          this.calculateNodeSize(node);\n          node.setDirtyCanvas(true, false);\n          this.syncExecutionWidgets(node);\n        }\n      },\n      {\n        content: `${node.properties.showSeparateStrengths ? \"✅\" : \"❌\"} Separate Model/CLIP Strengths`,\n        callback: () => {\n          const enabling = !node.properties.showSeparateStrengths;\n          node.properties.showSeparateStrengths = enabling;\n          try {\n            // Initialize or merge strengths for better UX\n            const widgets = (node.customWidgets || []).filter((w: any) => w instanceof SuperLoraWidget);\n            if (enabling) {\n              // When turning on separate strengths, seed CLIP = Model for all\n              widgets.forEach((w: any) => {\n                const m = parseFloat(w.value?.strength ?? 0) || 0;\n                w.value.strengthClip = (typeof w.value?.strengthClip === 'number') ? w.value.strengthClip : m;\n              });\n            } else {\n              // When turning off, merge CLIP back to Model for consistency\n              widgets.forEach((w: any) => {\n                const m = parseFloat(w.value?.strength ?? 0) || 0;\n                w.value.strength = m;\n                w.value.strengthClip = m;\n              });\n            }\n          } catch {}\n          node.setDirtyCanvas(true, false);\n          this.syncExecutionWidgets(node);\n        }\n      },\n      {\n        content: `${node.properties.autoFetchTriggerWords ? \"✅\" : \"❌\"} Auto-fetch Trigger Words`,\n        callback: () => {\n          node.properties.autoFetchTriggerWords = !node.properties.autoFetchTriggerWords;\n          this.syncExecutionWidgets(node);\n        }\n      }\n    ];\n\n    // Bottom: visibility toggles\n    const showItems: any[] = [\n      {\n        content: `${node.properties.showTriggerWords ? \"✅\" : \"❌\"} Show Trigger Words`,\n        callback: () => {\n          node.properties.showTriggerWords = !node.properties.showTriggerWords;\n          node.setDirtyCanvas(true, false);\n          this.syncExecutionWidgets(node);\n        }\n      },\n      {\n        content: `${node.properties.showTagChip !== false ? \"✅\" : \"❌\"} Show Tag Chip`,\n        callback: () => {\n          node.properties.showTagChip = node.properties.showTagChip === false ? true : false;\n          node.setDirtyCanvas(true, false);\n          this.syncExecutionWidgets(node);\n        }\n      },\n      {\n        content: `${node.properties.showMoveArrows !== false ? \"✅\" : \"❌\"} Show Move Arrows`,\n        callback: () => {\n          node.properties.showMoveArrows = node.properties.showMoveArrows === false ? true : false;\n          node.setDirtyCanvas(true, false);\n          this.syncExecutionWidgets(node);\n        }\n      },\n      {\n        content: `${node.properties.showRemoveButton !== false ? \"✅\" : \"❌\"} Show Remove Button`,\n        callback: () => {\n          node.properties.showRemoveButton = node.properties.showRemoveButton === false ? true : false;\n          node.setDirtyCanvas(true, false);\n          this.syncExecutionWidgets(node);\n        }\n      },\n      {\n        content: `${node.properties.showStrengthControls !== false ? \"✅\" : \"❌\"} Show Strength Controls`,\n        callback: () => {\n          node.properties.showStrengthControls = node.properties.showStrengthControls === false ? true : false;\n          node.setDirtyCanvas(true, false);\n          this.syncExecutionWidgets(node);\n        }\n      }\n    ];\n\n    const menuItems: any[] = [...coreItems, null, ...showItems];\n    new LiteGraph.ContextMenu(menuItems, { title: 'Settings', event: event });\n  }\n\n  /**\n   * Show save template dialog\n   */\n  static showSaveTemplateDialog(node: any): void {\n    const templateName = prompt('Enter template name:', 'My LoRA Set');\n    if (templateName && templateName.trim()) {\n            const configs = this.getLoraConfigs(node);\n      this.templateService.saveTemplate(templateName.trim(), configs)\n        .then(success => {\n            if (success) {\n            this.showToast(`Template \"${templateName.trim()}\" saved successfully!`, 'success');\n            } else {\n              this.showToast('Failed to save template', 'error');\n            }\n        });\n    }\n  }\n\n  /**\n   * Show load template dialog with enhanced UI\n   */\n  static async showLoadTemplateDialog(node: any, event?: any): Promise<void> {\n    try {\n      const templateNames = await this.templateService.getTemplateNames();\n      if (templateNames.length === 0) {\n        this.showToast('📁 No templates available. Create one first!', 'info');\n        return;\n      }\n\n      const items = templateNames.map(name => ({ id: name, label: name }));\n\n      this.showSearchOverlay({\n        title: 'Load Template',\n        placeholder: 'Search templates...',\n        items,\n        onChoose: async (name: string) => {\n          try {\n            const template = await this.templateService.loadTemplate(name);\n            if (template) {\n              this.loadTemplate(node, template);\n              this.showToast(`✅ Template \"${name}\" loaded successfully!`, 'success');\n            } else {\n              this.showToast(`❌ Failed to load template \"${name}\". It may be corrupted.`, 'error');\n            }\n          } catch (error) {\n            console.error(`Template load error for \"${name}\":`, error);\n            this.showToast(`❌ Error loading template. Check console for details.`, 'error');\n          }\n        },\n        rightActions: [\n          {\n            icon: '✏️',\n            title: 'Rename template',\n            onClick: async (name: string) => {\n              this.showNameOverlay({\n                title: 'Rename Template',\n                placeholder: 'New template name...',\n                initial: name,\n                submitLabel: 'Rename',\n                onCommit: async (newName: string) => {\n                  const src = (name || '').trim();\n                  const dst = (newName || '').trim();\n                  if (!dst || dst === src) return;\n                  const ok = await this.templateService.renameTemplate(src, dst);\n                  this.showToast(ok ? '✅ Template renamed' : '❌ Failed to rename', ok ? 'success' : 'error');\n                  if (ok) this.showLoadTemplateDialog(node, event);\n                }\n              });\n            }\n          },\n          {\n            icon: '🗑',\n            title: 'Delete template',\n            onClick: async (name: string) => {\n              const ok = confirm(`Delete template \"${name}\"? This cannot be undone.`);\n              if (!ok) return;\n              const deleted = await this.templateService.deleteTemplate(name);\n              this.showToast(deleted ? '✅ Template deleted' : '❌ Failed to delete template', deleted ? 'success' : 'error');\n              if (deleted) this.showLoadTemplateDialog(node, event);\n            }\n          }\n        ]\n      });\n    } catch (error) {\n      console.error('Failed to show template selector:', error);\n      this.showToast('❌ Error loading templates. Check console for details.', 'error');\n    }\n  }\n\n  /**\n   * Add a new LoRA widget\n   */\n  static addLoraWidget(node: any, config?: Partial<LoraConfig>): SuperLoraWidget {\n    const widget = new SuperLoraWidget(`lora_${Date.now()}`);\n    \n    if (config) {\n      // Apply all non-lora fields first\n      const { lora: cfgLora, ...rest } = config as any;\n      if (Object.keys(rest).length) {\n        Object.assign(widget.value, rest);\n      }\n      // If a LoRA is provided, use setLora to trigger auto-fetch and UI updates\n      if (cfgLora && cfgLora !== 'None') {\n        widget.setLora(cfgLora as string, node);\n      }\n    }\n    // Ensure default tag is General when tags are enabled\n    if (node?.properties?.enableTags) {\n      widget.value.tag = widget.value.tag || 'General';\n    }\n    \n    // Append to bottom (after all existing widgets)\n    node.customWidgets = node.customWidgets || [];\n    node.customWidgets.push(widget);\n\n    // If tags are enabled, re-group under headers immediately\n    if (node?.properties?.enableTags) {\n      this.organizeByTags(node);\n    }\n    \n    // Update node size and trigger redraw\n    this.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n    \n    this.syncExecutionWidgets(node);\n    return widget;\n  }\n\n  /**\n   * Remove a LoRA widget\n   */\n  static removeLoraWidget(node: any, widget: SuperLoraWidget): void {\n    const index = node.customWidgets.indexOf(widget);\n    if (index >= 0) {\n      node.customWidgets.splice(index, 1);\n      this.organizeByTags(node);\n      this.calculateNodeSize(node);\n      node.setDirtyCanvas(true, false);\n      this.syncExecutionWidgets(node);\n    }\n  }\n\n  /**\n   * Organize widgets by tags\n   */\n  static organizeByTags(node: any): void {\n    if (!node.properties.enableTags) {\n      // Remove all tag widgets when tags are disabled\n      node.customWidgets = node.customWidgets.filter((w: any) => !(w instanceof SuperLoraTagWidget));\n      return;\n    }\n    \n    const loraWidgets = node.customWidgets.filter((w: any) => w instanceof SuperLoraWidget);\n    const headerWidget = node.customWidgets.find((w: any) => w instanceof SuperLoraHeaderWidget);\n    \n    // Group by tags\n    const tagGroups: { [key: string]: SuperLoraWidget[] } = {};\n    for (const widget of loraWidgets) {\n      const tag = widget.value.tag || \"General\";\n      if (!tagGroups[tag]) tagGroups[tag] = [];\n      tagGroups[tag].push(widget);\n    }\n\n    // Rebuild widgets array\n    node.customWidgets = [headerWidget].filter(Boolean);\n    \n    const sortedTags = Object.keys(tagGroups).sort((a, b) => \n      a === \"General\" ? -1 : b === \"General\" ? 1 : a.localeCompare(b)\n    );\n    \n    for (const tag of sortedTags) {\n      // Find or create tag widget\n      let tagWidget = node.customWidgets.find((w: any) => \n        w instanceof SuperLoraTagWidget && w.tag === tag\n      );\n      \n      if (!tagWidget) {\n        tagWidget = new SuperLoraTagWidget(tag);\n      }\n\n      node.customWidgets.push(tagWidget);\n      // Insert a subtle group border/separator as a visual container\n      // Tag headers already provide the title; lora rows follow.\n      node.customWidgets.push(...tagGroups[tag]);\n    }\n  }\n\n  /**\n   * Get used LoRA names\n   */\n  private static getUsedLoras(node: any): Set<string> {\n    return new Set(\n      node.customWidgets\n        .filter((w: any) => w instanceof SuperLoraWidget)\n        .map((w: any) => w.value.lora)\n        .filter((lora: string) => lora && lora !== \"None\")\n    );\n  }\n\n  /**\n   * Check if a LoRA is already used in the node\n   */\n  private static isDuplicateLora(node: any, loraName: string): boolean {\n    const usedLoras = this.getUsedLoras(node);\n    return usedLoras.has(loraName);\n  }\n\n  /**\n   * Get existing tags\n   */\n  private static getExistingTags(node: any): string[] {\n    return Array.from(new Set(\n      node.customWidgets\n        .filter((w: any) => w instanceof SuperLoraWidget)\n        .map((w: any) => w.value.tag)\n        .filter((tag: string) => tag)\n    ));\n  }\n\n  /**\n   * Get LoRA configurations\n   */\n  public static getLoraConfigs(node: any): LoraConfig[] {\n    return node.customWidgets\n      .filter((w: any) => w instanceof SuperLoraWidget)\n      .map((w: any) => ({\n        lora: w.value.lora,\n        enabled: w.value.enabled,\n        strength_model: w.value.strength,\n        strength_clip: w.value.strengthClip,\n        trigger_word: w.value.triggerWords,\n        tag: w.value.tag,\n        auto_populated: w.value.autoFetched\n      }))\n      .filter((config: LoraConfig) => config.lora && config.lora !== \"None\");\n  }\n\n  /**\n   * Load template configurations\n   */\n  private static loadTemplate(node: any, configs: LoraConfig[]): void {\n    // Clear existing LoRA widgets\n    node.customWidgets = node.customWidgets.filter((w: any) => \n      !(w instanceof SuperLoraWidget) && !(w instanceof SuperLoraTagWidget)\n    );\n    \n    // Add widgets for each config\n    for (const config of configs) {\n      const widget = new SuperLoraWidget(`lora_${Date.now()}_${Math.random()}`);\n      widget.value = {\n        lora: config.lora,\n        enabled: config.enabled !== false,\n        strength: config.strength_model || 1.0,\n        strengthClip: config.strength_clip || config.strength_model || 1.0,\n        triggerWords: config.trigger_word || \"\",\n        tag: config.tag || \"General\",\n        autoFetched: config.auto_populated || false\n      };\n      node.customWidgets.push(widget);\n    }\n    \n    this.organizeByTags(node);\n    this.calculateNodeSize(node);\n    node.setDirtyCanvas(true, false);\n    this.syncExecutionWidgets(node);\n  }\n\n  /**\n   * (THE BRIDGE) Syncs data from custom lora widgets to invisible execution widgets.\n   */\n  static syncExecutionWidgets(node: any): void {\n    // Do not create any visible/hidden widgets for backend comms. We inject during serialize.\n    // Still mark canvas dirty to refresh visuals as needed.\n    node.setDirtyCanvas(true, true);\n  }\n\n  // Build the JSON bundle the backend expects from current custom widgets\n  private static buildBundle(node: any): string {\n    const loraWidgets = node.customWidgets?.filter((w: any) => w instanceof SuperLoraWidget) || [];\n    const bundle = loraWidgets\n      .filter((w: any) => w?.value?.lora && w.value.lora !== 'None')\n      .map((w: any) => ({\n        lora: w.value.lora,\n        enabled: w.value.enabled,\n        strength: w.value.strength,\n        strengthClip: w.value.strengthClip,\n        triggerWords: w.value.triggerWords,\n        tag: w.value.tag,\n        autoFetched: w.value.autoFetched,\n      }));\n    try { return JSON.stringify(bundle); } catch { return '[]'; }\n  }\n    \n  /**\n   * Serialize custom widgets for saving\n   */\n  static serializeCustomWidgets(node: any): any {\n    if (!node.customWidgets) return null;\n\n    const cloneProperties = JSON.parse(JSON.stringify(node.properties || {}));\n\n    return {\n      properties: cloneProperties,\n      widgets: node.customWidgets.map((widget: any) => ({\n        name: widget.name,\n        type: widget.constructor.name,\n        value: JSON.parse(JSON.stringify(widget.value))\n      }))\n    };\n  }\n\n  /**\n   * Deserialize custom widgets when loading\n   */\n  static deserializeCustomWidgets(node: any, data: any): void {\n    if (!data) return;\n\n    try {\n      node.properties = node.properties || {};\n      if (data.properties) {\n        Object.assign(node.properties, JSON.parse(JSON.stringify(data.properties)));\n      }\n\n      const restoredWidgets: any[] = [];\n      if (Array.isArray(data.widgets)) {\n        for (const widgetData of data.widgets) {\n          let widget: any;\n          switch (widgetData.type) {\n            case 'SuperLoraHeaderWidget':\n              widget = new SuperLoraHeaderWidget();\n              break;\n            case 'SuperLoraTagWidget':\n              widget = new SuperLoraTagWidget(widgetData.value?.tag);\n              break;\n            case 'SuperLoraWidget':\n              widget = new SuperLoraWidget(widgetData.name);\n              break;\n            default:\n              continue;\n          }\n          widget.value = { ...widget.value, ...JSON.parse(JSON.stringify(widgetData.value || {})) };\n          restoredWidgets.push(widget);\n        }\n      }\n\n      node.customWidgets = restoredWidgets.length ? restoredWidgets : [new SuperLoraHeaderWidget()];\n    } catch (error) {\n      console.warn('SuperLoRA: Failed to restore custom widgets, resetting defaults', error);\n      node.customWidgets = [new SuperLoraHeaderWidget()];\n    }\n\n    node.setDirtyCanvas(true, true);\n  }\n\n  /**\n   * Get execution data for backend\n   */\n  static getExecutionData(node: any): any {\n    const loraWidgets = node.customWidgets?.filter((w: any) => w instanceof SuperLoraWidget) || [];\n    const executionData: any = {};\n    \n    // Add LoRA configurations\n    loraWidgets.forEach((widget: any, index: number) => {\n      if (widget.value.lora && widget.value.lora !== \"None\") {\n        executionData[`lora_${index}`] = {\n          lora: widget.value.lora,\n          enabled: widget.value.enabled,\n          strength: widget.value.strength,\n          strengthClip: widget.value.strengthClip,\n          triggerWords: widget.value.triggerWords,\n          tag: widget.value.tag,\n          autoFetched: widget.value.autoFetched\n        };\n      }\n    });\n    \n    return executionData;\n  }\n\n  /**\n   * Show toast notification with enhanced styling\n   */\n  public static showToast(message: string, type: 'success' | 'warning' | 'error' | 'info' = 'info'): void {\n    OverlayService.getInstance().showToast(message, type);\n  }\n\n  // Inline editors for better UX\n  static showInlineNumber(event: any, initial: number, onCommit: (v: number) => void): void {\n    const input = document.createElement('input');\n    input.type = 'number';\n    input.step = '0.05';\n    input.value = String(initial ?? 0);\n\n    // Calculate position using event coordinates\n    let leftPx: number, topPx: number;\n\n    try {\n      if (event && typeof event.clientX === 'number' && typeof event.clientY === 'number') {\n        leftPx = event.clientX + 8;\n        topPx = event.clientY - 10;\n        console.log(`[showInlineNumber] Using event coordinates: ${leftPx}, ${topPx}`);\n      } else {\n        const lastPointer = (SuperLoraNode as any)._lastPointerScreen;\n        leftPx = (lastPointer?.x ?? 100) + 8;\n        topPx = (lastPointer?.y ?? 100) - 10;\n        console.log(`[showInlineNumber] Using fallback coordinates: ${leftPx}, ${topPx}`);\n      }\n    } catch (error) {\n      console.warn('[showInlineNumber] Coordinate calculation failed, using fallback:', error);\n      const lastPointer = (SuperLoraNode as any)._lastPointerScreen;\n      leftPx = (lastPointer?.x ?? 100) + 8;\n      topPx = (lastPointer?.y ?? 100) - 10;\n    }\n\n    input.style.cssText = `\n      position: fixed;\n      left: ${leftPx}px;\n      top: ${topPx}px;\n      width: 80px;\n      padding: 4px 6px;\n      font-size: 12px;\n      z-index: 2147483647;\n      pointer-events: auto;\n      border: 1px solid #444;\n      border-radius: 3px;\n      background: #2f2f2f;\n      color: #fff;\n      box-shadow: 0 0 0 1px rgba(0,0,0,0.2) inset;\n    `;\n    let removedNum = false;\n    const cleanup = () => { if (removedNum) return; removedNum = true; try { input.remove(); } catch {} };\n    const commit = () => { const v = parseFloat(input.value); if (!Number.isNaN(v)) onCommit(v); cleanup(); };\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') commit();\n      if (e.key === 'Escape') cleanup();\n    });\n    input.addEventListener('blur', cleanup);\n    document.body.appendChild(input);\n    input.focus();\n    input.select();\n  }\n\n  static showInlineText(event: any, initial: string, onCommit: (v: string) => void, place?: { rect: { x: number; y: number; w: number; h: number }, node: any, widget?: any }): void {\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.value = initial ?? '';\n\n    // Calculate position - prioritize event coordinates, then try place rect, finally fallback\n    let leftPx: number, topPx: number, widthPx: number, heightPx: number;\n\n    try {\n      // Method 1: Use event coordinates if available (most reliable)\n      if (event && typeof event.clientX === 'number' && typeof event.clientY === 'number') {\n        leftPx = event.clientX + 8;\n        topPx = event.clientY - 10;\n        widthPx = 260;\n        heightPx = 20;\n        console.log(`[showInlineText] Using event coordinates: ${leftPx}, ${topPx}`);\n      }\n      // Method 2: Use place rect if event coords not available\n      else if (place?.rect && place?.node) {\n        const rect = place.rect;\n        const node = place.node;\n\n        // Get canvas information for coordinate transformation\n        const canvasEl = (app as any)?.canvas?.canvas;\n        const cRect = canvasEl?.getBoundingClientRect?.();\n        const ds = (app as any)?.canvas?.ds;\n        const scale = ds?.scale || 1;\n        const offset = ds?.offset || [0, 0];\n\n        if (cRect) {\n          // Transform widget-local coordinates to screen coordinates\n          const nodePos = node.pos || [0, 0];\n          const worldX = nodePos[0] + rect.x;\n          const worldY = nodePos[1] + rect.y;\n\n          leftPx = cRect.left + (worldX + offset[0]) * scale;\n          topPx = cRect.top + (worldY + offset[1]) * scale;\n          widthPx = Math.max(100, rect.w * scale);\n          heightPx = Math.max(16, rect.h * scale);\n\n          console.log(`[showInlineText] Using place rect: ${leftPx}, ${topPx}, rect:`, rect);\n        } else {\n          throw new Error('Canvas rect not available');\n        }\n      }\n      // Method 3: Fallback to last pointer screen position\n      else {\n        const lastPointer = (SuperLoraNode as any)._lastPointerScreen;\n        leftPx = (lastPointer?.x ?? 100) + 8;\n        topPx = (lastPointer?.y ?? 100) - 10;\n        widthPx = 260;\n        heightPx = 20;\n        console.log(`[showInlineText] Using fallback coordinates: ${leftPx}, ${topPx}`);\n      }\n    } catch (error) {\n      console.warn('[showInlineText] Coordinate calculation failed, using fallback:', error);\n      // Ultimate fallback\n      const lastPointer = (SuperLoraNode as any)._lastPointerScreen;\n      leftPx = (lastPointer?.x ?? 100) + 8;\n      topPx = (lastPointer?.y ?? 100) - 10;\n      widthPx = 260;\n      heightPx = 20;\n    }\n\n    input.style.cssText = `\n      position: fixed;\n      left: ${leftPx}px;\n      top: ${topPx}px;\n      width: ${widthPx}px;\n      height: ${heightPx}px;\n      padding: 2px 6px;\n      font-size: 12px;\n      z-index: 2147483647;\n      pointer-events: auto;\n      border: 1px solid #444;\n      border-radius: 3px;\n      background: #2f2f2f;\n      color: #fff;\n      box-shadow: 0 0 0 1px rgba(0,0,0,0.2) inset;\n    `;\n    let removedTxt = false;\n    const cleanup = () => { if (removedTxt) return; removedTxt = true; try { input.remove(); } catch {} };\n    const commit = () => { onCommit(input.value ?? ''); cleanup(); };\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') commit();\n      if (e.key === 'Escape') cleanup();\n    });\n    input.addEventListener('blur', cleanup);\n    document.body.appendChild(input);\n    input.focus();\n    input.select();\n  }\n\n  // Overlay utilities\n  public static showSearchOverlay(opts: { title: string; placeholder: string; items: { id: string; label: string; disabled?: boolean }[]; onChoose: (id: string) => void; allowCreate?: boolean, onRightAction?: (id: string) => void, rightActionIcon?: string, rightActionTitle?: string, rightActions?: Array<{ icon: string; title?: string; onClick: (id: string) => void }>, folderChips?: string[], enableMultiToggle?: boolean, onChooseMany?: (ids: string[]) => void }): void {\n    OverlayService.getInstance().showSearchOverlay(opts);\n  }\n\n  public static showNameOverlay(opts: { title: string; placeholder: string; initial?: string; submitLabel?: string; onCommit: (name: string) => void }): void {\n    const overlay = document.createElement('div');\n    overlay.style.cssText = `position: fixed; inset: 0; background: rgba(0,0,0,0.55); z-index: 2147483600; display: flex; align-items: center; justify-content: center; backdrop-filter: blur(2px);`;\n    const panel = document.createElement('div');\n    panel.style.cssText = `width: 420px; background: #222; border: 1px solid #444; border-radius: 8px; color: #fff; font-family: 'Segoe UI', Arial, sans-serif; box-shadow: 0 12px 30px rgba(0,0,0,0.4); overflow: hidden;`;\n    const header = document.createElement('div'); header.textContent = opts.title; header.style.cssText = `padding: 12px 14px; font-weight: 600; border-bottom: 1px solid #444; background: #2a2a2a;`;\n    const form = document.createElement('form'); form.style.cssText = `display: flex; gap: 8px; padding: 14px;`;\n    const input = document.createElement('input'); input.type = 'text'; input.placeholder = opts.placeholder; input.value = opts.initial || ''; input.style.cssText = `flex: 1; padding: 10px 12px; border-radius: 6px; border: 1px solid #555; background: #1a1a1a; color: #fff; outline: none;`;\n    const submit = document.createElement('button'); submit.type = 'submit'; submit.textContent = opts.submitLabel || 'Save'; submit.style.cssText = `padding: 10px 14px; background: #1976d2; color: #fff; border: 1px solid #0d47a1; border-radius: 6px; cursor: pointer;`;\n    const close = () => overlay.remove();\n    form.addEventListener('submit', (e) => { e.preventDefault(); opts.onCommit(input.value); close(); });\n    overlay.addEventListener('click', (e) => { if (e.target === overlay) close(); });\n    document.addEventListener('keydown', function onKey(e) { if (e.key === 'Escape') { close(); document.removeEventListener('keydown', onKey as any); } });\n    form.appendChild(input); form.appendChild(submit);\n    panel.appendChild(header); panel.appendChild(form); overlay.appendChild(panel); document.body.appendChild(overlay);\n    setTimeout(() => input.focus(), 0);\n  }\n}\n","/**\n * Node Enhancer Extension\n * Enhances existing ComfyUI nodes with advanced file picker overlays\n * Uses beforeRegisterNodeDef to inject enhanced UI into standard nodes\n */\n\n// @ts-ignore: Provided by ComfyUI runtime\nimport { app } from '/scripts/app.js';\nimport { FilePickerService } from '../services/FilePickerService';\n// Enhanced node configurations\ninterface EnhancedNodeConfig {\n  nodeType: string;\n  fileType: string;\n  widgetName: string;\n  label?: string;\n}\n\nconst GGUF_CLIP_WIDGET_MAP: Record<string, string[]> = {\n  DualCLIPLoaderGGUF: ['clip_name1', 'clip_name2'],\n  TripleCLIPLoaderGGUF: ['clip_name1', 'clip_name2', 'clip_name3'],\n  QuadrupleCLIPLoaderGGUF: ['clip_name1', 'clip_name2', 'clip_name3', 'clip_name4']\n};\n\nexport class NodeEnhancerExtension {\n  private static readonly ENHANCED_NODES: EnhancedNodeConfig[] = [\n    {\n      nodeType: 'CheckpointLoader',\n      fileType: 'models',\n      widgetName: 'ckpt_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'CheckpointLoaderSimple',\n      fileType: 'models',\n      widgetName: 'ckpt_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'VAELoader',\n      fileType: 'vae',\n      widgetName: 'vae_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'LoraLoader',\n      fileType: 'loras',\n      widgetName: 'lora_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'UNETLoader',\n      fileType: 'diffusion_models',\n      widgetName: 'unet_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'UnetLoaderGGUF',\n      fileType: 'gguf_unet_models',\n      widgetName: 'unet_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'UnetLoaderGGUFAdvanced',\n      fileType: 'gguf_unet_models',\n      widgetName: 'unet_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'CLIPLoader',\n      fileType: 'text_encoders',\n      widgetName: 'clip_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'CLIPLoaderGGUF',\n      fileType: 'text_encoders',\n      widgetName: 'clip_name',\n      label: 'ND Super Selector'\n    },\n    ...Object.entries(GGUF_CLIP_WIDGET_MAP).flatMap(([nodeType, widgetNames]) =>\n      widgetNames.map((widgetName, index) => ({\n        nodeType,\n        fileType: 'text_encoders',\n        widgetName,\n        label: `ND Super Selector (${index + 1})`\n      }))\n    ),\n    {\n      nodeType: 'ControlNetLoader',\n      fileType: 'controlnet',\n      widgetName: 'control_net_name',\n      label: 'ND Super Selector'\n    },\n    {\n      nodeType: 'UpscaleModelLoader',\n      fileType: 'upscale_models',\n      widgetName: 'model_name',\n      label: 'ND Super Selector'\n    }\n  ];\n\n  private static filePickerService: FilePickerService = FilePickerService.getInstance();\n  private static readonly HIDDEN_WIDGET_SIZE = (_width?: number) => [0, -4] as [number, number];\n  private static readonly DEBUG = true;\n  private static readonly NODE_FLAG_KEY = 'ndSuperSelectorEnabled';\n  private static readonly LEGACY_NODE_FLAG_KEY = 'ndPowerEnabled';\n  private static readonly OVERLAY_WIDGET_TYPE = 'ndSuperSelectorOverlay';\n\n  private static debugLog(...args: any[]): void {\n    if (this.DEBUG) {\n      console.debug('[NodeEnhancer]', ...args);\n    }\n  }\n\n  private static normalizeValueForWidget(widget: any, value: string): string {\n    if (!widget || typeof value !== 'string') {\n      return value;\n    }\n\n    const sample = (() => {\n      const opts = widget.options?.values;\n      if (Array.isArray(opts)) {\n        return opts.find((entry: any) => typeof entry === 'string');\n      }\n      if (opts && typeof opts === 'object') {\n        return Object.keys(opts).find((key) => typeof key === 'string');\n      }\n      return undefined;\n    })();\n\n    if (typeof sample === 'string') {\n      const prefersBackslash = sample.includes('\\\\') && !sample.includes('/');\n      const prefersSlash = sample.includes('/') && !sample.includes('\\\\');\n\n      if (prefersBackslash) {\n        return value.replace(/\\//g, '\\\\');\n      }\n      if (prefersSlash) {\n        return value.replace(/\\\\/g, '/');\n      }\n    }\n\n    return value;\n  }\n  private static isGloballyEnabled(): boolean {\n    try {\n  return app?.ui?.settings?.getSettingValue?.('nodeEnhancer.enableContextToggle', true) !== false;\n    } catch {\n      return true;\n    }\n  }\n\n  private static setNodeFlag(node: any, enabled: boolean): void {\n    try {\n      node.properties = node.properties || {};\n      if (enabled) {\n        node.properties[NodeEnhancerExtension.NODE_FLAG_KEY] = true;\n        node.properties[NodeEnhancerExtension.LEGACY_NODE_FLAG_KEY] = true;\n      } else if (node.properties) {\n        delete node.properties[NodeEnhancerExtension.NODE_FLAG_KEY];\n        delete node.properties[NodeEnhancerExtension.LEGACY_NODE_FLAG_KEY];\n      }\n    } catch {}\n  }\n\n  private static shouldRestoreEnabled(node: any, data?: any): boolean {\n    if (data) {\n      if (typeof data.ndSuperSelectorEnabled !== 'undefined') {\n        return !!data.ndSuperSelectorEnabled;\n      }\n      if (typeof data.ndPowerEnabled !== 'undefined') {\n        return !!data.ndPowerEnabled;\n      }\n    }\n    try {\n      const props = node?.properties;\n      if (props?.[NodeEnhancerExtension.NODE_FLAG_KEY] === true) {\n        return true;\n      }\n      if (props?.[NodeEnhancerExtension.LEGACY_NODE_FLAG_KEY] === true) {\n        return true;\n      }\n      return false;\n    } catch {\n      return false;\n    }\n  }\n\n  private static createOverlayWidget(node: any, targetWidget: any, config: EnhancedNodeConfig): any {\n    const overlayWidget: any = {\n      name: `${config.widgetName}__ndOverlay`,\n      type: NodeEnhancerExtension.OVERLAY_WIDGET_TYPE,\n      value: targetWidget.value ?? '',\n      _ndDisplayValue: targetWidget.value ?? '',\n      _ndWidgetLabel: targetWidget.label || targetWidget.name || config.widgetName,\n      _ndPlaceholder: NodeEnhancerExtension.buildPlaceholder(config, targetWidget),\n      __ndOverlay: true,\n      __ndTargetWidgetName: config.widgetName,\n      serialize: false,\n      parent: node,\n      computeSize(width: number) {\n        const H = (window as any).LiteGraph?.NODE_WIDGET_HEIGHT || 20;\n        return [width, H];\n      },\n      draw(this: any, ctx: CanvasRenderingContext2D, nodeRef: any, widgetWidth: number, widgetY: number) {\n        const H = (window as any).LiteGraph?.NODE_WIDGET_HEIGHT || 20;\n        const margin = 6;\n        const gutter = 10;\n        const inset = 8;\n  const x = margin + gutter;\n  const y = widgetY;\n  const availableWidth = Math.max(60, widgetWidth - margin * 2 - gutter * 2);\n  const w = Math.max(120, Math.min(availableWidth, (nodeRef?.size?.[0] || widgetWidth) - 24));\n  const caretX = x + w - inset - 12;\n  const iconX = caretX + 10;\n  const valueEnd = caretX - 10;\n        const labelText = this._ndWidgetLabel || config.widgetName;\n        const rawValue = (this._ndDisplayValue && String(this._ndDisplayValue)) || this._ndPlaceholder;\n        const isPlaceholder = rawValue === this._ndPlaceholder;\n\n        ctx.save();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = '#FFD700';\n        ctx.fillStyle = '#1f1f1f';\n        if (typeof ctx.roundRect === 'function') {\n          ctx.beginPath();\n          ctx.roundRect(x, y, w, H, 8);\n          ctx.fill();\n          ctx.stroke();\n        } else {\n          ctx.fillRect(x, y, w, H);\n          ctx.strokeRect(x, y, w, H);\n        }\n\n        ctx.font = '12px Arial';\n        ctx.textBaseline = 'middle';\n\n        const labelFullWidth = ctx.measureText(labelText).width;\n        const valueFullWidth = ctx.measureText(rawValue).width;\n        const labelSpacing = 8;\n\n        const totalSpace = valueEnd - (x + inset);\n        const neededValueWidth = Math.min(valueFullWidth, totalSpace);\n        const availableForLabel = totalSpace - neededValueWidth;\n\n        let showLabel = labelFullWidth > 0;\n        let labelWidth = 0;\n\n        if (showLabel && availableForLabel > labelSpacing) {\n          labelWidth = Math.min(labelFullWidth, availableForLabel - labelSpacing);\n          showLabel = labelWidth > 0;\n        } else {\n          showLabel = false;\n        }\n\n        const valueStart = showLabel ? x + inset + labelWidth + labelSpacing : x + inset;\n        const valueMaxWidth = Math.max(12, valueEnd - valueStart);\n\n        const displayLabel = showLabel ? NodeEnhancerExtension.truncateText(ctx, labelText, labelWidth, false) : '';\n        const displayValue = valueFullWidth <= valueMaxWidth\n          ? rawValue\n          : NodeEnhancerExtension.truncateText(ctx, rawValue, valueMaxWidth, false);\n\n        if (showLabel) {\n          ctx.textAlign = 'left';\n          ctx.fillStyle = '#888888';\n          ctx.fillText(displayLabel, x + inset, y + H / 2);\n        }\n\n        ctx.textAlign = 'right';\n        ctx.fillStyle = isPlaceholder ? '#7a7a7a' : '#ffffff';\n        ctx.fillText(displayValue, valueEnd, y + H / 2);\n\n        ctx.textAlign = 'center';\n        ctx.fillStyle = '#ffd54f';\n        ctx.fillText('⚡', iconX, y + H / 2 + 0.5);\n\n        ctx.fillStyle = '#888';\n        ctx.fillText('▾', caretX, y + H / 2 + 1);\n\n        ctx.restore();\n\n        this.last_y = widgetY;\n        this.last_height = H;\n      },\n      mouse(this: any, event: any, pos: any, nodeRef: any) {\n        const evtType = event?.type;\n        const isLeft = event?.button === 0 || event?.which === 1 || event?.button === undefined;\n        if (evtType === 'pointerdown' && isLeft) {\n          NodeEnhancerExtension.showEnhancedPicker(nodeRef ?? node, config);\n          return true;\n        }\n        if (evtType === 'pointerup' && isLeft) {\n          return true;\n        }\n        return false;\n      },\n      serializeValue() {\n        if (typeof targetWidget.serializeValue === 'function') {\n          try {\n            return targetWidget.serializeValue();\n          } catch {}\n        }\n        return targetWidget.value;\n      }\n    };\n\n    overlayWidget.callback = () => {\n      NodeEnhancerExtension.showEnhancedPicker(node, config);\n    };\n\n    overlayWidget.updateDisplay = (value: string | undefined | null, displayValue?: string | null) => {\n      const normalizedValue = typeof value === 'string' ? value : '';\n      const normalizedDisplay = typeof displayValue === 'string' ? displayValue : normalizedValue;\n      overlayWidget.value = normalizedValue;\n      overlayWidget._ndDisplayValue = normalizedDisplay || '';\n    };\n\n    return overlayWidget;\n  }\n\n  private static formatDisplayValue(value: string | undefined | null): string {\n    if (!value) {\n      return '';\n    }\n    try {\n      return String(value);\n    } catch {\n      return '';\n    }\n  }\n\n  private static buildPlaceholder(config: EnhancedNodeConfig, widget: any): string {\n    const base = widget?.label || widget?.name || config.label || config.widgetName || 'file';\n    return `Select ${base}`;\n  }\n\n  private static ensureWidgetValueSelectable(widget: any, value: string): void {\n    if (!widget || typeof value !== 'string') {\n      return;\n    }\n\n    try {\n      const before = widget.options?.values;\n      if (!widget.options) {\n        widget.options = { values: [value] };\n        NodeEnhancerExtension.debugLog('Initialized widget options for value', value, { widgetName: widget.name });\n        return;\n      }\n\n      const options = widget.options;\n      const { values } = options;\n\n      if (Array.isArray(values)) {\n        if (!values.includes(value)) {\n          options.values = [...values, value];\n          NodeEnhancerExtension.debugLog('Appended value to array options', value, { widgetName: widget.name, before, after: options.values });\n        }\n        return;\n      }\n\n      if (values && typeof values === 'object') {\n        if (!(value in values)) {\n          options.values = { ...values, [value]: value };\n          NodeEnhancerExtension.debugLog('Added value to object options', value, { widgetName: widget.name, before, after: options.values });\n        }\n        return;\n      }\n\n      options.values = [value];\n      NodeEnhancerExtension.debugLog('Reset options.values to single entry', value, { widgetName: widget.name, before });\n    } catch (error) {\n      console.warn('Node Enhancer: failed to sync widget values', error);\n    }\n  }\n\n  private static enhanceWidget(node: any, widget: any, config: EnhancedNodeConfig): void {\n    node.__ndEnhancedWidgets = node.__ndEnhancedWidgets || {};\n    const meta = node.__ndEnhancedWidgets[config.widgetName] || { original: {} };\n    const original = meta.original as Record<string, any>;\n\n    if (!('callback' in original)) original.callback = widget.callback;\n    if (!('mouse' in original)) original.mouse = widget.mouse;\n    if (!('draw' in original)) original.draw = widget.draw;\n    if (!('computeSize' in original)) original.computeSize = widget.computeSize;\n    if (!('hidden' in original)) original.hidden = widget.hidden;\n    if (!('options' in original)) original.options = widget.options ? { ...widget.options } : undefined;\n    if (!('values' in original)) original.values = widget.options?.values ? [...widget.options.values] : undefined;\n    if (!('serialize' in original)) original.serialize = widget.serialize;\n    if (!('skipSerialize' in original)) original.skipSerialize = widget.skipSerialize;\n\n    widget._ndPlaceholder = NodeEnhancerExtension.buildPlaceholder(config, widget);\n    widget.hidden = true;\n    widget.computeSize = NodeEnhancerExtension.HIDDEN_WIDGET_SIZE;\n\n    if (!meta.overlay) {\n      const overlay = NodeEnhancerExtension.createOverlayWidget(node, widget, config);\n      meta.overlay = overlay;\n      if (!node.widgets) node.widgets = [];\n      const idx = node.widgets.indexOf(widget);\n      if (idx >= 0) node.widgets.splice(idx + 1, 0, overlay);\n      else node.widgets.push(overlay);\n    }\n\n    widget.callback = function() {\n      NodeEnhancerExtension.showEnhancedPicker(node, config);\n      return true;\n    };\n\n    widget.mouse = function(event: any, pos: any, nodeRef: any) {\n      const evtType = event?.type;\n      const isLeft = evtType === 'pointerdown' && (event?.button === 0 || event?.which === 1 || event?.button === undefined);\n      if (isLeft) {\n        NodeEnhancerExtension.showEnhancedPicker(nodeRef ?? node, config);\n        return true;\n      }\n      if (typeof meta.original.mouse === 'function') {\n        return meta.original.mouse.call(this, event, pos, nodeRef ?? node);\n      }\n      return false;\n    };\n\n    node.__ndEnhancedWidgets[config.widgetName] = meta;\n  }\n\n  private static restoreWidget(node: any, widget: any | undefined, config: EnhancedNodeConfig): void {\n    const meta = node.__ndEnhancedWidgets?.[config.widgetName];\n    if (!meta) return;\n\n    const original = meta.original || {};\n\n    if (widget) {\n      if ('callback' in original) {\n        widget.callback = original.callback;\n      } else {\n        delete widget.callback;\n      }\n\n      if ('mouse' in original) {\n        widget.mouse = original.mouse;\n      } else {\n        delete widget.mouse;\n      }\n\n      if ('draw' in original) {\n        widget.draw = original.draw;\n      } else {\n        delete widget.draw;\n      }\n\n      if ('computeSize' in original) {\n        if (original.computeSize) {\n          widget.computeSize = original.computeSize;\n        } else {\n          delete widget.computeSize;\n        }\n      }\n\n      if ('serialize' in original) {\n        widget.serialize = original.serialize;\n      } else {\n        delete widget.serialize;\n      }\n\n      if ('skipSerialize' in original) {\n        widget.skipSerialize = original.skipSerialize;\n      } else {\n        delete widget.skipSerialize;\n      }\n\n      if ('options' in original) {\n        if (original.options === undefined) {\n          delete widget.options;\n        } else {\n          widget.options = { ...original.options };\n          if (original.values !== undefined) {\n            widget.options.values = [...original.values];\n          }\n        }\n      } else if (widget.options && 'values' in widget.options) {\n        delete widget.options.values;\n      }\n\n      if ('hidden' in original) {\n        if (original.hidden === undefined) {\n          delete widget.hidden;\n        } else {\n          widget.hidden = original.hidden;\n        }\n      } else {\n        delete widget.hidden;\n      }\n\n      delete widget._ndPlaceholder;\n      delete widget.last_y;\n      delete widget.last_height;\n      delete widget._ndDisplayValue;\n    }\n\n    if (meta.overlay) {\n      const idx = node.widgets?.indexOf(meta.overlay) ?? -1;\n      if (idx >= 0) node.widgets.splice(idx, 1);\n      delete meta.overlay;\n    }\n\n    delete node.__ndEnhancedWidgets[config.widgetName];\n    if (node.__ndEnhancedWidgets && Object.keys(node.__ndEnhancedWidgets).length === 0) {\n      delete node.__ndEnhancedWidgets;\n    }\n    NodeEnhancerExtension.restoreTitle(node);\n  }\n\n  /**\n   * Initialize the node enhancer extension\n   */\n  static async initialize(): Promise<void> {\n    console.log('Node Enhancer Extension: Initializing...');\n\n    // Load user preferences\n    this.loadUserPreferences();\n\n    // Initialize file picker service\n    await this.filePickerService;\n\n    console.log('Node Enhancer Extension: Initialized successfully');\n  }\n\n  /**\n   * Set up enhancement for a specific node type\n   */\n  static setup(nodeType: any, nodeData: any): void {\n    const configs = this.ENHANCED_NODES.filter(c => c.nodeType === nodeData.name);\n    if (!configs.length) return;\n\n    const originalCreate = nodeType.prototype.onNodeCreated;\n    nodeType.prototype.onNodeCreated = function() {\n      originalCreate?.apply(this, arguments);\n      if (!this.__ndPowerEnabled) this.__ndPowerEnabled = false;\n      if (typeof this.__ndOriginalTitle === 'undefined') {\n        this.__ndOriginalTitle = this.title || this.constructor?.title || '';\n      }\n      if (this.__ndPowerEnabled) {\n        configs.forEach(cfg => NodeEnhancerExtension.enableForNode(this, cfg));\n        NodeEnhancerExtension.applyTitleBadge(this);\n      } else {\n        NodeEnhancerExtension.restoreTitle(this);\n      }\n    };\n\n    const originalMenu = nodeType.prototype.getExtraMenuOptions;\n    nodeType.prototype.getExtraMenuOptions = function(canvas: any, optionsArr?: any[]) {\n      if (!NodeEnhancerExtension.isGloballyEnabled()) {\n        return originalMenu ? originalMenu.call(this, canvas, optionsArr) : optionsArr;\n      }\n\n      let options = Array.isArray(optionsArr) ? optionsArr : [];\n      const maybe = originalMenu?.call(this, canvas, options);\n      if (Array.isArray(maybe)) {\n        options = maybe;\n      } else if (!Array.isArray(options)) {\n        options = [];\n      }\n\n      const toggleOption: any = {\n        content: this.__ndPowerEnabled ? '➖ Disable ND Super Selector' : '⚡ Enable ND Super Selector',\n        callback: () => {\n          try {\n            if (this.__ndPowerEnabled) {\n              configs.forEach(cfg => NodeEnhancerExtension.disableForNode(this, cfg));\n              this.__ndPowerEnabled = false;\n              NodeEnhancerExtension.restoreTitle(this);\n            } else {\n              configs.forEach(cfg => NodeEnhancerExtension.enableForNode(this, cfg));\n              this.__ndPowerEnabled = true;\n              NodeEnhancerExtension.applyTitleBadge(this);\n            }\n            NodeEnhancerExtension.setNodeFlag(this, !!this.__ndPowerEnabled);\n            this.setDirtyCanvas?.(true, true);\n          } catch (error) {\n            console.warn('Node Enhancer: toggle failed', error);\n          }\n        }\n      };\n      toggleOption.__ndSuperSelectorToggle = true;\n\n      const baseOptions = Array.isArray(options) ? options.slice() : [];\n      const filtered = baseOptions.filter((opt: any) => !opt?.__ndSuperSelectorToggle);\n\n      if (!Array.isArray(options)) {\n        options = Array.isArray(optionsArr) ? optionsArr : [];\n      }\n\n      options.length = 0;\n      options.push(toggleOption);\n\n      if (filtered.length) {\n        if (filtered[0] !== null) {\n          options.push(null);\n        }\n        options.push(...filtered);\n      }\n\n      if (Array.isArray(optionsArr) && optionsArr !== options) {\n        optionsArr.length = 0;\n        optionsArr.push(...options);\n      }\n\n      return options;\n    };\n\n    const originalSerialize = nodeType.prototype.serialize;\n    nodeType.prototype.serialize = function() {\n      const data = originalSerialize ? originalSerialize.apply(this, arguments) : {};\n      try {\n        const enabled = !!this.__ndPowerEnabled;\n        data.ndSuperSelectorEnabled = enabled;\n        data.ndPowerEnabled = enabled;\n        data.properties = data.properties || {};\n        if (enabled) {\n          data.properties[NodeEnhancerExtension.NODE_FLAG_KEY] = true;\n          data.properties[NodeEnhancerExtension.LEGACY_NODE_FLAG_KEY] = true;\n        } else if (data.properties) {\n          delete data.properties[NodeEnhancerExtension.NODE_FLAG_KEY];\n          delete data.properties[NodeEnhancerExtension.LEGACY_NODE_FLAG_KEY];\n        }\n\n        if (this.__ndEnhancedWidgets && Array.isArray(this.widgets)) {\n          const hasOverlayWidgets = this.widgets.some((w: any) => w?.__ndOverlay);\n          if (hasOverlayWidgets) {\n            const serializedValues: any[] = [];\n\n            for (const widget of this.widgets) {\n              if (!widget || widget.__ndOverlay || widget.serialize === false) {\n                continue;\n              }\n\n              if (typeof widget.serializeValue === 'function') {\n                try {\n                  serializedValues.push(widget.serializeValue());\n                  continue;\n                } catch {}\n              }\n\n              serializedValues.push(widget.value ?? null);\n            }\n\n            data.widgets_values = serializedValues;\n          }\n        }\n      } catch {}\n      return data;\n    };\n\n    const originalConfigure = nodeType.prototype.configure;\n    nodeType.prototype.configure = function(data: any) {\n      if (originalConfigure) {\n        originalConfigure.call(this, data);\n      }\n      try {\n        if (typeof this.__ndPowerEnabled === 'undefined') this.__ndPowerEnabled = false;\n        const shouldEnable = NodeEnhancerExtension.shouldRestoreEnabled(this, data);\n\n        if (shouldEnable) {\n          if (!this.__ndPowerEnabled) {\n            this.__ndPowerEnabled = true;\n            configs.forEach((cfg) => NodeEnhancerExtension.enableForNode(this, cfg));\n          }\n          NodeEnhancerExtension.applyTitleBadge(this);\n        } else if (this.__ndPowerEnabled) {\n          configs.forEach((cfg) => NodeEnhancerExtension.disableForNode(this, cfg));\n          this.__ndPowerEnabled = false;\n          NodeEnhancerExtension.restoreTitle(this);\n        } else {\n          configs.forEach((cfg) => NodeEnhancerExtension.disableForNode(this, cfg));\n          NodeEnhancerExtension.restoreTitle(this);\n        }\n        NodeEnhancerExtension.setNodeFlag(this, !!this.__ndPowerEnabled);\n      } catch {}\n    };\n\n    const originalOnMouseDown = nodeType.prototype.onMouseDown;\n    nodeType.prototype.onMouseDown = function(event: any, pos: any) {\n      const handled = configs.some((cfg) => NodeEnhancerExtension.handleEnhancedMouseDown(this, event, pos, cfg));\n      if (handled) {\n        return true;\n      }\n      return originalOnMouseDown ? originalOnMouseDown.call(this, event, pos) : false;\n    };\n\n    console.log(`Node Enhancer: Successfully enhanced ${nodeData.name}`);\n  }\n\n  /**\n   * Set up enhanced node with custom widgets\n   */\n  private static setupEnhancedNode(node: any, config: EnhancedNodeConfig): void {\n    if (node.__ndEnhancedWidgets?.[config.widgetName]) {\n      return;\n    }\n\n    const widget = node.widgets?.find((w: any) => w.name === config.widgetName);\n    if (!widget) {\n      console.warn(`Node Enhancer: Could not find widget \"${config.widgetName}\" in ${config.nodeType}`);\n      return;\n    }\n\n    node.__ndPowerEnabled = true;\n    node.__ndEnhancedWidgets = node.__ndEnhancedWidgets || {};\n    node.__ndEnhancedWidgets[config.widgetName] = node.__ndEnhancedWidgets[config.widgetName] || { original: {} };\n\n    NodeEnhancerExtension.debugLog('Enhancing widget', {\n      nodeType: node?.type,\n      widgetName: widget?.name,\n      initialValue: widget?.value,\n      options: widget?.options?.values\n    });\n\n    this.enhanceWidget(node, widget, config);\n    this.applyTitleBadge(node);\n    this.setNodeFlag(node, true);\n  }\n\n  /** Enable enhancement for a specific node instance */\n  private static enableForNode(node: any, config: EnhancedNodeConfig): void {\n    this.setupEnhancedNode(node, config);\n    this.setNodeFlag(node, true);\n  }\n\n  /** Disable enhancement for a specific node instance */\n  private static disableForNode(node: any, config: EnhancedNodeConfig): void {\n    if (!node.__ndEnhancedWidgets || !node.__ndEnhancedWidgets[config.widgetName]) {\n      return;\n    }\n    const widget = node.widgets?.find((w: any) => w.name === config.widgetName);\n    NodeEnhancerExtension.restoreWidget(node, widget, config);\n    if (!node.__ndEnhancedWidgets) {\n      node.__ndPowerEnabled = false;\n    }\n    NodeEnhancerExtension.restoreTitle(node);\n    this.setNodeFlag(node, !!node.__ndPowerEnabled);\n  }\n\n  private static showEnhancedPicker(node: any, config: EnhancedNodeConfig): void {\n    const widget = node.widgets?.find((w: any) => w.name === config.widgetName);\n    if (!widget) return;\n\n    const currentValue = widget.value;\n\n    this.filePickerService.showFilePicker(\n      config.fileType,\n      (file) => {\n        let newValue: string | undefined;\n        if (file && typeof file.id === 'string') {\n          newValue = file.id;\n        } else if (file && typeof file.path === 'string') {\n          newValue = file.path;\n        } else if (file && typeof file.filename === 'string') {\n          newValue = file.filename;\n        }\n\n        NodeEnhancerExtension.debugLog('File picker selection', {\n          nodeType: node?.type,\n          widgetName: config.widgetName,\n          file,\n          proposedValue: newValue,\n          existingValues: widget.options?.values\n        });\n\n        if (typeof newValue === 'string') {\n          try {\n            const normalizedValue = NodeEnhancerExtension.normalizeValueForWidget(widget, newValue);\n            widget.value = normalizedValue;\n            NodeEnhancerExtension.ensureWidgetValueSelectable(widget, normalizedValue);\n            NodeEnhancerExtension.debugLog('Applied widget value', {\n              nodeType: node?.type,\n              widgetName: config.widgetName,\n              newValue: normalizedValue,\n              updatedValues: widget.options?.values\n            });\n          } catch (error) {\n            console.warn('Node Enhancer: failed to assign widget value', error);\n          }\n        }\n\n        const meta = node.__ndEnhancedWidgets?.[config.widgetName];\n        if (meta?.overlay) {\n          const displayValue = NodeEnhancerExtension.formatDisplayValue(\n            (file && typeof file.label === 'string' && file.label) ||\n            (file && typeof file.path === 'string' && file.path) ||\n            (file && typeof file.filename === 'string' && file.filename) ||\n            widget.value\n          );\n          meta.overlay.updateDisplay(widget.value, displayValue);\n          NodeEnhancerExtension.debugLog('Updated overlay display', {\n            nodeType: node?.type,\n            widgetName: config.widgetName,\n            displayValue,\n            widgetValue: widget.value\n          });\n        }\n        node.setDirtyCanvas?.(true, true);\n      },\n      {\n        title: `Select ${config.fileType}`,\n        multiSelect: false,\n        currentValue\n      }\n    );\n  }\n\n  /**\n   * Handle mouse events for enhanced widgets\n   */\n  private static handleEnhancedMouseDown(node: any, event: any, pos: any, config: EnhancedNodeConfig): boolean {\n    if (!node.__ndPowerEnabled || !node.__ndEnhancedWidgets || !node.__ndEnhancedWidgets[config.widgetName]) return false;\n\n    const widget = node.widgets?.find((w: any) => w.name === config.widgetName);\n    if (!widget) return false;\n\n    try {\n      const isLeft = (event?.button === 0) || (event?.which === 1) || !('button' in (event || {}));\n      if (!isLeft) return false;\n\n      const y = widget?.last_y ?? null;\n      const H = (window as any).LiteGraph?.NODE_WIDGET_HEIGHT || 20;\n      if (y == null) return false;\n\n      const withinX = pos[0] >= 0 && pos[0] <= (node.size?.[0] || 200);\n      const withinY = pos[1] >= y && pos[1] <= y + H;\n      if (withinX && withinY) {\n        this.showEnhancedPicker(node, config);\n        return true;\n      }\n    } catch {}\n    return false;\n  }\n\n  /**\n   * Draw enhanced widgets (visual indicators)\n   */\n  private static drawEnhancedWidgets(node: any, ctx: any): void {\n    if (!node.__ndPowerEnabled) return;\n\n    // Legacy indicator is kept for compatibility but hidden by default.\n  }\n\n  private static applyTitleBadge(node: any): void {\n    try {\n      if (typeof node.__ndOriginalTitle === 'undefined') {\n        node.__ndOriginalTitle = node.title || node.constructor?.title || '';\n      } else {\n        node.title = node.__ndOriginalTitle;\n      }\n    } catch {}\n  }\n\n  private static restoreTitle(node: any): void {\n    try {\n      if (typeof node.__ndOriginalTitle !== 'undefined') {\n        node.title = node.__ndOriginalTitle;\n      }\n    } catch {}\n  }\n\n  // Preference helpers retained for future global defaults (no-op currently)\n  private static loadUserPreferences(): void { /* no-op for per-node mode */ }\n  private static saveUserPreferences(): void { /* no-op for per-node mode */ }\n  static getAvailableEnhancements(): EnhancedNodeConfig[] { return this.ENHANCED_NODES; }\n\n  static enableEnhancement(nodeTypeName: string): void {\n    const config = this.ENHANCED_NODES.find(cfg => cfg.nodeType === nodeTypeName);\n    if (!config) return;\n    const graph = (window as any).app?.graph;\n    if (!graph) return;\n    (graph._nodes || []).forEach((node: any) => {\n      if (node.type === nodeTypeName) {\n        try {\n          this.enableForNode(node, config);\n          node.setDirtyCanvas?.(true, true);\n        } catch (error) {\n          console.warn('Node Enhancer: failed to enable node', node, error);\n        }\n      }\n    });\n  }\n\n  private static loadSet(key: string, sessionFirst = false): Set<string> {\n    try {\n      if (sessionFirst) {\n        const fromSession = sessionStorage.getItem(key);\n        if (fromSession) return new Set(JSON.parse(fromSession));\n      }\n      const fromLocal = localStorage.getItem(key);\n      if (fromLocal) return new Set(JSON.parse(fromLocal));\n      if (!sessionFirst) {\n        const fromSession = sessionStorage.getItem(key);\n        if (fromSession) return new Set(JSON.parse(fromSession));\n      }\n    } catch {}\n    return new Set();\n  }\n\n  private static persistSet(key: string, value: Set<string>): void {\n    try {\n      const data = JSON.stringify(Array.from(value));\n      sessionStorage.setItem(key, data);\n      localStorage.setItem(key, data);\n    } catch {}\n  }\n\n  private static truncateText(ctx: CanvasRenderingContext2D, text: string, maxWidth: number, keepEnd: boolean = false): string {\n    if (!text) return '';\n    if (ctx.measureText(text).width <= maxWidth) {\n      return text;\n    }\n    const ellipsis = '…';\n\n    if (keepEnd) {\n      let length = text.length;\n      while (length > 0) {\n        const candidate = ellipsis + text.slice(Math.max(0, text.length - length));\n        if (ctx.measureText(candidate).width <= maxWidth) {\n          return candidate;\n        }\n        length--;\n      }\n      return text.slice(-1);\n    }\n\n    let length = text.length;\n    while (length > 0) {\n      const candidate = text.slice(0, length) + ellipsis;\n      if (ctx.measureText(candidate).width <= maxWidth) {\n        return candidate;\n      }\n      length--;\n    }\n    return ellipsis;\n  }\n}\n\n// Export for use in other modules\nexport { NodeEnhancerExtension as default };\n","/**\n * Node Enhancer Extension - Main Entry Point\n * Registers the node enhancement system with ComfyUI\n */\n\n// @ts-ignore: Provided by ComfyUI runtime\nimport { app } from '/scripts/app.js';\nimport { ComfyExtension } from '../types';\nimport { NodeEnhancerExtension } from './NodeEnhancerExtension';\n\n// Extension configuration\nconst EXTENSION_NAME = 'NodeEnhancer';\nconst EXTENSION_VERSION = '1.0.0';\n\n// Main extension object\nconst nodeEnhancerExtension: ComfyExtension = {\n  name: EXTENSION_NAME,\n  version: EXTENSION_VERSION,\n\n  // Extension settings\n  settings: [\n    {\n      id: 'nodeEnhancer.enabled',\n      name: 'Enable Node Enhancement',\n      type: 'boolean',\n      defaultValue: true\n    },\n    {\n      id: 'nodeEnhancer.autoEnhanceAll',\n      name: 'Auto-enhance All Nodes',\n      type: 'boolean',\n      defaultValue: false\n    },\n    {\n      id: 'nodeEnhancer.enableContextToggle',\n      name: 'Show ND Super Selector Toggle in Node Menu',\n      type: 'boolean',\n      defaultValue: true\n    }\n  ],\n\n  // Extension commands (minimal; per-node toggle lives in right-click menu)\n  commands: [\n    {\n      id: 'nodeEnhancer.clearCache',\n      label: 'ND Super Selector: Clear File Cache',\n      function: () => {\n        try {\n          (NodeEnhancerExtension as any)['filePickerService']?.clearCache?.();\n          console.log('ND Super Selector: File cache cleared');\n        } catch {}\n      }\n    }\n  ],\n\n  /**\n   * Called when the extension is loaded\n   */\n  async init(): Promise<void> {\n    console.log(`${EXTENSION_NAME} v${EXTENSION_VERSION}: Initializing...`);\n\n    try {\n      // Initialize the node enhancer\n      await NodeEnhancerExtension.initialize();\n      console.log(`${EXTENSION_NAME}: Initialization successful`);\n    } catch (error) {\n      console.error(`${EXTENSION_NAME}: Initialization failed:`, error);\n    }\n  },\n\n  /**\n   * Called before a node type is registered\n   * This is where we inject our enhancements\n   */\n  async beforeRegisterNodeDef(nodeType: any, nodeData: any): Promise<void> {\n    try {\n      // Set up enhancement for this node type\n      NodeEnhancerExtension.setup(nodeType, nodeData);\n\n    } catch (error) {\n      console.error('Node Enhancer: Error in beforeRegisterNodeDef:', error);\n      // Don't block node registration on errors\n    }\n  },\n\n  /**\n   * Called when a node is created\n   */\n  nodeCreated(node: any): void {\n    // Auto-enhance nodes if setting is enabled\n    const autoEnhanceAll = app.ui.settings.getSettingValue('nodeEnhancer.autoEnhanceAll', false);\n\n    if (autoEnhanceAll && node.type) {\n      // Find the enhancement config for this node type\n      const availableEnhancements = NodeEnhancerExtension.getAvailableEnhancements();\n      const config = availableEnhancements.find(e => e.nodeType === node.type);\n\n      if (config) {\n        NodeEnhancerExtension.enableEnhancement(config.nodeType);\n        console.log(`Node Enhancer: Auto-enhanced ${node.type}`);\n      }\n    }\n  },\n\n  /**\n   * Called before the graph is configured\n   */\n  beforeConfigureGraph(_graphData: any): void {\n    console.log('Node Enhancer: Configuring graph');\n  },\n\n  /**\n   * Called after the graph is configured\n   */\n  afterConfigureGraph(_graphData: any): void {\n    console.log('Node Enhancer: Graph configured');\n  }\n};\n\n// Register the extension with ComfyUI\nconsole.log(`${EXTENSION_NAME}: Registering extension with ComfyUI`);\napp.registerExtension(nodeEnhancerExtension);\nconsole.log(`${EXTENSION_NAME}: Extension registered successfully`);\n\n// Export for potential external use\nexport default nodeEnhancerExtension;\nexport { NodeEnhancerExtension };\n","/**\n * Super LoRA Loader - ComfyUI Extension\n *\n * A modern, standalone implementation of a powerful LoRA loader with advanced features.\n */\n\n// @ts-ignore ComfyUI provides this at runtime\nimport { app } from '/scripts/app.js';\nimport { ComfyExtension } from './types';\nimport { SuperLoraNode } from './nodes/SuperLoraNode';\nimport './styles/super-lora.scss';\nimport './extensions/NodeEnhancer';\nimport { UpdateService } from './services/UpdateService';\n\n// Extension configuration\nconst EXTENSION_NAME = 'SuperLoraLoader';\nconst NODE_TYPE = 'NdSuperLoraLoader';\n\n// Main extension object\nconst superLoraExtension: ComfyExtension = {\n  name: EXTENSION_NAME,\n  \n  // Extension settings\n  settings: [\n    {\n      id: 'superLora.autoFetchTriggerWords',\n      name: 'Auto-fetch Trigger Words',\n      type: 'boolean',\n      defaultValue: true\n    },\n    {\n      id: 'superLora.enableTags',\n      name: 'Enable Tag System',\n      type: 'boolean',\n      defaultValue: false\n    },\n    {\n      id: 'superLora.showSeparateStrengths',\n      name: 'Show Separate Model/CLIP Strengths',\n      type: 'boolean',\n      defaultValue: false\n    },\n    {\n      id: 'superLora.enableTemplates',\n      name: 'Enable Template System',\n      type: 'boolean',\n      defaultValue: true\n    },\n    {\n      id: 'superLora.enableDeletion',\n      name: 'Enable LoRA Deletion',\n      type: 'boolean',\n      defaultValue: true\n    },\n    {\n      id: 'superLora.enableSorting',\n      name: 'Enable LoRA Sorting',\n      type: 'boolean',\n      defaultValue: true\n    }\n  ],\n  \n  // Extension commands\n  commands: [\n    {\n      id: 'superLora.addLora',\n      label: 'Add LoRA to Super LoRA Loader',\n      function: () => {\n        // This could trigger adding a LoRA to a selected node\n        console.log('Super LoRA Loader: Add LoRA command triggered');\n      }\n    },\n    {\n      id: 'superLora.showTriggerWords',\n      label: 'Show All Trigger Words',\n      function: () => {\n        // This could show a combined view of all trigger words\n        console.log('Super LoRA Loader: Show trigger words command triggered');\n      }\n    },\n    {\n      id: 'superLora.checkUpdates',\n      label: 'Check ND Super Nodes Updates',\n      function: () => {\n        UpdateService.getInstance().checkForUpdates({ force: true, silent: false })\n          .catch(() => {\n            /* handled in service */\n          });\n      }\n    }\n  ],\n  \n  /**\n   * Called before a node type is registered\n   */\n  beforeRegisterNodeDef(nodeType: any, nodeData: any): void {\n    if (nodeData.name === NODE_TYPE) {\n      console.log('Super LoRA Loader: Registering node type');\n\n      // Kick off async initialization without blocking node registration.\n      SuperLoraNode.initialize()\n        .then(() => {\n          console.log('Super LoRA Loader: Services initialized');\n        })\n        .catch((err) => {\n          console.error('Super LoRA Loader: Initialization error', err);\n        });\n\n      try {\n        // Set up the node type immediately so ComfyUI can register it synchronously.\n        SuperLoraNode.setup(nodeType, nodeData);\n        console.log('Super LoRA Loader: Node type registered successfully');\n      } catch (err) {\n        // Never block node registration on errors here; log and continue so the node still exists\n        console.error('Super LoRA Loader: Error during node setup; continuing with default registration', err);\n      }\n    }\n  },\n  \n  /**\n   * Called when a node is created\n   */\n  nodeCreated(node: any): void {\n    if (node.type === NODE_TYPE) {\n      console.log('Super LoRA Loader: Node created', node.id);\n      \n      // Additional node setup if needed\n      this.setupNodeEventHandlers?.(node);\n    }\n  },\n  \n  /**\n   * Called before the graph is configured\n   */\n  beforeConfigureGraph(_graphData: any): void {\n    // Pre-process graph data if needed\n    console.log('Super LoRA Loader: Configuring graph');\n  },\n  \n  /**\n   * Set up additional event handlers for the node\n   */\n  setupNodeEventHandlers(node: any): void {\n    // Handle node removal\n    const originalOnRemoved = node.onRemoved;\n    node.onRemoved = function() {\n      console.log('Super LoRA Loader: Node removed', this.id);\n      \n      if (originalOnRemoved) {\n        originalOnRemoved.apply(this, arguments);\n      }\n    };\n    \n    // Handle node copying\n    const originalClone = node.clone;\n    node.clone = function() {\n      const clonedNode = originalClone ? originalClone.apply(this, arguments) : this;\n      console.log('Super LoRA Loader: Node cloned', this.id, '->', clonedNode.id);\n      return clonedNode;\n    };\n    \n    // Handle property changes\n    const originalOnPropertyChanged = node.onPropertyChanged;\n    node.onPropertyChanged = function(name: string, value: any) {\n      console.log('Super LoRA Loader: Property changed', name, value);\n      \n      // Handle setting changes that affect the UI\n      if (name.startsWith('@')) {\n        const settingName = name.substring(1);\n        this.onSettingChanged?.(settingName, value);\n      }\n      \n      if (originalOnPropertyChanged) {\n        originalOnPropertyChanged.apply(this, arguments);\n      }\n    };\n  }\n};\n\n// Register the extension with ComfyUI (immediate)\nconsole.log('Super LoRA Loader: Registering extension with ComfyUI');\napp.registerExtension(superLoraExtension);\nconsole.log('Super LoRA Loader: Extension registered successfully');\n\n// Export for potential external use\nexport default superLoraExtension;\nexport { SuperLoraNode };\nexport * from './types';\nexport * from './services/LoraService';\nexport * from './services/CivitAiService';\nexport * from './services/TemplateService';\n\n// Bridge SuperLoraNode helpers for other modules (e.g., ND Super Selector)\ntry {\n  (window as any).SuperLoraNode = SuperLoraNode;\n} catch {}\n"],"names":["list","app","header","key","w","modes","length","EXTENSION_NAME"],"mappings":";AAMO,MAAM,YAAY;AAAA,EAAlB,cAAA;AAEL,SAAQ,iBAA2B,CAAA;AACnC,SAAQ,gCAAkC,IAAA;AAAA,EAAI;AAAA,EAE9C,OAAO,cAA2B;AAChC,QAAI,CAAC,YAAY,UAAU;AACzB,kBAAY,WAAW,IAAI,YAAA;AAAA,IAC7B;AACA,WAAO,YAAY;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,aAA4B;AAChC,QAAI;AACF,YAAM,KAAK,gBAAA;AAAA,IACb,SAAS,OAAO;AACd,cAAQ,MAAM,yDAAyD,KAAK;AAAA,IAC9E;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,oBAAuC;AAC3C,QAAI,KAAK,eAAe,WAAW,GAAG;AACpC,YAAM,KAAK,gBAAA;AAAA,IACb;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAiC;AACrC,QAAI;AAEF,YAAM,WAAW,MAAM,MAAM,cAAc;AAC3C,YAAM,OAAO,MAAM,SAAS,KAAA;AAG5B,YAAM,aAAa,KAAK;AACxB,UAAI,cAAc,WAAW,SAAS,WAAW,MAAM,YAAY,WAAW,MAAM,SAAS,WAAW;AACtG,aAAK,iBAAiB,WAAW,MAAM,SAAS,UAAU,CAAC,KAAK,CAAA;AAAA,MAClE,OAAO;AAEL,cAAM,iBAAiB,MAAM,MAAM,sBAAsB;AACzD,YAAI,eAAe,IAAI;AACrB,gBAAM,aAAa,MAAM,eAAe,KAAA;AACxC,eAAK,iBAAiB,WAAW,SAAS,CAAA;AAAA,QAC5C;AAAA,MACF;AAEA,cAAQ,IAAI,4BAA4B,KAAK,eAAe,MAAM,QAAQ;AAAA,IAC5E,SAAS,OAAO;AACd,cAAQ,MAAM,mDAAmD,KAAK;AACtE,WAAK,iBAAiB,CAAA;AAAA,IACxB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB,WAAmB,QAAoB;AACtD,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,KAAK;AAAA,MACL,gBAAgB;AAAA,IAAA;AAAA,EAEpB;AAAA;AAAA;AAAA;AAAA,EAKA,mBAAmB,QAA6B;AAC9C,QAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC,aAAO;AAAA,IACT;AAGA,QAAI,OAAO,OAAO,SAAS,YAAY,OAAO,OAAO,YAAY,WAAW;AAC1E,aAAO;AAAA,IACT;AAGA,UAAM,gBAAgB,OAAO,OAAO,cAAc;AAClD,UAAM,eAAe,OAAO,OAAO,aAAa;AAEhD,QAAI,MAAM,aAAa,KAAK,MAAM,YAAY,GAAG;AAC/C,aAAO;AAAA,IACT;AAEA,QAAI,gBAAgB,KAAK,gBAAgB,KAAK,eAAe,KAAK,eAAe,GAAG;AAClF,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,SAAuB,UAA2B;AAChE,WAAO,QAAQ,KAAK,CAAA,WAAU,OAAO,SAAS,YAAY,aAAa,MAAM;AAAA,EAC/E;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,SAAqC;AACnD,WAAO,CAAC,GAAG,OAAO,EAAE,KAAK,CAAC,GAAG,MAAM;AAEjC,UAAI,EAAE,QAAQ,EAAE,KAAK;AAEnB,YAAI,EAAE,QAAQ,UAAW,QAAO;AAChC,YAAI,EAAE,QAAQ,UAAW,QAAO;AAChC,eAAO,EAAE,IAAI,cAAc,EAAE,GAAG;AAAA,MAClC;AAGA,aAAO,EAAE,KAAK,cAAc,EAAE,IAAI;AAAA,IACpC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,SAAkD;AAChE,UAAM,6BAAa,IAAA;AAEnB,eAAW,UAAU,SAAS;AAC5B,YAAM,MAAM,OAAO,OAAO;AAC1B,UAAI,CAAC,OAAO,IAAI,GAAG,GAAG;AACpB,eAAO,IAAI,KAAK,EAAE;AAAA,MACpB;AACA,aAAO,IAAI,GAAG,EAAG,KAAK,MAAM;AAAA,IAC9B;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB,SAAiC;AAChD,UAAM,2BAAW,IAAA;AAEjB,eAAW,UAAU,SAAS;AAC5B,WAAK,IAAI,OAAO,OAAO,SAAS;AAAA,IAClC;AAEA,WAAO,MAAM,KAAK,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM;AACrC,UAAI,MAAM,UAAW,QAAO;AAC5B,UAAI,MAAM,UAAW,QAAO;AAC5B,aAAO,EAAE,cAAc,CAAC;AAAA,IAC1B,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,gBAA0B;AACxB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB,SAA4C;AACjE,UAAM,SAA8B,CAAA;AAEpC,YAAQ,QAAQ,CAAC,QAAQ,UAAU;AACjC,UAAI,OAAO,QAAQ,OAAO,SAAS,QAAQ;AACzC,cAAM,MAAM,QAAQ,QAAQ,CAAC;AAC7B,eAAO,GAAG,IAAI;AAAA,UACZ,MAAM,OAAO;AAAA,UACb,SAAS,OAAO;AAAA,UAChB,gBAAgB,OAAO;AAAA,UACvB,eAAe,OAAO;AAAA,UACtB,cAAc,OAAO,gBAAgB;AAAA,UACrC,KAAK,OAAO,OAAO;AAAA,QAAA;AAAA,MAEvB;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB,SAA+B;AACjD,UAAM,eAAyB,CAAA;AAE/B,eAAW,UAAU,SAAS;AAC5B,UAAI,OAAO,WAAW,OAAO,gBAAgB,OAAO,aAAa,QAAQ;AACvE,qBAAa,KAAK,OAAO,aAAa,KAAA,CAAM;AAAA,MAC9C;AAAA,IACF;AAEA,WAAO,aAAa,KAAK,IAAI;AAAA,EAC/B;AACF;AC1NO,MAAM,gBAAgB;AAAA,EAAtB,cAAA;AAEL,SAAQ,YAA4B,CAAA;AACpC,SAAQ,WAAoB;AAAA,EAAA;AAAA,EAE5B,OAAO,cAA+B;AACpC,QAAI,CAAC,gBAAgB,UAAU;AAC7B,sBAAgB,WAAW,IAAI,gBAAA;AAAA,IACjC;AACA,WAAO,gBAAgB;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,aAA4B;AAChC,QAAI,CAAC,KAAK,UAAU;AAClB,YAAM,KAAK,cAAA;AAAA,IACb;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAA+B;AACnC,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,yBAAyB;AAAA,QACpD,QAAQ;AAAA,MAAA,CACT;AAED,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,cAAM,YAAY,KAAK,aAAa,QAAQ,CAAA;AAE5C,aAAK,YAAY,MAAM,QAAQ,SAAS,IAAI,YAAmB,CAAA;AAC/D,aAAK,WAAW;AAChB,gBAAQ,IAAI,6BAA6B,KAAK,UAAU,MAAM,YAAY;AAAA,MAC5E,OAAO;AACL,gBAAQ,KAAK,gDAAgD,SAAS,UAAU;AAChF,aAAK,YAAY,CAAA;AACjB,aAAK,WAAW;AAAA,MAClB;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,+CAA+C,KAAK;AAClE,WAAK,YAAY,CAAA;AACjB,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAwC;AAC5C,QAAI,CAAC,KAAK,UAAU;AAClB,YAAM,KAAK,cAAA;AAAA,IACb;AACA,WAAO,CAAC,GAAG,KAAK,SAAS;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,aAAa,MAAc,aAA6C;AAC5E,QAAI;AAEF,YAAM,eAAe,YAAY;AAAA,QAAO,CAAA,WACtC,OAAO,QAAQ,OAAO,SAAS;AAAA,MAAA;AAGjC,UAAI,aAAa,WAAW,GAAG;AAC7B,cAAM,IAAI,MAAM,sCAAsC;AAAA,MACxD;AAGA,YAAM,aAAa,aAAa,IAAI,CAAA,SAAQ;AAAA,QAC1C,MAAM,IAAI;AAAA,QACV,SAAS,CAAC,CAAC,IAAI;AAAA,QACf,gBAAgB,OAAO,IAAI,kBAAkB,CAAC;AAAA,QAC9C,eAAe,OAAO,IAAI,iBAAiB,IAAI,kBAAkB,CAAC;AAAA,QAClE,cAAc,IAAI,gBAAgB;AAAA,QAClC,KAAK,IAAI,OAAO;AAAA,QAChB,gBAAgB,CAAC,CAAC,IAAI;AAAA,MAAA,EACtB;AAGF,YAAM,WAAgB;AAAA,QACpB;AAAA,QACA,SAAS;AAAA,QACT,cAAc;AAAA,MAAA;AAGhB,YAAM,WAAW,MAAM,MAAM,yBAAyB;AAAA,QACpD,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU,QAAQ;AAAA,MAAA,CAC9B;AAED,UAAI,SAAS,IAAI;AAEf,cAAM,KAAK,cAAA;AACX,gBAAQ,IAAI,gCAAgC,IAAI,sBAAsB;AACtE,eAAO;AAAA,MACT,OAAO;AACL,cAAM,YAAY,MAAM,SAAS,KAAA,EAAO,MAAM,OAAO,CAAA,EAAG;AACxD,cAAM,IAAI,MAAM,UAAU,SAAS,QAAQ,SAAS,MAAM,KAAK,SAAS,UAAU,EAAE;AAAA,MACtF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,+CAA+C,IAAI,MAAM,KAAK;AAC5E,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,aAAa,MAA4C;AAC7D,QAAI;AACF,YAAM,YAAY,MAAM,KAAK,aAAA;AAC7B,YAAM,WAAgB,UAAU,KAAK,CAAC,MAAW,MAAM,EAAE,SAAS,QAAQ,EAAE,OAAO,QAAQ,EAAE,UAAU,QAAQ,MAAM,KAAK;AAE1H,YAAM,cAAc,CAAC,QAA2B;AAC9C,YAAI,CAAC,IAAK,QAAO;AACjB,YAAI,MAAM,QAAQ,IAAI,KAAK,UAAU,IAAI;AACzC,YAAI,MAAM,QAAQ,IAAI,KAAK,UAAU,IAAI;AACzC,YAAI,IAAI,SAAU,QAAO,YAAY,IAAI,QAAQ;AACjD,YAAI,OAAO,QAAQ,UAAU;AAE3B,cAAI;AAAE,kBAAM,SAAS,KAAK,MAAM,GAAG;AAAG,mBAAO,YAAY,MAAM;AAAA,UAAG,QAAQ;AAAA,UAAC;AAAA,QAC7E;AACA,eAAO;AAAA,MACT;AAGA,YAAM,cAAc,YAA0C;AAC5D,cAAM,WAAW,CAAC,SAAmC;AACnD,gBAAMA,QAAO,YAAY,IAAI;AAC7B,cAAI,CAACA,MAAM,QAAO;AAClB,gBAAM,QAAQA,MAAK,OAAO,CAAC,QAAa,KAAK,mBAAmB,GAAG,CAAC;AACpE,iBAAO;AAAA,QACT;AACA,YAAI;AAEF,cAAI,OAAO,MAAM,MAAM,8BAA8B,mBAAmB,IAAI,CAAC,EAAE;AAC/E,cAAI,KAAK,IAAI;AACX,kBAAM,OAAO,MAAM,KAAK,KAAA;AACxB,kBAAM,MAAM,SAAS,IAAI;AACzB,gBAAI,IAAK,QAAO;AAAA,UAClB;AAAA,QACF,QAAQ;AAAA,QAAC;AACT,YAAI;AAEF,gBAAM,QAAQ,MAAM,MAAM,yBAAyB,mBAAmB,IAAI,CAAC,EAAE;AAC7E,cAAI,MAAM,IAAI;AACZ,kBAAM,QAAQ,MAAM,MAAM,KAAA;AAC1B,kBAAM,OAAO,SAAS,KAAK;AAC3B,gBAAI,KAAM,QAAO;AAAA,UACnB;AAAA,QACF,QAAQ;AAAA,QAAC;AACT,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,UAAU;AACb,gBAAQ,KAAK,gCAAgC,IAAI,0CAA0C;AAC3F,eAAO,MAAM,YAAA;AAAA,MACf;AAEA,UAAI,OAAqB,YAAY,QAAQ;AAC7C,UAAI,CAAC,MAAM;AACT,cAAM,UAAU,MAAM,YAAA;AACtB,YAAI,CAAC,SAAS;AACZ,kBAAQ,KAAK,gCAAgC,IAAI,4BAA4B;AAAA,QAC/E;AACA,eAAO;AAAA,MACT;AAEA,YAAM,YAAY,CAAC,SAAc;AAAA,QAC/B,MAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ;AAAA,QAC1C,SAAU,IAAI,YAAY,SAAa,CAAC,CAAC,IAAI,UAAW,IAAI,OAAO,SAAY,OAAO,CAAC,CAAC,IAAI;AAAA,QAC5F,gBAAiB,IAAI,mBAAmB,SAAa,OAAO,IAAI,cAAc,IAAI,OAAO,IAAI,YAAY,IAAI,SAAS,CAAC;AAAA,QACvH,eAAgB,IAAI,kBAAkB,SAAa,OAAO,IAAI,aAAa,IAAI,OAAO,IAAI,eAAe,IAAI,iBAAiB,IAAI,kBAAkB,IAAI,YAAY,CAAC;AAAA,QACrK,cAAc,IAAI,gBAAgB,IAAI,eAAe,IAAI,WAAW;AAAA,QACpE,KAAK,IAAI,OAAO;AAAA,QAChB,gBAAgB,IAAI,kBAAkB,IAAI,6BAA6B;AAAA,MAAA;AAGzE,YAAM,aAAa,KAAK,IAAI,SAAS;AACrC,YAAM,eAAe,WAAW,OAAO,YAAU,KAAK,mBAAmB,MAAM,CAAC;AAEhF,UAAI,aAAa,WAAW,KAAK,QAAQ;AACvC,gBAAQ,KAAK,qDAAqD,IAAI,eAAe;AAAA,MACvF;AAEA,cAAQ,IAAI,uCAAuC,IAAI,UAAU,aAAa,MAAM,QAAQ;AAC5F,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,+CAA+C,IAAI,MAAM,KAAK;AAC5E,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,MAAgC;AACnD,QAAI;AAEF,UAAI,WAAW,MAAM,MAAM,yBAAyB,mBAAmB,IAAI,CAAC,IAAI;AAAA,QAC9E,QAAQ;AAAA,MAAA,CACT;AAED,UAAI,CAAC,SAAS,IAAI;AAEhB,mBAAW,MAAM,MAAM,yBAAyB;AAAA,UAC9C,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,UAC3B,MAAM,KAAK,UAAU,EAAE,MAAM;AAAA,QAAA,CAC9B;AAAA,MACH;AAEA,UAAI,CAAC,SAAS,MAAM,SAAS,WAAW,KAAK;AAE3C,mBAAW,MAAM,MAAM,gCAAgC;AAAA,UACrD,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,UAC3B,MAAM,KAAK,UAAU,EAAE,MAAM;AAAA,QAAA,CAC9B;AAAA,MACH;AAEA,UAAI,CAAC,SAAS,IAAI;AAEhB,mBAAW,MAAM,MAAM,yBAAyB;AAAA,UAC9C,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,UAC3B,MAAM,KAAK,UAAU,EAAE,QAAQ,UAAU,MAAM;AAAA,QAAA,CAChD;AAAA,MACH;AAEA,UAAI,SAAS,IAAI;AAEf,cAAM,KAAK,cAAA;AACX,cAAM,eAAe,KAAK,aAAa,CAAA,GAAI,KAAK,CAAC,MAAY,KAAK,EAAE,OAAQ,EAAE,SAAS,OAAO,MAAM,IAAI;AACxG,YAAI,aAAa;AACf,kBAAQ,KAAK,sEAAsE,IAAI,EAAE;AACzF,iBAAO;AAAA,QACT;AACA,gBAAQ,IAAI,gCAAgC,IAAI,wBAAwB;AACxE,eAAO;AAAA,MACT,OAAO;AACL,cAAM,YAAY,MAAM,SAAS,KAAA,EAAO,MAAM,OAAO,CAAA,EAAG;AACxD,cAAM,IAAI,MAAM,UAAU,SAAS,QAAQ,SAAS,MAAM,KAAK,SAAS,UAAU,EAAE;AAAA,MACtF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,iDAAiD,IAAI,MAAM,KAAK;AAC9E,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,MAAgC;AACnD,UAAM,YAAY,MAAM,KAAK,aAAA;AAC7B,WAAO,UAAU,KAAK,CAAA,MAAK,EAAE,SAAS,IAAI;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAsC;AAC1C,UAAM,YAAY,MAAM,KAAK,aAAA;AAE7B,WAAO,UAAU,IAAI,CAAC,MAAY,KAAK,EAAE,OAAQ,EAAE,OAAO,OAAO,CAAC,CAAC,EAAE,KAAA;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAKQ,mBAAmB,QAA6B;AACtD,QAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,OAAO,QAAQ,OAAO,OAAO,YAAY,WAAW;AACvD,aAAO;AAAA,IACT;AAGA,UAAM,gBAAgB,OAAO,OAAO,cAAc;AAClD,UAAM,eAAe,OAAO,OAAO,aAAa;AAEhD,QAAI,MAAM,aAAa,KAAK,MAAM,YAAY,GAAG;AAC/C,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,MAAsC;AACzD,QAAI;AACF,YAAM,YAAY,MAAM,KAAK,aAAA;AAC7B,YAAM,WAAW,UAAU,KAAK,CAAA,MAAK,EAAE,SAAS,IAAI;AAEpD,UAAI,CAAC,UAAU;AACb,eAAO;AAAA,MACT;AAEA,aAAO,KAAK,UAAU,UAAU,MAAM,CAAC;AAAA,IACzC,SAAS,OAAO;AACd,cAAQ,MAAM,iDAAiD,IAAI,MAAM,KAAK;AAC9E,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,YAAsC;AACzD,QAAI;AACF,YAAM,WAAW,KAAK,MAAM,UAAU;AAGtC,UAAI,CAAC,SAAS,QAAQ,CAAC,SAAS,SAAS,CAAC,MAAM,QAAQ,SAAS,KAAK,GAAG;AACvE,cAAM,IAAI,MAAM,yBAAyB;AAAA,MAC3C;AAGA,UAAI,MAAM,KAAK,eAAe,SAAS,IAAI,GAAG;AAC5C,cAAM,IAAI,MAAM,aAAa,SAAS,IAAI,kBAAkB;AAAA,MAC9D;AAEA,aAAO,MAAM,KAAK,aAAa,SAAS,MAAM,SAAS,KAAK;AAAA,IAC9D,SAAS,OAAO;AACd,cAAQ,MAAM,iDAAiD,KAAK;AACpE,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,SAAiB,SAAmC;AACvE,QAAI;AACF,YAAM,OAAO,WAAW,IAAI,KAAA;AAC5B,YAAM,OAAO,WAAW,IAAI,KAAA;AAC5B,UAAI,CAAC,OAAO,CAAC,IAAK,QAAO;AACzB,UAAI,QAAQ,IAAK,QAAO;AAGxB,UAAI,MAAM,KAAK,eAAe,GAAG,GAAG;AAClC,cAAM,IAAI,MAAM,aAAa,GAAG,kBAAkB;AAAA,MACpD;AAGA,YAAM,UAAU,MAAM,KAAK,aAAa,GAAG;AAC3C,UAAI,CAAC,WAAW,QAAQ,WAAW,GAAG;AACpC,cAAM,IAAI,MAAM,aAAa,GAAG,sBAAsB;AAAA,MACxD;AAGA,YAAM,QAAQ,MAAM,KAAK,aAAa,KAAK,OAAO;AAClD,UAAI,CAAC,MAAO,QAAO;AAGnB,YAAM,KAAK,eAAe,GAAG;AAG7B,YAAM,KAAK,cAAA;AACX,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,iDAAiD,KAAK;AACpE,aAAO;AAAA,IACT;AAAA,EACF;AACF;AC3XO,MAAM,eAAe;AAAA,EAArB,cAAA;AAEL,SAAQ,4BAA2C,IAAA;AACnD,SAAQ,sCAAqE,IAAA;AAAA,EAAI;AAAA,EAEjF,OAAO,cAA8B;AACnC,QAAI,CAAC,eAAe,UAAU;AAC5B,qBAAe,WAAW,IAAI,eAAA;AAAA,IAChC;AACA,WAAO,eAAe;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAAgB,cAAyC;AAC7D,QAAI;AACF,YAAM,YAAY,MAAM,KAAK,aAAa,YAAY;AACtD,UAAI,CAAC,WAAW;AACd,eAAO,CAAA;AAAA,MACT;AAEA,aAAO,KAAK,iCAAiC,SAAS;AAAA,IACxD,SAAS,OAAO;AACd,cAAQ,KAAK,sDAAsD,YAAY,KAAK,KAAK;AACzF,aAAO,CAAA;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,aAAa,cAAwD;AAEzE,QAAI,KAAK,MAAM,IAAI,YAAY,GAAG;AAChC,aAAO,KAAK,MAAM,IAAI,YAAY;AAAA,IACpC;AAGA,QAAI,KAAK,gBAAgB,IAAI,YAAY,GAAG;AAC1C,aAAO,MAAM,KAAK,gBAAgB,IAAI,YAAY;AAAA,IACpD;AAGA,UAAM,iBAAiB,KAAK,eAAe,YAAY;AACvD,SAAK,gBAAgB,IAAI,cAAc,cAAc;AAErD,QAAI;AACF,YAAM,SAAS,MAAM;AACrB,WAAK,gBAAgB,OAAO,YAAY;AAExC,UAAI,QAAQ;AACV,aAAK,MAAM,IAAI,cAAc,MAAM;AAAA,MACrC;AAEA,aAAO;AAAA,IACT,SAAS,OAAO;AACd,WAAK,gBAAgB,OAAO,YAAY;AACxC,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,eAAe,cAAwD;AACnF,QAAI;AAEF,YAAM,WAAW,MAAM,MAAM,4BAA4B;AAAA,QACvD,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU;AAAA,UACnB,eAAe;AAAA,QAAA,CAChB;AAAA,MAAA,CACF;AAED,UAAI,CAAC,SAAS,IAAI;AAChB,YAAI,SAAS,WAAW,KAAK;AAE3B,iBAAO;AAAA,QACT;AACA,cAAM,IAAI,MAAM,QAAQ,SAAS,MAAM,KAAK,SAAS,UAAU,EAAE;AAAA,MACnE;AAEA,YAAM,OAAO,MAAM,SAAS,KAAA;AAE5B,UAAI,KAAK,OAAO;AACd,gBAAQ,KAAK,4CAA4C,YAAY,KAAK,KAAK,KAAK;AACpF,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,KAAK,qDAAqD,YAAY,KAAK,KAAK;AACxF,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,iCAAiC,WAAuC;AAC9E,UAAM,eAAyB,CAAA;AAG/B,QAAI,UAAU,gBAAgB,MAAM,QAAQ,UAAU,YAAY,GAAG;AACnE,iBAAW,QAAQ,UAAU,cAAc;AACzC,YAAI,OAAO,SAAS,UAAU;AAC5B,uBAAa,KAAK,IAAI;AAAA,QACxB,WAAW,QAAQ,OAAO,SAAS,YAAY,UAAU,MAAM;AAC7D,uBAAa,KAAK,KAAK,IAAI;AAAA,QAC7B;AAAA,MACF;AAAA,IACF;AAGA,WAAO,aAAa,MAAM,GAAG,CAAC;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,aAAmB;AACjB,SAAK,MAAM,MAAA;AAAA,EACb;AAAA;AAAA;AAAA;AAAA,EAKA,eAAuB;AACrB,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKQ,qBAA8B;AAGpC,QAAI;AACF,YAAMC,OAAO,OAAe;AAC5B,UAAIA,QAAOA,KAAI,MAAMA,KAAI,GAAG,UAAU;AACpC,eAAOA,KAAI,GAAG,SAAS,gBAAgB,mCAAmC,IAAI;AAAA,MAChF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,KAAK,0DAA0D,KAAK;AAAA,IAC9E;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,yBAAyB,cAAuC;AACpE,QAAI,CAAC,KAAK,mBAAA,KAAwB,CAAC,gBAAgB,iBAAiB,QAAQ;AAC1E,aAAO;AAAA,IACT;AAEA,QAAI;AACF,YAAM,eAAe,MAAM,KAAK,gBAAgB,YAAY;AAC5D,aAAO,aAAa,SAAS,IAAI,aAAa,CAAC,IAAI;AAAA,IACrD,SAAS,OAAO;AACd,cAAQ,KAAK,+CAA+C,YAAY,KAAK,KAAK;AAClF,aAAO;AAAA,IACT;AAAA,EACF;AACF;ACzKO,MAAM,iBAAN,MAAM,eAAc;AAAA,EAKzB,OAAO,cAA6B;AAClC,QAAI,CAAC,eAAc,UAAU;AAC3B,qBAAc,WAAW,IAAI,eAAA;AAAA,IAC/B;AACA,WAAO,eAAc;AAAA,EACvB;AAAA,EAEQ,OAAiB;AACvB,QAAI;AACF,YAAM,MAAM,aAAa,QAAQ,eAAc,WAAW;AAC1D,UAAI,KAAK;AACP,cAAM,MAAM,KAAK,MAAM,GAAG;AAC1B,YAAI,MAAM,QAAQ,GAAG,EAAG,QAAO,KAAK,UAAU,GAAG;AAAA,MACnD;AAAA,IACF,QAAQ;AAAA,IAAC;AAET,SAAK,MAAM,eAAc,YAAY;AACrC,WAAO,CAAC,GAAG,eAAc,YAAY;AAAA,EACvC;AAAA,EAEQ,MAAM,MAAsB;AAClC,QAAI;AACF,YAAM,SAAS,KAAK,UAAU,IAAI;AAClC,mBAAa,QAAQ,eAAc,aAAa,KAAK,UAAU,MAAM,CAAC;AAAA,IACxE,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEQ,UAAU,MAA0B;AAC1C,UAAM,0BAAU,IAAA;AAChB,eAAW,KAAK,MAAM;AACpB,YAAM,OAAO,OAAO,KAAK,EAAE,EAAE,KAAA;AAC7B,UAAI,CAAC,KAAM;AACX,UAAI,IAAI,IAAI;AAAA,IACd;AACA,WAAO,MAAM,KAAK,GAAG,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,cAAc,CAAC,CAAC;AAAA,EAC1D;AAAA,EAEA,SAAmB;AACjB,WAAO,KAAK,KAAA;AAAA,EACd;AAAA,EAEA,OAAO,MAAuB;AAC5B,UAAM,IAAI,OAAO,QAAQ,EAAE,EAAE,KAAA;AAC7B,QAAI,CAAC,EAAG,QAAO;AACf,UAAM,OAAO,KAAK,KAAA;AAClB,QAAI,KAAK,SAAS,CAAC,EAAG,QAAO;AAC7B,SAAK,KAAK,CAAC;AACX,SAAK,MAAM,IAAI;AACf,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,SAAiB,SAA0B;AACnD,UAAM,MAAM,OAAO,WAAW,EAAE,EAAE,KAAA;AAClC,UAAM,MAAM,OAAO,WAAW,EAAE,EAAE,KAAA;AAClC,QAAI,CAAC,OAAO,CAAC,OAAO,QAAQ,IAAK,QAAO;AACxC,UAAM,OAAO,KAAK,KAAA;AAClB,UAAM,MAAM,KAAK,QAAQ,GAAG;AAC5B,QAAI,QAAQ,GAAI,QAAO;AAEvB,QAAI,CAAC,KAAK,SAAS,GAAG,GAAG;AACvB,WAAK,GAAG,IAAI;AAAA,IACd,OAAO;AACL,WAAK,OAAO,KAAK,CAAC;AAAA,IACpB;AACA,SAAK,MAAM,IAAI;AACf,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,MAAuB;AAC/B,UAAM,IAAI,OAAO,QAAQ,EAAE,EAAE,KAAA;AAC7B,QAAI,CAAC,EAAG,QAAO;AACf,UAAM,OAAO,KAAK,KAAA;AAClB,UAAM,MAAM,KAAK,QAAQ,CAAC;AAC1B,QAAI,QAAQ,GAAI,QAAO;AACvB,SAAK,OAAO,KAAK,CAAC;AAElB,QAAI,CAAC,KAAK,SAAS,SAAS,EAAG,MAAK,KAAK,SAAS;AAClD,SAAK,MAAM,IAAI;AACf,WAAO;AAAA,EACT;AACF;AApFE,eAAe,WAAiC;AAChD,eAAwB,cAAc;AACtC,eAAwB,eAAe,CAAC,WAAW,aAAa,SAAS,WAAW,QAAQ;AAHvF,IAAM,gBAAN;AC6BA,MAAM,eAAe;AAAA,EAArB,cAAA;AAEL,SAAQ,iBAAiB;AAAA,EAAA;AAAA,EAEzB,OAAO,cAA8B;AACnC,QAAI,CAAC,eAAe,UAAU;AAC5B,qBAAe,WAAW,IAAI,eAAA;AAAA,IAChC;AACA,WAAO,eAAe;AAAA,EACxB;AAAA,EAEA,kBAAkB,SAA+B;AAC/C,SAAK,oBAAA;AAEL,UAAM,gBAAgB,QAAQ,kBAAkB;AAChD,UAAM,gBAAgB,KAAK,oBAAoB,aAAa;AAE5D,SAAK,uBAAA;AAEL,UAAM,QAAQ,QAAQ,SAAS,CAAA;AAC/B,UAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,YAAQ,aAAa,2BAA2B,GAAG;AACnD,YAAQ,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWxB,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AActB,UAAM,SAAS,SAAS,cAAc,KAAK;AAC3C,WAAO,cAAc,QAAQ;AAC7B,WAAO,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAOvB,UAAM,SAAS,SAAS,cAAc,OAAO;AAC7C,WAAO,OAAO;AACd,WAAO,cAAc,QAAQ;AAC7B,WAAO,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUvB,UAAM,eAAe,CAAC,CAAC,QAAQ;AAC/B,QAAI,YAAY;AAChB,UAAM,kCAAkB,IAAA;AACxB,UAAM,WAAW;AAEjB,UAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,aAAS,MAAM,UAAU;AAAA,iBACZ,eAAe,SAAS,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS3C,UAAM,aAAa,SAAS,cAAc,OAAO;AACjD,eAAW,YAAY;AACvB,UAAM,cAAc,SAAS,cAAc,OAAO;AAClD,gBAAY,OAAO;AACnB,gBAAY,YAAY;AACxB,gBAAY,iBAAiB,UAAU,MAAM;AAC3C,kBAAY,CAAC,CAAC,YAAY;AAC1B,aAAO,OAAO,KAAK;AACnB,mBAAA;AAAA,IACF,CAAC;AACD,UAAM,YAAY,SAAS,cAAc,MAAM;AAC/C,cAAU,cAAc;AACxB,cAAU,YAAY;AACtB,eAAW,YAAY,WAAW;AAClC,eAAW,YAAY,SAAS;AAChC,aAAS,YAAY,UAAU;AAEjC,UAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,aAAS,YAAY;AAErB,UAAM,cAAc,SAAS,cAAc,KAAK;AAChD,gBAAY,YAAY;AACxB,gBAAY,MAAM,UAAU;AAE1B,QAAI,uBAAuB;AAC3B,UAAM,gBAAgB,IAAI,IAAY,cAAc,aAAa;AACjE,UAAM,mBAAmB,IAAI,IAAY,cAAc,gBAAgB;AAEvE,UAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,aAAS,MAAM,UAAU;AAEzB,UAAM,OAAO,SAAS,cAAc,KAAK;AACzC,SAAK,MAAM,UAAU;AAErB,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,cAAc;AACpB,UAAM,MAAM,UAAU;AAEtB,UAAM,gBAAgB,CAAC,UAAyB;AAC9C,UAAI,MAAM,QAAQ,UAAU;AAC1B,qBAAA;AAAA,MACF;AAAA,IACF;AAEA,UAAM,eAAe,MAAM;AACzB,UAAI;AAAE,gBAAQ,OAAA;AAAA,MAAU,QAAQ;AAAA,MAAC;AACjC,eAAS,oBAAoB,WAAW,aAAa;AACvD,WAAK,oBAAoB,eAAe,eAAe,gBAAgB;AAAA,IACvE;AAEA,aAAS,iBAAiB,WAAW,aAAa;AAClD,YAAQ,iBAAiB,SAAS,CAAC,UAAU;AAC3C,UAAI,MAAM,WAAW,QAAS,cAAA;AAAA,IAChC,CAAC;AAED,UAAM,cAAc,CAAC,iBAAyC;AAC5D,eAAS,YAAY;AACrB,YAAMC,UAAS,SAAS,cAAc,KAAK;AAC3CA,cAAO,YAAY;AACnBA,cAAO,cAAc;AACrB,eAAS,YAAYA,OAAM;AAE3B,YAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,eAAS,YAAY;AACrB,eAAS,YAAY,QAAQ;AAE7B,YAAM,iBAAiB,OAAO,KAAK,YAAY,EAC5C,KAAK,CAAC,GAAG,MAAM;AACd,YAAI,MAAM,SAAU,QAAO;AAC3B,YAAI,MAAM,SAAU,QAAO;AAC3B,eAAO,EAAE,cAAc,CAAC;AAAA,MAC1B,CAAC;AAEH,YAAM,iBAAiB,QAAQ,kBAAkB;AAEjD,qBAAe,QAAQ,CAAC,SAAS;AAC/B,cAAM,OAAO,SAAS,cAAc,QAAQ;AAC5C,aAAK,OAAO;AACZ,aAAK,YAAY;AACjB,cAAM,WAAW,cAAc,IAAI,IAAI;AACvC,YAAI,SAAU,MAAK,UAAU,IAAI,WAAW;AAE5C,cAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,aAAK,YAAY;AACjB,aAAK,cAAc,SAAS,WAAW,OAAO;AAE9C,cAAM,QAAQ,SAAS,cAAc,MAAM;AAC3C,cAAM,YAAY;AAClB,cAAM,cAAe,SAAS,WAAY,GAAG,cAAc,YAAY;AAEvE,cAAM,QAAQ,SAAS,cAAc,MAAM;AAC3C,cAAM,YAAY;AAClB,cAAM,cAAc,OAAO,aAAa,IAAI,KAAK,CAAC;AAElD,aAAK,YAAY,IAAI;AACrB,aAAK,YAAY,KAAK;AACtB,aAAK,YAAY,KAAK;AAEtB,aAAK,QAAQ,SAAS,WAAW,GAAG,cAAc,UAAU;AAC5D,aAAK,iBAAiB,SAAS,MAAM;AACnC,cAAI,cAAc,IAAI,IAAI,GAAG;AAC3B,0BAAc,OAAO,IAAI;AAAA,UAC3B,OAAO;AACL,0BAAc,IAAI,IAAI;AAAA,UACxB;AACA,eAAK,oBAAoB,eAAe,eAAe,gBAAgB;AACvE,iBAAO,OAAO,KAAK;AACnB,yBAAA;AAAA,QACF,CAAC;AAED,iBAAS,YAAY,IAAI;AAAA,MAC3B,CAAC;AAAA,IACH;AAEA,UAAM,iBAAiB,MAAM;AAC3B,kBAAY,YAAY;AACxB,YAAM,OAAO,cAAc,OAAO;AAClC,kBAAY,MAAM,UAAU,OAAO,SAAS;AAC5C,UAAI,CAAC,KAAM;AAEX,YAAM,iBAAyC,CAAA;AAC/C,YAAM,YAAyC,CAAA;AAC/C,YAAM,QAAQ,CAAC,SAAS;AACtB,cAAM,QAAQ,KAAK,GAAG,MAAM,OAAO;AACnC,cAAM,MAAM,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,YAAI,QAAQ,SAAU;AACtB,YAAI,CAAC,cAAc,IAAI,GAAG,EAAG;AAC7B,cAAM,MAAM,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,YAAI,QAAQ,UAAU;AACpB,gBAAMC,OAAM,GAAG,GAAG,IAAI,QAAQ;AAC9B,yBAAeA,IAAG,KAAK,eAAeA,IAAG,KAAK,KAAK;AACnD,cAAI,CAAC,UAAU,QAAQ,aAAa,QAAQ,wBAAQ,IAAA;AACpD,oBAAU,QAAQ,EAAE,IAAI,GAAG;AAC3B;AAAA,QACF;AACA,cAAM,MAAM,GAAG,GAAG,IAAI,GAAG;AACzB,uBAAe,GAAG,KAAK,eAAe,GAAG,KAAK,KAAK;AACnD,YAAI,CAAC,UAAU,GAAG,aAAa,GAAG,wBAAQ,IAAA;AAC1C,kBAAU,GAAG,EAAE,IAAI,GAAG;AAAA,MACxB,CAAC;AAED,YAAMD,UAAS,SAAS,cAAc,KAAK;AAC3CA,cAAO,YAAY;AACnBA,cAAO,cAAc,cAAc,SAAS,IAAI,eAAe;AAC/D,kBAAY,YAAYA,OAAM;AAE9B,YAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,eAAS,YAAY;AACrB,kBAAY,YAAY,QAAQ;AAEhC,aAAO,KAAK,cAAc,EAAE,OAAO,QAAQ,CAAC,QAAQ;AAClD,cAAM,CAAC,KAAK,GAAG,IAAI,IAAI,MAAM,GAAG;AAChC,cAAM,YAAa,QAAQ;AAC3B,cAAM,YAAY,UAAU,GAAG,GAAG,QAAQ,UAAU,GAAG,EAAG,OAAO;AACjE,cAAM,YAAY,YAAY,GAAG,GAAG,YAAY,YAAY,GAAG,GAAG,MAAM,GAAG,KAAK;AAChF,cAAM,WAAW,eAAe,GAAG,KAAK;AAExC,cAAM,OAAO,SAAS,cAAc,QAAQ;AAC5C,aAAK,OAAO;AACZ,aAAK,YAAY;AACjB,cAAM,WAAW,iBAAiB,IAAI,GAAG;AACzC,YAAI,SAAU,MAAK,UAAU,IAAI,WAAW;AAE5C,cAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,aAAK,YAAY;AACjB,aAAK,cAAc,YAAY,QAAQ;AAEvC,cAAM,QAAQ,SAAS,cAAc,MAAM;AAC3C,cAAM,YAAY;AAClB,cAAM,cAAc;AAEpB,cAAM,QAAQ,SAAS,cAAc,MAAM;AAC3C,cAAM,YAAY;AAClB,cAAM,cAAc,OAAO,QAAQ;AAEnC,aAAK,YAAY,IAAI;AACrB,aAAK,YAAY,KAAK;AACtB,aAAK,YAAY,KAAK;AAEtB,aAAK,QAAQ,GAAG,GAAG,IAAI,YAAY,WAAW,GAAG;AACjD,aAAK,iBAAiB,SAAS,MAAM;AACnC,cAAI,iBAAiB,IAAI,GAAG,GAAG;AAC7B,6BAAiB,OAAO,GAAG;AAAA,UAC7B,OAAO;AACL,6BAAiB,IAAI,GAAG;AAAA,UAC1B;AACA,eAAK,oBAAoB,eAAe,eAAe,gBAAgB;AACvE,iBAAO,OAAO,KAAK;AACnB,yBAAA;AAAA,QACF,CAAC;AAED,iBAAS,YAAY,IAAI;AAAA,MAC3B,CAAC;AAAA,IACH;AAEA,UAAM,SAAS,CAAC,SAAiB;AAC/B,WAAK,YAAY;AACjB,YAAM,SAAS,QAAQ,IAAI,KAAA,EAAO,YAAA;AAClC,YAAM,eAAe,QAAQ,MAAM,OAAO,CAAC,SAAS,KAAK,MAAM,YAAA,EAAc,SAAS,KAAK,CAAC,IAAI;AAEhG,UAAI,sBAAsB;AACxB,cAAM,eAAuC,CAAA;AAC7C,qBAAa,QAAQ,CAAC,SAAS;AAC7B,gBAAM,QAAQ,KAAK,GAAG,MAAM,OAAO;AACnC,gBAAM,MAAM,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,uBAAa,GAAG,KAAK,aAAa,GAAG,KAAK,KAAK;AAAA,QACjD,CAAC;AACD,oBAAY,YAAY;AAAA,MAC1B;AAEA,UAAI,WAAW;AACf,UAAI,wBAAwB,cAAc,OAAO,GAAG;AAClD,mBAAW,aAAa,OAAO,CAAC,SAAS;AACvC,gBAAM,QAAQ,KAAK,GAAG,MAAM,OAAO;AACnC,gBAAM,MAAM,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,iBAAO,cAAc,IAAI,GAAG;AAAA,QAC9B,CAAC;AAED,YAAI,iBAAiB,OAAO,GAAG;AAC7B,qBAAW,SAAS,OAAO,CAAC,SAAS;AACnC,kBAAM,QAAQ,KAAK,GAAG,MAAM,OAAO;AACnC,kBAAM,MAAM,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,gBAAI,CAAC,IAAK,QAAO;AACjB,kBAAM,MAAM,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,kBAAM,MAAM,GAAG,GAAG,IAAI,GAAG;AACzB,mBAAO,iBAAiB,IAAI,GAAG;AAAA,UACjC,CAAC;AAAA,QACH;AAAA,MACF;AAEA,UAAI,QAAQ,eAAe,OAAO;AAChC,cAAM,QAAQ,MAAM,KAAK,CAAC,SAAS,KAAK,MAAM,YAAA,MAAkB,KAAK;AACrE,YAAI,CAAC,OAAO;AACV,qBAAW,CAAC,EAAE,IAAI,MAAM,OAAO,WAAW,IAAI,IAAA,GAAO,GAAG,QAAQ;AAAA,QAClE;AAAA,MACF;AAEA,YAAM,MAAM,UAAU,SAAS,SAAS,SAAS;AACjD,UAAI;AAAE,eAAO,cAAc,GAAG,QAAQ,KAAK,KAAK,SAAS,MAAM,IAAI,MAAM,MAAM;AAAA,MAAK,QAAQ;AAAA,MAAC;AAE7F,YAAM,YAAY,KAAK,IAAI,KAAM,SAAS,MAAM;AAChD,eAAS,MAAM,GAAG,SAAS,EAAE,QAAQ,CAAC,SAAS;AAC7C,cAAM,MAAM,SAAS,cAAc,KAAK;AACxC,YAAI,MAAM,UAAU;AAEpB,cAAM,UAAU,SAAS,cAAc,QAAQ;AAC/C,gBAAQ,OAAO;AACf,gBAAQ,YAAY;AACpB,gBAAQ,WAAW,CAAC,CAAC,KAAK;AAEhC,cAAM,WAAW,KAAK,GAAG,MAAM,OAAO;AACtC,cAAM,QAAQ,SAAS,OAAO,OAAO;AAC/B,cAAM,aAAa,MAAM,MAAM,GAAG,EAAE;AACpC,cAAM,cAAc,MAAM,MAAM,SAAS,CAAC,KAAK,KAAK;AACpD,cAAM,cAAc,WAAW,SAAS,WAAW,KAAK,KAAK,IAAI;AACjE,cAAM,WAAW,CAAC,kBAAkB,KAAK,WAAW;AACpD,cAAM,YAAY,WAAW,OAAO;AACpC,gBAAQ,QAAQ,KAAK;AAErB,cAAM,eAAe,SAAS,cAAc,MAAM;AAClD,qBAAa,YAAY;AAC/B,qBAAa,QAAQ,QAAQ;AAEvB,cAAM,WAAW,SAAS,cAAc,MAAM;AAC9C,iBAAS,YAAY;AACrB,iBAAS,cAAc;AACvB,iBAAS,aAAa,eAAe,MAAM;AAE3C,cAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,iBAAS,YAAY;AAErB,cAAM,cAAc,SAAS,cAAc,KAAK;AAChD,oBAAY,YAAY;AACxB,oBAAY,cAAc,KAAK;AAE/B,YAAI,KAAK,UAAU;AACjB,gBAAM,QAAQ,SAAS,cAAc,MAAM;AAC3C,gBAAM,YAAY;AAClB,gBAAM,cAAc;AACpB,sBAAY,YAAY,KAAK;AAAA,QAC/B;AAEA,cAAM,gBAAgB,SAAS,cAAc,KAAK;AAClD,sBAAc,YAAY;AAC1B,sBAAc,cAAc;AAC5B,sBAAc,MAAM,UAAU,WAAW,SAAS,UAAU;AAE5D,iBAAS,YAAY,WAAW;AAChC,iBAAS,YAAY,aAAa;AAElC,gBAAQ,YAAY,YAAY;AAChC,gBAAQ,YAAY,QAAQ;AAC5B,gBAAQ,YAAY,QAAQ;AAE5B,cAAM,aAAa,MAAM;AACvB,gBAAM,aAAa,YAAY,IAAI,KAAK,EAAE;AAC1C,cAAI,CAAC,WAAW;AACd,yBAAa,QAAQ,QAAQ;AAAA,UAC/B,OAAO;AACL,yBAAa,QAAQ,QAAQ,aAAa,YAAY;AAAA,UACxD;AACA,kBAAQ,UAAU,OAAO,eAAe,CAAC,CAAC,KAAK,QAAQ;AACvD,kBAAQ,UAAU,OAAO,eAAe,aAAa,UAAU;AAAA,QACjE;AAEA,mBAAA;AAEA,gBAAQ,iBAAiB,SAAS,MAAM;AACtC,cAAI,KAAK,SAAU;AACnB,cAAI,CAAC,WAAW;AACd,oBAAQ,SAAS,KAAK,EAAE;AACxB,yBAAA;AACA;AAAA,UACF;AACA,cAAI,YAAY,IAAI,KAAK,EAAE,EAAG,aAAY,OAAO,KAAK,EAAE;AAAA,cAAQ,aAAY,IAAI,KAAK,EAAE;AACvF,qBAAA;AACA,uBAAA;AAAA,QACF,CAAC;AACD,YAAI,YAAY,OAAO;AAEvB,cAAM,UAA2B,CAAA;AACjC,YAAI,QAAQ,gBAAgB,QAAQ,aAAa,QAAQ;AACvD,kBAAQ,KAAK,GAAG,QAAQ,YAAY;AAAA,QACtC,WAAW,QAAQ,eAAe;AAChC,kBAAQ,KAAK,EAAE,MAAM,QAAQ,mBAAmB,MAAM,OAAO,QAAQ,kBAAkB,SAAS,QAAQ,cAAA,CAAe;AAAA,QACzH;AAEA,YAAI,QAAQ,UAAU,CAAC,KAAK,UAAU;AACpC,kBAAQ,QAAQ,CAAC,WAAW;AAC1B,kBAAM,WAAW,SAAS,cAAc,QAAQ;AAChD,qBAAS,OAAO;AAChB,qBAAS,cAAc,OAAO;AAC9B,gBAAI,OAAO,MAAO,UAAS,QAAQ,OAAO;AAC1C,qBAAS,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASzB,qBAAS,iBAAiB,SAAS,CAAC,UAAU;AAC5C,oBAAM,gBAAA;AACN,oBAAM,eAAA;AACN,qBAAO,QAAQ,KAAK,EAAE;AAAA,YACxB,CAAC;AACD,gBAAI,YAAY,QAAQ;AAAA,UAC1B,CAAC;AAAA,QACH;AAEA,aAAK,YAAY,GAAG;AAAA,MACtB,CAAC;AAED,mBAAA;AAAA,IACF;AAEA,UAAM,SAAS,SAAS,cAAc,KAAK;AAC3C,WAAO,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASvB,UAAM,WAAW,SAAS,cAAc,QAAQ;AAChD,aAAS,OAAO;AAChB,aAAS,cAAc;AACvB,aAAS,MAAM,UAAU;AACzB,aAAS,iBAAiB,SAAS,MAAM;AACvC,kBAAY,MAAA;AACZ,aAAO,OAAO,KAAK;AAAA,IACrB,CAAC;AAED,UAAM,YAAY,SAAS,cAAc,QAAQ;AACjD,cAAU,OAAO;AACjB,cAAU,cAAc;AACxB,cAAU,MAAM,UAAU;AAC1B,cAAU,iBAAiB,SAAS,MAAM,aAAA,CAAc;AAExD,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,OAAO;AACd,WAAO,cAAc;AACrB,WAAO,MAAM,UAAU;AACvB,WAAO,WAAW;AAClB,WAAO,iBAAiB,SAAS,MAAM;AACrC,UAAI,CAAC,UAAW;AAChB,YAAM,MAAM,MAAM,KAAK,WAAW;AAClC,UAAI,CAAC,IAAI,OAAQ;AACjB,UAAI,OAAO,QAAQ,iBAAiB,YAAY;AAC9C,gBAAQ,aAAa,GAAG;AAAA,MAC1B,OAAO;AACL,YAAI,QAAQ,CAAC,OAAO,QAAQ,SAAS,EAAE,CAAC;AAAA,MAC1C;AACA,mBAAA;AAAA,IACF,CAAC;AAED,WAAO,YAAY,QAAQ;AAC3B,WAAO,YAAY,SAAS;AAC5B,WAAO,YAAY,MAAM;AAEzB,UAAM,eAAe,MAAM;AACzB,YAAM,QAAQ,YAAY;AAC1B,aAAO,cAAc,iBAAiB,KAAK;AAC3C,aAAO,WAAW,UAAU;AAC5B,aAAO,MAAM,UAAU,UAAU,IAAI,QAAQ;AAC7C,aAAO,MAAM,UAAW,gBAAgB,YAAa,SAAS;AAAA,IAChE;AAEA,aAAS,YAAY,KAAK;AAC1B,aAAS,YAAY,IAAI;AACzB,UAAM,YAAY,MAAM;AACxB,UAAM,YAAY,MAAM;AACxB,UAAM,YAAY,QAAQ;AAE1B,UAAM,mBAAoB,MAAM,QAAQ,QAAQ,WAAW,KAAK,QAAQ,YAAY,SAAS,KACxF,MAAM,KAAK,CAAC,SAAS,QAAQ,KAAK,KAAK,EAAE,CAAC;AAC/C,QAAI,kBAAkB;AACpB,YAAM,gBAAwC,CAAA;AAC9C,YAAM,QAAQ,CAAC,SAAS;AACtB,cAAM,QAAQ,KAAK,GAAG,MAAM,OAAO;AACnC,cAAM,MAAM,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAC1C,sBAAc,GAAG,KAAK,cAAc,GAAG,KAAK,KAAK;AAAA,MACnD,CAAC;AACD,UAAI,OAAO,KAAK,aAAa,EAAE,QAAQ;AACrC,+BAAuB;AACvB,oBAAY,aAAa;AACzB,cAAM,YAAY,QAAQ;AAC1B,cAAM,YAAY,WAAW;AAC7B,uBAAA;AAAA,MACF;AAAA,IACF;AAEA,UAAM,YAAY,QAAQ;AAC1B,UAAM,YAAY,MAAM;AACxB,YAAQ,YAAY,KAAK;AACzB,aAAS,KAAK,YAAY,OAAO;AAEjC,WAAO,iBAAiB,SAAS,MAAM,OAAO,OAAO,KAAK,CAAC;AAC3D,eAAW,MAAM;AACf,UAAI;AAAE,eAAO,MAAA;AAAA,MAAS,QAAQ;AAAA,MAAC;AAC/B,aAAO,EAAE;AACT,mBAAA;AAAA,IACF,GAAG,CAAC;AAAA,EACN;AAAA,EAEA,UAAU,SAAiB,OAAkB,QAAc;AACzD,YAAQ,IAAI,sBAAsB,IAAI,MAAM,OAAO,EAAE;AAErD,UAAM,SAAoC;AAAA,MACxC,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,IAAA;AAGR,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA,oBAIN,OAAO,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe5B,UAAM,cAAc;AAEpB,aAAS,KAAK,YAAY,KAAK;AAE/B,0BAAsB,MAAM;AAC1B,YAAM,MAAM,UAAU;AACtB,YAAM,MAAM,YAAY;AAAA,IAC1B,CAAC;AAED,UAAM,UAAU,SAAS,UAAU,MAAO;AAC1C,eAAW,MAAM;AACf,YAAM,MAAM,UAAU;AACtB,YAAM,MAAM,YAAY;AACxB,iBAAW,MAAM;AACf,YAAI;AAAE,gBAAM,OAAA;AAAA,QAAU,QAAQ;AAAA,QAAC;AAAA,MACjC,GAAG,GAAG;AAAA,IACR,GAAG,OAAO;AAAA,EACZ;AAAA,EAEQ,sBAA4B;AAClC,QAAI,KAAK,eAAgB;AACzB,QAAI;AACF,UAAI,OAAO,aAAa,YAAa;AACrC,YAAM,WAAW,SAAS,cAAc,0CAA0C;AAClF,UAAI,UAAU;AACZ,aAAK,iBAAiB;AACtB;AAAA,MACF;AACA,YAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,YAAM,aAAa,iCAAiC,GAAG;AACvD,YAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4MpB,eAAS,KAAK,YAAY,KAAK;AAC/B,WAAK,iBAAiB;AAAA,IACxB,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEQ,yBAA+B;AACrC,QAAI;AACF,eAAS,iBAAiB,+BAA+B,EAAE,QAAQ,CAAC,OAAO,GAAG,QAAQ;AAAA,IACxF,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEQ,oBAAoB,eAAgF;AAC1G,QAAI;AACF,YAAM,YAAY,eAAe,QAAQ,KAAK,oBAAoB,aAAa,CAAC;AAChF,YAAM,SAAS,eAAe,QAAQ,KAAK,uBAAuB,aAAa,CAAC;AAChF,YAAM,gBAAgB,YAAY,KAAK,MAAM,SAAS,IAAI,CAAA;AAC1D,YAAM,mBAAmB,SAAS,KAAK,MAAM,MAAM,IAAI,CAAA;AACvD,aAAO;AAAA,QACL,eAAe,MAAM,QAAQ,aAAa,IAAI,gBAAgB,CAAA;AAAA,QAC9D,kBAAkB,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAA;AAAA,MAAC;AAAA,IAE5E,QAAQ;AACN,aAAO,EAAE,eAAe,IAAI,kBAAkB,CAAA,EAAC;AAAA,IACjD;AAAA,EACF;AAAA,EAEQ,oBAAoB,eAAuB,SAAsB,YAA+B;AACtG,QAAI;AACF,qBAAe,QAAQ,KAAK,oBAAoB,aAAa,GAAG,KAAK,UAAU,MAAM,KAAK,OAAO,CAAC,CAAC;AACnG,qBAAe,QAAQ,KAAK,uBAAuB,aAAa,GAAG,KAAK,UAAU,MAAM,KAAK,UAAU,CAAC,CAAC;AAAA,IAC3G,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEQ,oBAAoB,eAAgC;AAC1D,UAAM,SAAS,gBAAgB,IAAI,aAAa,KAAK;AACrD,WAAO,2BAA2B,MAAM;AAAA,EAC1C;AAAA,EAEQ,uBAAuB,eAAgC;AAC7D,UAAM,SAAS,gBAAgB,IAAI,aAAa,KAAK;AACrD,WAAO,8BAA8B,MAAM;AAAA,EAC7C;AACF;ACl1BO,MAAM,cAAc;AAAA,EAApB,cAAA;AAGL,SAAQ,SAA6B;AACrC,SAAQ,kBAA+C;AACvD,SAAQ,sBAAqC;AAAA,EAAA;AAAA,EAE7C,OAAO,cAA6B;AAClC,QAAI,CAAC,cAAc,UAAU;AAC3B,oBAAc,WAAW,IAAI,cAAA;AAAA,IAC/B;AACA,WAAO,cAAc;AAAA,EACvB;AAAA,EAEA,YAAgC;AAC9B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,aAA4B;AAChC,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,gBAAgB,EAAE,QAAQ,MAAM;AAC1D,WAAK,YAAY,MAAM;AAAA,IACzB,SAAS,OAAO;AACd,cAAQ,KAAK,qDAAqD,KAAK;AAAA,IACzE;AAAA,EACF;AAAA,EAEA,MAAM,gBAAgB,UAAwB,IAA0B;AACtE,UAAM,EAAE,QAAQ,OAAO,SAAS,UAAU;AAE1C,QAAI,KAAK,iBAAiB;AACxB,aAAO,KAAK;AAAA,IACd;AAEA,QAAI,CAAC,SAAS,KAAK,QAAQ;AACzB,UAAI,CAAC,QAAQ;AACX,aAAK,YAAY,KAAK,QAAQ,EAAE,cAAc,MAAM;AAAA,MACtD;AACA,aAAO,KAAK;AAAA,IACd;AAEA,SAAK,kBAAkB,KAAK,YAAY,KAAK,EAC1C,KAAK,CAAC,WAAW;AAChB,WAAK,SAAS;AACd,UAAI,CAAC,QAAQ;AACX,aAAK,YAAY,QAAQ,EAAE,cAAc,MAAM;AAAA,MACjD,OAAO;AACL,aAAK,YAAY,MAAM;AAAA,MACzB;AACA,aAAO;AAAA,IACT,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,cAAQ,KAAK,uCAAuC,KAAK;AACzD,UAAI,CAAC,QAAQ;AACX,uBAAe,YAAA,EAAc,UAAU,gEAAgE,SAAS;AAAA,MAClH;AACA,YAAM;AAAA,IACR,CAAC,EACA,QAAQ,MAAM;AACb,WAAK,kBAAkB;AAAA,IACzB,CAAC;AAEH,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,kBAAwB;AACtB,UAAM,MAAM,KAAK,QAAQ,cAAc;AACvC,QAAI;AACF,aAAO,KAAK,KAAK,UAAU,qBAAqB;AAAA,IAClD,SAAS,OAAO;AACd,qBAAe,YAAA,EAAc,UAAU,uDAAuD,SAAS;AACvG,cAAQ,KAAK,+BAA+B,KAAK,KAAK;AAAA,IACxD;AAAA,EACF;AAAA,EAEA,MAAc,YAAY,OAAsC;AAC9D,UAAM,MAAM,QAAQ,gCAAgC;AACpD,UAAM,WAAW,MAAM,MAAM,KAAK,EAAE,OAAO,QAAQ,WAAW,YAAY;AAE1E,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,YAAM,IAAI,MAAM,QAAQ,SAAS,MAAM,KAAK,IAAI,EAAE;AAAA,IACpD;AAEA,UAAM,UAAW,MAAM,SAAS,KAAA;AAChC,WAAO;AAAA,EACT;AAAA,EAEQ,YAAY,QAAqB,UAAsC,IAAU;AACvF,QAAI,CAAC,QAAQ;AACX;AAAA,IACF;AACA,UAAM,gBAAgB,OAAO,iBAAiB,OAAO,cAAc;AACnE,UAAM,kBAAkB,iBAAiB,kBAAkB,KAAK;AAEhE,QAAI,OAAO,WAAW;AACpB,UAAI,iBAAiB;AACnB;AAAA,MACF;AACA,WAAK,sBAAsB,iBAAiB;AAC5C,YAAM,eAAe;AAAA,QACnB,sBAAsB,aAAa;AAAA,QACnC;AAAA,MAAA;AAEF,qBAAe,cAAc,UAAU,aAAa,KAAK,IAAI,GAAG,MAAM;AACtE,cAAQ,KAAK,oCAAoC,MAAM;AACvD;AAAA,IACF;AAEA,QAAI,QAAQ,gBAAgB,CAAC,iBAAiB;AAC5C,WAAK,sBAAsB,iBAAiB;AAC5C,qBAAe,YAAA,EAAc,UAAU,iCAAiC,SAAS;AAAA,IACnF;AAAA,EACF;AACF;AC/GO,MAAM,qBAAN,MAAM,mBAAkB;AAAA,EAiBrB,cAAc;AAftB,SAAQ,gCAAyC,IAAA;AACjD,SAAQ,sCAA2C,IAAA;AAEnD,SAAQ,uBAAuB;AAC/B,SAAQ,qBAA2C;AACnD,SAAiB,sBAAsB,CAAC,UAAyB;AAC/D,UAAI,CAAC,KAAK,gBAAgB,KAAK,GAAG;AAChC;AAAA,MACF;AACA,WAAK,kBAAkB,UAAU;AAAA,IACnC;AACA,SAAiB,2BAA0C,MAAM;AAC/D,WAAK,kBAAkB,oCAAoC;AAAA,IAC7D;AAGE,QAAI,OAAO,WAAW,aAAa;AACjC;AAAA,IACF;AACA,SAAK,4BAAA;AAAA,EACP;AAAA,EA8DA,OAAO,cAAiC;AACtC,QAAI,CAAC,mBAAkB,UAAU;AAC/B,yBAAkB,WAAW,IAAI,mBAAA;AAAA,IACnC;AACA,WAAO,mBAAkB;AAAA,EAC3B;AAAA,EAEQ,8BAAoC;AAC1C,QAAI;AACF,UAAI,OAAO,aAAa,eAAe,SAAS,kBAAkB;AAChE,iBAAS,iBAAiB,WAAW,KAAK,qBAAqB,IAAI;AAAA,MACrE;AAEA,aAAO,iBAAiB,gCAAgC,KAAK,wBAAwB;AAAA,IACvF,SAAS,OAAO;AACd,cAAQ,KAAK,sDAAsD,KAAK;AAAA,IAC1E;AAEA,SAAK,6BAAA;AAAA,EACP;AAAA,EAEQ,6BAA6B,UAAU,GAAS;AACtD,UAAM,SACJ,KAAK,sBAAuB,QAAgB,KAAK,KAAK,KACtD,KAAK,sBAAuB,QAAgB,KAAK,KAAK,KACtD,KAAK,sBAAuB,QAAgB,IAAI,IAAI;AAEtD,QAAI,UAAU,WAAW,IAAI;AAC3B;AAAA,IACF;AAEA,eAAW,MAAM,KAAK,6BAA6B,UAAU,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG,UAAU,CAAC,CAAC;AAAA,EACjG;AAAA,EAEQ,sBAAsB,QAAa,YAA6B;AACtE,QAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC,aAAO;AAAA,IACT;AAEA,UAAM,SAAS;AACf,UAAM,UAAU;AAChB,UAAM,2BAAW,IAAA;AACjB,QAAI,YAAY;AAEhB,QAAI,SAAc;AAClB,WAAO,UAAU,WAAW,OAAO,aAAa,WAAW,SAAS,WAAW;AAC7E,YAAM,OAAO,OAAO,oBAAoB,MAAM;AAC9C,iBAAW,OAAO,MAAM;AACtB,YAAI,KAAK,IAAI,GAAG,GAAG;AACjB;AAAA,QACF;AACA,aAAK,IAAI,GAAG;AACZ,YAAI,CAAC,WAAW,KAAK,GAAG,KAAK,QAAQ,QAAQ;AAC3C;AAAA,QACF;AAEA,cAAM,WAAY,OAAe,GAAG;AACpC,YAAI,OAAO,aAAa,cAAc,SAAS,MAAM,GAAG;AACtD;AAAA,QACF;AAEA,cAAM,UAAU,YAAuB,MAAa;AAClD,cAAI;AACF,oBAAQ,kBAAkB,GAAG,UAAU,IAAI,GAAG,EAAE;AAAA,UAClD,SAAS,OAAO;AACd,oBAAQ,KAAK,sCAAsC,KAAK;AAAA,UAC1D;AACA,iBAAO,SAAS,MAAM,MAAM,IAAI;AAAA,QAClC;AACC,gBAAgB,MAAM,IAAI;AAE3B,cAAM,aAAa,OAAO,yBAAyB,QAAQ,GAAG;AAC9D,YAAI,cAAc,WAAW,YAAY;AACvC,iBAAO,eAAe,QAAQ,KAAK;AAAA,YACjC,GAAG;AAAA,YACH,OAAO;AAAA,UAAA,CACR;AAAA,QACH,OAAO;AACJ,iBAAe,GAAG,IAAI;AAAA,QACzB;AAEA,oBAAY;AAAA,MACd;AACA,eAAS,OAAO,eAAe,MAAM;AAAA,IACvC;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,gBAAgB,OAA+B;AACrD,QAAI,CAAC,SAAS,MAAM,QAAQ;AAC1B,aAAO;AAAA,IACT;AACA,QAAI,MAAM,WAAW,MAAM,WAAW,MAAM,QAAQ;AAClD,aAAO;AAAA,IACT;AAEA,UAAM,MAAM,MAAM,KAAK,YAAA;AACvB,QAAI,QAAQ,KAAK;AACf,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,MAAM;AACrB,QAAI,KAAK,qBAAqB,MAAM,GAAG;AACrC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,qBAAqB,QAAqC;AAChE,QAAI,CAAC,UAAU,OAAO,WAAW,aAAa;AAC5C,aAAO;AAAA,IACT;AAEA,QAAI,kBAAkB,aAAa;AACjC,UAAI,OAAO,mBAAmB;AAC5B,eAAO;AAAA,MACT;AAEA,YAAM,kBAAkB,CAAC,SAAS,YAAY,QAAQ;AACtD,UAAI,gBAAgB,SAAS,OAAO,OAAO,GAAG;AAC5C,eAAO;AAAA,MACT;AAEA,YAAM,OAAO,OAAO,eAAe,MAAM;AACzC,UAAI,QAAQ,CAAC,WAAW,YAAY,WAAW,EAAE,SAAS,IAAI,GAAG;AAC/D,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,kBAAkB,SAAuB;AAC/C,UAAM,MAAM,KAAK,IAAA;AACjB,QAAI,MAAM,KAAK,uBAAuB,mBAAkB,qBAAqB;AAC3E;AAAA,IACF;AACA,SAAK,uBAAuB;AAE5B,SAAK,WAAA;AACL,SAAK,4BAAA;AAEL,QAAI;AACF,aAAO,cAAc,IAAI,YAAY,kCAAkC,EAAE,QAAQ,EAAE,QAAA,EAAQ,CAAG,CAAC;AAAA,IACjG,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEQ,8BAAoC;AAC1C,QAAI;AACF,YAAM,cAAc,YAAY,YAAA;AAChC,UAAI,CAAC,eAAe,OAAO,YAAY,oBAAoB,YAAY;AACrE;AAAA,MACF;AAEA,UAAI,KAAK,oBAAoB;AAC3B;AAAA,MACF;AAEA,WAAK,qBAAqB,QAAQ,QAAQ,YAAY,iBAAiB,EACpE,MAAM,CAAC,UAAU;AAChB,gBAAQ,KAAK,oEAAoE,KAAK;AAAA,MACxF,CAAC,EACA,QAAQ,MAAM;AACb,aAAK,qBAAqB;AAAA,MAC5B,CAAC;AAAA,IACL,SAAS,OAAO;AACd,cAAQ,KAAK,4CAA4C,KAAK;AAAA,IAChE;AAAA,EACF;AAAA,EAEA,OAAO,wBAAwD;AAC7D,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAAgB,UAAuC;AAC3D,UAAM,SAAS,mBAAkB,WAAW,QAAQ;AACpD,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,sBAAsB,QAAQ,EAAE;AAAA,IAClD;AAGA,UAAM,WAAW,SAAS,QAAQ;AAClC,UAAM,SAAS,KAAK,eAAe,QAAQ;AAC3C,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,QAAI;AAEF,YAAM,SAAS,IAAI,gBAAA;AACnB,aAAO,IAAI,eAAe,OAAO,UAAU;AAC3C,aAAO,IAAI,cAAc,OAAO,eAAe,KAAK,GAAG,CAAC;AAExD,UAAI,WAAW,MAAM,MAAM,qBAAqB,OAAO,SAAA,CAAU,IAAI,EAAE,QAAQ,MAAA,CAAO;AACtF,UAAI,CAAC,SAAS,IAAI;AAChB,mBAAW,MAAM,MAAM,oBAAoB,OAAO,SAAA,CAAU,IAAI,EAAE,QAAQ,OAAO;AAAA,MACnF;AAEA,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,IAAI,MAAM,0BAA0B,SAAS,UAAU,EAAE;AAAA,MACjE;AAEA,YAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,YAAM,QAAoB,KAAK,OAAO,IAAI,CAAC,SAAc;AACvD,cAAM,eAAuB,KAAK,iBAAiB,KAAK;AACxD,eAAO;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,KAAK,KAAK,QAAQ,sDAAsD,EAAE;AAAA,UACjF,MAAM;AAAA,UACN,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA,UACf,WAAW,KAAK,aAAa;AAAA,UAC7B,MAAM,KAAK;AAAA,UACX,UAAU,KAAK;AAAA,QAAA;AAAA,MAEnB,CAAC,KAAK,CAAA;AAGN,WAAK,eAAe,UAAU,KAAK;AACnC,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,kBAAkB,QAAQ,WAAW,KAAK;AACxD,aAAO,CAAA;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,eACE,UACA,UACA,UAKI,CAAA,GACE;AACN,UAAM,SAAS,mBAAkB,WAAW,QAAQ;AACpD,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,sBAAsB,QAAQ,EAAE;AAAA,IAClD;AAEA,UAAM;AAAA,MACJ,QAAQ,UAAU,OAAO,WAAW;AAAA,MACpC,cAAc;AAAA,MACd;AAAA,MACA;AAAA,IAAA,IACE;AAEJ,SAAK,gBAAgB,QAAQ,EAAE,KAAK,CAAA,UAAS;AAC3C,YAAM,QAAQ,MAAM,IAAI,CAAA,UAAS;AAAA,QAC/B,IAAI,KAAK;AAAA,QACT,OAAO,KAAK;AAAA,QACZ,UAAU,iBAAiB,KAAK;AAAA,MAAA,EAChC;AAEF,YAAM,UAAU,eAAe,YAAA;AAE/B,YAAM,aAAa,MAAM,KAAK,IAAI;AAAA,QAChC,MAAM,IAAI,CAAA,SAAQ;AAChB,gBAAM,MAAM,KAAK,QAAQ;AACzB,gBAAM,QAAQ,IAAI,MAAM,OAAO;AAC/B,iBAAO,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAAA,QACvC,CAAC;AAAA,MAAA,CACF;AAED,cAAQ,kBAAkB;AAAA,QACxB;AAAA,QACA,aAAa,OAAO,eAAe,UAAU,OAAO,YAAY,aAAa;AAAA,QAC7E;AAAA,QACA,aAAa;AAAA,QACb,mBAAmB;AAAA,QACnB,UAAU,CAAC,OAAe;AACxB,gBAAM,OAAO,MAAM,KAAK,CAAA,MAAK,EAAE,OAAO,EAAE;AACxC,cAAI,MAAM;AACR,qBAAS,IAAI;AAAA,UACf;AAAA,QACF;AAAA,QACA,cAAc,gBAAgB,CAAC,QAAkB;AAC/C,gBAAM,gBAAgB,IAAI,IAAI,CAAA,OAAM,MAAM,KAAK,CAAA,MAAK,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,OAAO;AAChF,cAAI,iBAAiB,cAAc,SAAS,GAAG;AAC7C,0BAAc,aAAa;AAAA,UAC7B;AAAA,QACF,IAAI;AAAA,QACJ,aAAa;AAAA,QACb,gBAAgB,OAAO;AAAA,QACvB;AAAA,QACA,cAAc,CAAA;AAAA,MAAC,CAChB;AAAA,IACH,CAAC,EAAE,MAAM,CAAA,UAAS;AAChB,cAAQ,MAAM,+BAA+B,KAAK;AAClD,qBAAe,YAAA,EAAc,UAAU,kBAAkB,OAAO,YAAY,YAAA,CAAa,IAAI,OAAO;AAAA,IACtG,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,eAAe,KAAgC;AACrD,UAAM,YAAY,KAAK,gBAAgB,IAAI,GAAG;AAC9C,QAAI,CAAC,UAAW,QAAO;AAGvB,UAAM,iBAAiB,KAAK,IAAA,IAAS,IAAI,KAAK;AAC9C,QAAI,YAAY,gBAAgB;AAC9B,WAAK,UAAU,OAAO,GAAG;AACzB,WAAK,gBAAgB,OAAO,GAAG;AAC/B,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,IAAI,GAAG,KAAK;AAAA,EACpC;AAAA,EAEQ,eAAe,KAAa,OAAyB;AAC3D,SAAK,UAAU,IAAI,KAAK,KAAK;AAC7B,SAAK,gBAAgB,IAAI,KAAK,KAAK,KAAK;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKA,aAAmB;AACjB,SAAK,UAAU,MAAA;AACf,SAAK,gBAAgB,MAAA;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAAgB,UAAiC;AACrD,UAAM,WAAW,SAAS,QAAQ;AAClC,SAAK,UAAU,OAAO,QAAQ;AAC9B,SAAK,gBAAgB,OAAO,QAAQ;AACpC,UAAM,KAAK,gBAAgB,QAAQ;AAAA,EACrC;AACF;AAtaE,mBAAwB,sBAAsB;AAqB9C,mBAAwB,aAA6C;AAAA,EACnE,QAAQ;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,SAAS,OAAO,QAAQ,QAAQ,QAAQ,gBAAgB,QAAQ,MAAM;AAAA,IACvF,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf,KAAK;AAAA,IACH,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,SAAS,OAAO,QAAQ,QAAQ,QAAQ,gBAAgB,QAAQ,MAAM;AAAA,IACvF,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf,OAAO;AAAA,IACL,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,SAAS,OAAO,QAAQ,QAAQ,QAAQ,gBAAgB,QAAQ,MAAM;AAAA,IACvF,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf,eAAe;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,SAAS,OAAO,QAAQ,QAAQ,QAAQ,gBAAgB,QAAQ,MAAM;AAAA,IACvF,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf,kBAAkB;AAAA,IAChB,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,SAAS,OAAO,QAAQ,QAAQ,QAAQ,gBAAgB,QAAQ,MAAM;AAAA,IACvF,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf,kBAAkB;AAAA,IAChB,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,OAAO;AAAA,IACxB,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf,YAAY;AAAA,IACV,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,SAAS,OAAO,QAAQ,QAAQ,QAAQ,gBAAgB,QAAQ,MAAM;AAAA,IACvF,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf,gBAAgB;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,gBAAgB,CAAC,SAAS,OAAO,QAAQ,QAAQ,QAAQ,gBAAgB,QAAQ,MAAM;AAAA,IACvF,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AACf;AAjFG,IAAM,oBAAN;AC5BA,MAAM,oBAAoB;AAAA,EAK/B,YAAmB,MAAc;AAAd,SAAA,OAAA;AACjB,SAAK,OAAO;AACZ,SAAK,QAAQ,CAAA;AACb,SAAK,WAAW,CAAA;AAAA,EAClB;AAAA,EAEA,KAAK,MAAW,OAAY,IAAY,OAAe,SAAuB;AAAA,EAE9E;AAAA,EAEA,YAAY,OAAY,KAAU,MAAoB;AACpD,WAAO,KAAK,eAAe,OAAO,KAAK,MAAM,QAAQ;AAAA,EACvD;AAAA,EAEA,QAAQ,OAAY,KAAU,MAAoB;AAChD,WAAO,KAAK,eAAe,OAAO,KAAK,MAAM,SAAS;AAAA,EACxD;AAAA,EAEU,eAAe,OAAY,KAAU,MAAW,SAAwC;AAIhG,UAAM,UAAoC,OAAO,QAAQ,KAAK,QAAmC;AACjG,YAAQ,KAAK,CAAC,GAAG,MAAM;AACrB,YAAM,KAAM,EAAE,CAAC,GAAG,YAAa;AAC/B,YAAM,KAAM,EAAE,CAAC,GAAG,YAAa;AAC/B,aAAO,KAAK;AAAA,IACd,CAAC;AAED,eAAW,CAAC,KAAK,IAAI,KAAK,SAAS;AACjC,YAAM,SAAS,KAAK;AAGpB,UAAI,UAAU,OAAO,UAAU,KAAK,KAAK,WAAW,KAAK,MAAM,GAAG;AAChE,cAAM,MAAM,YAAY,WAAW,KAAK,SAAS,KAAK,aAAa,YAAY,WAAW,KAAK,UAAU,KAAK;AAC9G,YAAI,IAAI;AAEN,iBAAO,GAAG,KAAK,MAAM,OAAO,KAAK,IAAI;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEU,WAAW,KAAU,QAA2B;AACxD,QAAI,OAAO,SAAS,EAAG,QAAO;AAC9B,UAAM,CAAC,GAAG,GAAG,OAAO,MAAM,IAAI;AAC9B,WAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,SAC7B,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI;AAAA,EACtC;AAAA,EAEA,cAAgC;AAC9B,WAAO,CAAC,KAAK,EAAE;AAAA,EACjB;AACF;AC/BO,MAAM,YAA2B;AAAA,EACtC,kBAAkB,MAAM;AAAE,UAAM,IAAI,MAAM,4CAA4C;AAAA,EAAG;AAAA,EACzF,iBAAiB,MAAM;AAAE,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAAG;AAAA,EACvF,oBAAoB,MAAM;AAAE,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAAG;AAAA,EAC7F,wBAAwB,MAAM;AAAE,UAAM,IAAI,MAAM,kDAAkD;AAAA,EAAG;AAAA,EACrG,iBAAiB,MAAM;AAAE,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAAG;AAAA,EACvF,gBAAgB,MAAM;AAAE,UAAM,IAAI,MAAM,0CAA0C;AAAA,EAAG;AAAA,EACrF,WAAW,MAAM;AAAE,UAAM,IAAI,MAAM,qCAAqC;AAAA,EAAG;AAAA,EAC3E,mBAAmB,MAAM;AAAE,UAAM,IAAI,MAAM,6CAA6C;AAAA,EAAG;AAAA,EAC3F,gBAAgB,MAAM;AAAE,UAAM,IAAI,MAAM,0CAA0C;AAAA,EAAG;AAAA,EACrF,eAAe,MAAM;AAAE,UAAM,IAAI,MAAM,yCAAyC;AAAA,EAAG;AAAA,EACnF,kBAAkB,MAAM;AAAE,UAAM,IAAI,MAAM,4CAA4C;AAAA,EAAG;AAAA,EACzF,gBAAgB,MAAM;AAAE,UAAM,IAAI,MAAM,0CAA0C;AAAA,EAAG;AAAA,EACrF,sBAAsB,MAAM;AAAE,UAAM,IAAI,MAAM,gDAAgD;AAAA,EAAG;AAAA,EACjG,iBAAiB;AAAA,EACjB,gBAAgB;AAClB;AAEO,SAAS,aAAa,KAAmC;AAC9D,SAAO,OAAO,WAAW,GAAG;AAC9B;AC5CA,MAAM,cAAc;AAEpB,SAAS,YAAoC;AAC3C,MAAI;AACF,UAAM,MAAM,aAAa,QAAQ,WAAW;AAC5C,QAAI,CAAC,IAAK,QAAO,CAAA;AACjB,UAAM,OAAO,KAAK,MAAM,GAAG;AAC3B,WAAO,QAAQ,OAAO,SAAS,WAAW,OAAiC,CAAA;AAAA,EAC7E,QAAQ;AACN,WAAO,CAAA;AAAA,EACT;AACF;AAEA,SAAS,WAAW,KAAmC;AACrD,MAAI;AACF,iBAAa,QAAQ,aAAa,KAAK,UAAU,GAAG,CAAC;AAAA,EACvD,QAAQ;AAAA,EAAC;AACX;AAEO,MAAM,mBAAmB;AAAA,EAC9B,IAAI,cAAqC;AACvC,QAAI,CAAC,aAAc,QAAO;AAC1B,UAAM,MAAM,UAAA;AACZ,UAAM,MAAM,IAAI,YAAY;AAC5B,WAAO,OAAO,QAAQ,YAAY,IAAI,OAAO,SAAS,MAAM;AAAA,EAC9D;AAAA,EAEA,IAAI,cAAsB,cAA4B;AACpD,QAAI,CAAC,aAAc;AACnB,UAAM,MAAM,UAAA;AACZ,QAAI,OAAO,iBAAiB,YAAY,aAAa,KAAA,EAAO,QAAQ;AAClE,UAAI,YAAY,IAAI,aAAa,KAAA;AAAA,IACnC,OAAO;AACL,aAAO,IAAI,YAAY;AAAA,IACzB;AACA,eAAW,GAAG;AAAA,EAChB;AAAA,EAEA,OAAO,cAA4B;AACjC,QAAI,CAAC,aAAc;AACnB,UAAM,MAAM,UAAA;AACZ,QAAI,IAAI,YAAY,MAAM,QAAW;AACnC,aAAO,IAAI,YAAY;AACvB,iBAAW,GAAG;AAAA,IAChB;AAAA,EACF;AACF;AC/CO,MAAM,2BAA2B,oBAAoB;AAAA,EAC1D,YAAmB,KAAa;AAC9B,UAAM,OAAO,GAAG,EAAE;AADD,SAAA,MAAA;AAmDnB,SAAA,iBAAiB,CAAC,QAAa,MAAW,SAAuB;AAC/D,WAAK,MAAM,YAAY,CAAC,KAAK,MAAM;AACnC,gBAAU,kBAAkB,IAAI;AAChC,WAAK,eAAe,MAAM,KAAK;AAC/B,aAAO;AAAA,IACT;AAEA,SAAA,eAAe,CAAC,QAAa,MAAW,SAAuB;AAC7D,YAAM,aAAa,KAAK,cAAc,IAAI;AAC1C,YAAM,aAAa,WAAW,MAAM,CAAC,MAAW,EAAE,MAAM,OAAO;AAC/D,iBAAW,QAAQ,CAAC,MAAW,EAAE,MAAM,UAAU,CAAC,UAAU;AAC5D,WAAK,eAAe,MAAM,KAAK;AAC/B,aAAO;AAAA,IACT;AA9DE,SAAK,QAAQ,EAAE,MAAM,sBAAsB,KAAK,WAAW,MAAA;AAC3D,SAAK,WAAW;AAAA,MACd,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,cAAc,UAAU,GAAA;AAAA,MAC/D,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,gBAAgB,UAAU,EAAA;AAAA,IAAE;AAAA,EAEzE;AAAA,EAEA,KAAK,KAAU,MAAW,GAAW,MAAc,QAAsB;AACvE,UAAM,SAAS;AACf,QAAI,OAAO;AAEX,QAAI,KAAA;AACJ,QAAI,YAAY;AAChB,QAAI,SAAS,GAAG,MAAM,GAAG,MAAM;AAG/B,QAAI,UAAA;AACJ,QAAI,OAAO,GAAG,OAAO,GAAG;AACxB,QAAI,OAAO,GAAG,OAAO,GAAG;AACxB,QAAI,OAAO,GAAG,OAAO,SAAS,GAAG;AACjC,QAAI,OAAO,GAAG,OAAO,SAAS,GAAG;AAGjC,UAAM,OAAO,SAAS;AACtB,UAAM,aAAa,KAAK,cAAc,IAAI;AAC1C,eAAW,SAAS,KAAK,WAAW,MAAM,CAAC,OAAY,GAAG,MAAM,OAAO;AAEvE,QAAI,YAAY;AAChB,QAAI,OAAO;AACX,QAAI,YAAY;AAChB,QAAI,eAAe;AACnB,QAAI,SAAS,KAAK,MAAM,YAAY,MAAM,KAAK,MAAM,OAAO,IAAI;AAChE,SAAK,SAAS,SAAS,SAAS,CAAC,GAAG,GAAG,GAAG,MAAM;AAChD,YAAQ;AACR,SAAK,SAAS,OAAO,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;AAEzC,QAAI,YAAY;AAChB,QAAI,SAAS,GAAG,KAAK,GAAG,KAAK,WAAW,MAAM,KAAK,MAAM,OAAO,IAAI;AAEpE,QAAI,QAAA;AAAA,EACN;AAAA,EAEQ,cAAc,MAAkB;AACtC,QAAI,CAAC,KAAK,cAAe,QAAO,CAAA;AAChC,WAAO,KAAK,cAAc;AAAA,MAAO,CAAC,MAChC,aAAa,mBAAmB,EAAE,MAAM,QAAQ,KAAK;AAAA,IAAA;AAAA,EAEzD;AAAA,EAiBA,cAAgC;AAC9B,WAAO,CAAC,KAAK,EAAE;AAAA,EACjB;AAAA,EAEA,cAAuB;AACrB,WAAO,KAAK,MAAM;AAAA,EACpB;AACF;ACzEO,MAAM,wBAAwB,oBAAoB;AAAA,EACvD,YAAY,MAAc;AACxB,UAAM,IAAI;AA6aZ,SAAA,gBAAgB,CAAC,QAAa,MAAW,SAAuB;AAC9D,WAAK,MAAM,UAAU,CAAC,KAAK,MAAM;AACjC,WAAK,eAAe,MAAM,KAAK;AAC/B,UAAI;AAAE,kBAAU,qBAAqB,IAAI;AAAA,MAAG,QAAQ;AAAA,MAAC;AACrD,aAAO;AAAA,IACT;AAEA,SAAA,cAAc,CAAC,OAAY,MAAW,SAAuB;AAC3D,gBAAU,iBAAiB,MAAM,MAAM,KAAK;AAC5C,aAAO;AAAA,IACT;AAEA,SAAA,kBAAkB,CAAC,OAAY,MAAW,SAAuB;AAC/D,UAAI;AACF,cAAMD,OAAO,QAAgB;AAC7B,cAAM,SAASA,MAAK;AACpB,YAAI,QAAQ,QAAQ;AAClB,iBAAO,OAAO,kBAAkB,KAAK,MAAM,YAAY,GAAG,CAAC,MAAW;AACpE,kBAAM,MAAM,WAAW,CAAC;AACxB,gBAAI,CAAC,OAAO,MAAM,GAAG,GAAG;AACtB,mBAAK,MAAM,WAAW,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,GAAG,CAAC;AACrD,mBAAK,eAAe,MAAM,IAAI;AAAA,YAChC;AAAA,UACF,GAAG,KAAK;AACR,iBAAO;AAAA,QACT;AAAA,MACF,QAAQ;AAAA,MAAC;AACT,aAAO;AAAA,IACT;AAEA,SAAA,sBAAsB,CAAC,QAAa,MAAW,SAAuB;AACpE,WAAK,MAAM,WAAW,KAAK,IAAI,KAAK,KAAK,MAAM,WAAW,GAAG;AAC7D,WAAK,eAAe,MAAM,KAAK;AAC/B,UAAI;AAAE,kBAAU,qBAAqB,IAAI;AAAA,MAAG,QAAQ;AAAA,MAAC;AACrD,aAAO;AAAA,IACT;AAEA,SAAA,oBAAoB,CAAC,QAAa,MAAW,SAAuB;AAClE,WAAK,MAAM,WAAW,KAAK,IAAI,IAAI,KAAK,MAAM,WAAW,GAAG;AAC5D,WAAK,eAAe,MAAM,KAAK;AAC/B,UAAI;AAAE,kBAAU,qBAAqB,IAAI;AAAA,MAAG,QAAQ;AAAA,MAAC;AACrD,aAAO;AAAA,IACT;AAEA,SAAA,sBAAsB,CAAC,OAAY,MAAW,SAAuB;AACnE,UAAI;AACF,cAAMA,OAAO,QAAgB;AAC7B,cAAM,SAASA,MAAK;AACpB,YAAI,QAAQ,QAAQ;AAClB,iBAAO,OAAO,iBAAiB,KAAK,MAAM,gBAAgB,KAAK,MAAM,YAAY,GAAG,CAAC,MAAW;AAC9F,kBAAM,MAAM,WAAW,CAAC;AACxB,gBAAI,CAAC,OAAO,MAAM,GAAG,GAAG;AACtB,mBAAK,MAAM,eAAe,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,GAAG,CAAC;AACzD,mBAAK,eAAe,MAAM,IAAI;AAC9B,kBAAI;AAAE,0BAAU,qBAAqB,IAAI;AAAA,cAAG,QAAQ;AAAA,cAAC;AAAA,YACvD;AAAA,UACF,GAAG,KAAK;AACR,iBAAO;AAAA,QACT;AAAA,MACF,QAAQ;AAAA,MAAC;AACT,aAAO;AAAA,IACT;AAEA,SAAA,0BAA0B,CAAC,QAAa,MAAW,SAAuB;AACxE,WAAK,MAAM,eAAe,KAAK,IAAI,MAAM,KAAK,MAAM,gBAAgB,KAAK,MAAM,YAAY,KAAK,GAAG;AACnG,WAAK,eAAe,MAAM,KAAK;AAC/B,UAAI;AAAE,kBAAU,qBAAqB,IAAI;AAAA,MAAG,QAAQ;AAAA,MAAC;AACrD,aAAO;AAAA,IACT;AAEA,SAAA,wBAAwB,CAAC,QAAa,MAAW,SAAuB;AACtE,WAAK,MAAM,eAAe,KAAK,IAAI,KAAK,KAAK,MAAM,gBAAgB,KAAK,MAAM,YAAY,KAAK,GAAG;AAClG,WAAK,eAAe,MAAM,KAAK;AAC/B,UAAI;AAAE,kBAAU,qBAAqB,IAAI;AAAA,MAAG,QAAQ;AAAA,MAAC;AACrD,aAAO;AAAA,IACT;AAEA,SAAA,gBAAgB,CAAC,QAAa,MAAW,SAAuB;AAC9D,YAAM,MAAM,KAAK,cAAc,QAAQ,IAAI;AAC3C,UAAI,OAAO,EAAG,QAAO;AACrB,UAAI,MAAM,YAAY,YAAY;AAChC,iBAAS,IAAI,MAAM,GAAG,KAAK,GAAG,KAAK;AACjC,gBAAM,IAAI,KAAK,cAAc,CAAC;AAC9B,cAAI,aAAa,iBAAiB;AAChC,gBAAI,EAAE,OAAO,QAAS,KAAa,OAAO,KAAK;AAC7C,oBAAM,MAAM,KAAK,cAAc,GAAG;AAClC,mBAAK,cAAc,GAAG,IAAI,KAAK,cAAc,CAAC;AAC9C,mBAAK,cAAc,CAAC,IAAI;AACxB;AAAA,YACF,WAAW,EAAE,aAAa,kBAAkB;AAC1C;AAAA,YACF;AAAA,UACF;AACA,cAAI,aAAa,mBAAoB;AAAA,QACvC;AAAA,MACF,OAAO;AACL,cAAM,OAAO,KAAK,cAAc,GAAG;AACnC,aAAK,cAAc,GAAG,IAAI,KAAK,cAAc,MAAM,CAAC;AACpD,aAAK,cAAc,MAAM,CAAC,IAAI;AAAA,MAChC;AACA,gBAAU,kBAAkB,IAAI;AAChC,WAAK,eAAe,MAAM,KAAK;AAC/B,aAAO;AAAA,IACT;AAEA,SAAA,kBAAkB,CAAC,QAAa,MAAW,SAAuB;AAChE,YAAM,MAAM,KAAK,cAAc,QAAQ,IAAI;AAC3C,UAAI,OAAO,KAAK,cAAc,SAAS,EAAG,QAAO;AACjD,UAAI,MAAM,YAAY,YAAY;AAChC,iBAAS,IAAI,MAAM,GAAG,IAAI,KAAK,cAAc,QAAQ,KAAK;AACxD,gBAAM,IAAI,KAAK,cAAc,CAAC;AAC9B,cAAI,aAAa,iBAAiB;AAChC,gBAAI,EAAE,OAAO,QAAS,KAAa,OAAO,KAAK;AAC7C,oBAAM,MAAM,KAAK,cAAc,GAAG;AAClC,mBAAK,cAAc,GAAG,IAAI,KAAK,cAAc,CAAC;AAC9C,mBAAK,cAAc,CAAC,IAAI;AACxB;AAAA,YACF,WAAW,EAAE,aAAa,kBAAkB;AAC1C;AAAA,YACF;AAAA,UACF;AACA,cAAI,aAAa,mBAAoB;AAAA,QACvC;AAAA,MACF,OAAO;AACL,cAAM,OAAO,KAAK,cAAc,GAAG;AACnC,aAAK,cAAc,GAAG,IAAI,KAAK,cAAc,MAAM,CAAC;AACpD,aAAK,cAAc,MAAM,CAAC,IAAI;AAAA,MAChC;AACA,gBAAU,kBAAkB,IAAI;AAChC,WAAK,eAAe,MAAM,KAAK;AAC/B,aAAO;AAAA,IACT;AAEA,SAAA,sBAAsB,CAAC,OAAY,MAAW,SAAuB;AACnE,UAAI;AACF,YAAI;AAAE,iBAAO,kBAAA;AAAqB,iBAAO,iBAAA;AAAA,QAAoB,QAAQ;AAAA,QAAC;AACtE,YAAI,aAAa,OAAO,UAAU,mBAAmB,YAAY;AAC/D,gBAAM,OAAQ,KAAa;AAC3B,gBAAM,QAAQ,OAAO,EAAE,MAAM,MAAM,QAAQ,SAAS;AACpD,oBAAU,eAAe,OAAO,KAAK,MAAM,gBAAgB,IAAI,OAAO,MAAc;AAClF,kBAAM,SAAS,OAAO,KAAK,EAAE;AAC7B,iBAAK,MAAM,eAAe;AAC1B,iBAAK,MAAM,cAAc;AACxB,iBAAa,QAAQ,EAAE,GAAG,KAAK,OAAO,gBAAgB,MAAA;AACvD,gBAAI;AAAE,+BAAiB,IAAI,KAAK,MAAM,MAAM,MAAM;AAAA,YAAG,QAAQ;AAAA,YAAC;AAE7D,iBAAa,QAAQ,EAAE,GAAG,KAAK,MAAA;AAChC,iBAAK,eAAe,MAAM,IAAI;AAC9B,gBAAI;AAAE,wBAAU,qBAAqB,IAAI;AAAA,YAAG,QAAQ;AAAA,YAAC;AAAA,UACvD,GAAG,KAAK;AACR,iBAAO;AAAA,QACT;AAAA,MACF,QAAQ;AAAA,MAAC;AACT,UAAI;AACF,cAAMA,OAAO,QAAgB;AAC7B,cAAM,SAASA,MAAK;AACpB,YAAI,QAAQ,QAAQ;AAClB,iBAAO,OAAO,iBAAiB,KAAK,MAAM,gBAAgB,IAAI,OAAO,MAAW;AAC9E,kBAAM,SAAS,OAAO,KAAK,EAAE;AAC7B,iBAAK,MAAM,eAAe;AAC1B,iBAAK,MAAM,cAAc;AACxB,iBAAa,QAAQ,EAAE,GAAG,KAAK,OAAO,gBAAgB,MAAA;AACvD,gBAAI;AAAE,+BAAiB,IAAI,KAAK,MAAM,MAAM,MAAM;AAAA,YAAG,QAAQ;AAAA,YAAC;AAE9D,iBAAK,eAAe,MAAM,IAAI;AAC9B,gBAAI;AAAE,wBAAU,qBAAqB,IAAI;AAAA,YAAG,QAAQ;AAAA,YAAC;AAAA,UACvD,GAAG,KAAK;AACR,iBAAO;AAAA,QACT;AAAA,MACF,QAAQ;AAAA,MAAC;AACT,aAAO;AAAA,IACT;AAEA,SAAA,iBAAiB,OAAO,QAAa,MAAW,SAAgC;AAE9E,UAAI;AACF,cAAM,MAAO,OAAO,gBAAgB,eAAgB,YAAoB,MAAQ,YAAoB,IAAA,IAAQ,KAAK,IAAA;AAChH,aAAa,qBAAqB;AAClC,aAAa,sBAAsB;AACnC,aAAa,kBAAkB,MAAM;AACrC,aAAa,qBAAqB;AACnC,YAAI;AAAE,eAAK,eAAe,MAAM,KAAK;AAAA,QAAG,QAAQ;AAAA,QAAC;AAAA,MACnD,QAAQ;AAAA,MAAC;AACT,UAAI;AAEF,YAAI;AAAE,2BAAiB,OAAO,KAAK,MAAM,IAAI;AAAA,QAAG,QAAQ;AAAA,QAAC;AACzD,aAAK,MAAM,eAAe;AAC1B,aAAK,MAAM,cAAc;AACxB,aAAa,QAAQ,EAAE,GAAG,KAAK,OAAO,gBAAgB,MAAA;AACvD,cAAM,KAAK,kBAAA;AACX,aAAK,eAAe,MAAM,IAAI;AAC9B,YAAI;AAAE,oBAAU,qBAAqB,IAAI;AAAA,QAAG,QAAQ;AAAA,QAAC;AACrD,eAAO;AAAA,MACT,QAAQ;AACN,eAAO;AAAA,MACT,UAAA;AAEE,YAAI;AACF,gBAAM,OAAQ,OAAO,gBAAgB,eAAgB,YAAoB,MAAQ,YAAoB,IAAA,IAAQ,KAAK,IAAA;AAClH,gBAAM,MAAM,KAAK,IAAM,KAAa,mBAAmB,MAAO,OAAO,GAAG;AACvE,eAAa,kBAAkB;AAChC,gBAAM,YAAY,KAAK,IAAI,GAAG,MAAM,IAAI;AACxC,qBAAW,MAAM;AAAG,iBAAa,qBAAqB;AAAO,gBAAI;AAAE,mBAAK,eAAe,MAAM,KAAK;AAAA,YAAG,QAAQ;AAAA,YAAC;AAAC;AAAA,UAAE,GAAG,SAAS;AAAA,QAC/H,QAAQ;AAAA,QAAC;AAAA,MACX;AAAA,IACF;AAEA,SAAA,aAAa,CAAC,QAAa,MAAW,SAAuB;AAC3D,gBAAU,gBAAgB,MAAM,IAAI;AACpC,aAAO;AAAA,IACT;AAEA,SAAA,gBAAgB,CAAC,QAAa,MAAW,SAAuB;AAC9D,gBAAU,iBAAiB,MAAM,IAAI;AACrC,aAAO;AAAA,IACT;AAnoBE,SAAK,QAAQ;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,MACV,cAAc;AAAA,MACd,cAAc;AAAA,MACd,KAAK;AAAA,MACL,aAAa;AAAA,MACb,gBAAgB;AAAA,IAAA;AAElB,SAAK,WAAW;AAAA,MACd,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,eAAe,UAAU,GAAA;AAAA,MACjE,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,aAAa,UAAU,GAAA;AAAA,MAC7D,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,YAAY,UAAU,GAAA;AAAA,MAC3D,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,iBAAiB,UAAU,GAAA;AAAA,MACrE,cAAc,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,qBAAqB,UAAU,GAAA;AAAA,MAC7E,YAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,mBAAmB,UAAU,GAAA;AAAA,MACzE,cAAc,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,qBAAqB,UAAU,GAAA;AAAA,MAC7E,kBAAkB,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,yBAAyB,UAAU,GAAA;AAAA,MACrF,gBAAgB,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,uBAAuB,UAAU,GAAA;AAAA,MACjF,cAAc,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,qBAAqB,UAAU,GAAA;AAAA,MAC7E,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,gBAAgB,UAAU,GAAA;AAAA,MACnE,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,eAAe,UAAU,IAAA;AAAA,MACjE,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,eAAe,UAAU,GAAA;AAAA,MACjE,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,iBAAiB,UAAU,GAAA;AAAA,IAAG;AAAA,EAE5E;AAAA,EAEA,KAAK,KAAU,MAAW,GAAW,MAAc,QAAsB;AACvE,UAAM,SAAS;AACf,UAAM,YAAY;AAElB,QAAI,KAAA;AACJ,UAAM,aAAa,KAAK,IAAI,GAAG,IAAI,SAAS,CAAC;AAC7C,UAAM,gBAAgB,KAAK,IAAI,GAAG,MAAM;AAExC,QAAI,UAAA;AACJ,QAAI,KAAK,QAAQ,MAAM,YAAY,aAAa;AAChD,QAAI,KAAA;AAEJ,UAAM,aAAa,KAAK,IAAI,GAAG,SAAS,CAAC;AACzC,UAAM,QAAQ,QAAQ,UAAU,aAAa,KAAK,OAAO,SAAS,cAAc,CAAC,IAAI;AACrF,UAAM,eAAe,KAAK,IAAI,GAAG,aAAa,CAAC;AAE/C,QAAI,YAAY;AAChB,QAAI,UAAA;AACJ,QAAI,UAAU,QAAQ,OAAO,YAAY,YAAY,gBAAgB,CAAC;AACtE,QAAI,KAAA;AACJ,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,OAAA;AACJ,QAAI,KAAA;AAEJ,QAAI,CAAC,KAAK,MAAM,SAAS;AACvB,UAAI,YAAY;AAChB,UAAI,KAAA;AAAA,IACN;AAEA,QAAI,OAAO;AACX,QAAI,eAAe;AAEnB,UAAM,SAAS,KAAK,YAAY,mBAAmB,IAAI,KAAK,IAAI,GAAG,KAAK,OAAO,SAAS,aAAa,CAAC,CAAC;AACvG,QAAI,WAAW,OAAO;AAEtB,SAAK,aAAa,KAAK,MAAM,GAAG,UAAU,WAAW,MAAM;AAE3D,QAAI,QAAA;AAAA,EACN;AAAA,EAEQ,aAAa,KAAU,MAAW,GAAW,MAAc,WAAmB,YAA0B;AAC9G,UAAM,SAAS;AACf,QAAI,OAAO,SAAS;AACpB,UAAM,OAAO,YAAY;AAEzB,UAAM,aAAa;AACnB,UAAM,WAAW,YAAY,cAAc;AAC3C,QAAI,YAAY;AAChB,QAAI,UAAA;AACJ,QAAI,UAAU,MAAM,OAAO,SAAS,YAAY,YAAY,CAAC;AAC7D,QAAI,KAAA;AACJ,QAAI,cAAc,KAAK,MAAM,UAAU,YAAY;AACnD,QAAI,YAAY;AAChB,QAAI,OAAA;AACJ,QAAI,YAAY,KAAK,MAAM,UAAU,YAAY;AACjD,QAAI,YAAY;AAChB,QAAI,OAAO;AACX,QAAI,KAAK,MAAM,SAAS;AACtB,UAAI,SAAS,KAAK,OAAO,aAAa,GAAG,OAAO,IAAI;AAAA,IACtD;AACA,SAAK,SAAS,QAAQ,SAAS,CAAC,MAAM,GAAG,YAAY,UAAU;AAC/D,YAAQ,aAAa;AAErB,UAAM,cAAc,KAAK,eAAe,OAAO,CAACG,OAAWA,cAAa,eAAe,KAAK,CAAA;AAC5F,UAAM,eAAe,YAAY,QAAQ,IAAW;AACpD,UAAM,YAAY,YAAY,SAAS;AACvC,UAAM,iBAAkB,YAAY,SAAS,KAAO,MAAM,YAAY,mBAAmB;AACzF,UAAM,eAAe,MAAM,YAAY,yBAAyB;AAChE,UAAM,aAAa,MAAM,YAAY,qBAAqB;AAE1D,UAAM,YAAY;AAClB,UAAM,gBAAgB;AACtB,UAAM,UAAU;AAChB,UAAM,aAAa;AACnB,UAAM,WAAW;AACjB,UAAM,MAAM;AAEZ,UAAM,YAAY,KAAK,KAAK,CAAC,IAAI;AACjC,QAAI,UAAU;AACd,QAAI,UAAU;AACd,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,YAAY;AAChB,QAAI,YAAY;AAChB,QAAI,aAAa;AACjB,QAAI,gBAAgB;AACpB,QAAI,MAAM;AACV,QAAI,QAAQ;AAEZ,QAAI,YAAY;AACd,iBAAW;AAAY,gBAAU,UAAU;AAAK,iBAAW;AAAA,IAC7D;AACA,QAAI,cAAc;AAEhB,iBAAW;AAAS,cAAQ,UAAU;AAAK,iBAAW;AACtD,iBAAW;AAAe,kBAAY,UAAU;AAAK,iBAAW;AAChE,iBAAW;AAAS,eAAS,UAAU;AAAK,iBAAW;AAEvD,UAAI,MAAM,YAAY,uBAAuB;AAC3C,mBAAW;AAAS,oBAAY,UAAU;AAAK,mBAAW;AAC1D,mBAAW;AAAe,wBAAgB,UAAU;AAAK,mBAAW;AACpE,mBAAW;AAAS,qBAAa,UAAU;AAAK,mBAAW;AAAA,MAC7D;AAAA,IACF;AACA,QAAI,gBAAgB;AAClB,YAAM,gBAAiB,gBAAgB,MAAM,YAAY,wBACrD,KAAK,IAAI,QAAQ,UAAU,IAC3B;AACJ,YAAM,kBAAkB,eAAgB,gBAAgB,MAAQ,aAAc,UAAU,MAAQ,YAAY;AAC5G,YAAM,kBAAkB,YAAY;AACpC,cAAQ,OAAO,YAAY;AAC3B,iBAAW;AAAA,IACb;AAEA,QAAI,MAAM,YAAY,cAAc,MAAM,YAAY,gBAAgB,OAAO;AAC3E,YAAM,WAAW;AACjB,YAAM,QAAQ,OAAO,KAAK,OAAO,YAAY,YAAY,CAAC;AAC1D,UAAI,YAAY,KAAK,MAAM,UAAU,SAAS;AAC9C,UAAI,UAAA;AAAa,UAAI,UAAU,MAAM,OAAO,UAAU,UAAU,CAAC;AAAG,UAAI,KAAA;AACxE,UAAI,cAAc;AAAQ,UAAI,YAAY;AAAG,UAAI,OAAA;AAEjD,UAAI,YAAY;AAChB,UAAI,YAAY;AAChB,UAAI,eAAe;AACnB,UAAI,OAAO;AACX,UAAI,KAAA;AACJ,UAAI,CAAC,KAAK,MAAM,SAAS;AAAE,YAAI,eAAe;AAAA,MAAM;AACpD,UAAI,SAAS,MAAM,OAAO,WAAW,GAAG,OAAO,IAAI;AACnD,UAAI,QAAA;AACJ,WAAK,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,UAAU,UAAU;AACzD,cAAQ,WAAW;AACnB,UAAI,OAAO;AAAA,IACb,OAAO;AACL,WAAK,SAAS,IAAI,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,IACrC;AAEA,UAAM,WAAW;AACjB,UAAM,YAAY;AAAA,MAChB,iBAAiB,QAAQ;AAAA,MACzB,eAAe,SAAS;AAAA,MACvB,gBAAgB,MAAM,YAAY,wBAAyB,aAAa;AAAA,MACzE,aAAa,UAAU;AAAA,IAAA,EACvB,OAAO,CAAA,MAAK,OAAO,MAAM,QAAQ;AACnC,UAAM,gBAAgB,UAAU,SAAS,KAAK,IAAI,GAAG,SAAS,IAAI,aAAa;AAC/E,UAAM,YAAY,KAAK,IAAI,KAAK,eAAe,QAAQ;AAEvD,UAAM,eAAe,CAAC,EAAE,KAAK,cAAc,KAAK,WAAW;AAC3D,UAAM,YAAY,eAAe,KAAK,IAAI,IAAI,KAAK,MAAM,YAAY,GAAG,CAAC,IAAI;AAC7E,UAAM,YAAY,eAAgB,YAAY,YAAa;AAE3D,QAAI,YAAY;AAChB,QAAI,OAAO;AACX,QAAI,YAAY,KAAK,MAAM,UAAU,SAAS;AAC9C,UAAM,WAAW,KAAK,MAAM,SAAS,SAAS,4BAA4B,KAAK,MAAM;AACrF,UAAM,cAAc,KAAK,aAAa,KAAK,UAAU,SAAS;AAC9D,QAAI,SAAS,aAAa,UAAU,OAAO,IAAI;AAC/C,SAAK,SAAS,KAAK,SAAS,CAAC,UAAU,GAAG,WAAW,UAAU;AAE/D,UAAM,gBAAgB,KAAK,MAAM,UAAU,IAAI;AAC/C,QAAI,KAAA;AACJ,QAAI,eAAe;AAEnB,UAAM,cAAc,WAAW;AAC/B,QAAI,gBAAgB,YAAY,GAAG;AACjC,YAAM,aAAa,CAAC,EAAE,KAAK,MAAM,gBAAgB,OAAO,KAAK,MAAM,YAAY,EAAE,KAAA;AACjF,YAAM,QAAQ;AACd,YAAM,QAAQ,OAAO,KAAK,OAAO,YAAY,SAAS,CAAC;AACtD,WAAa,eAAe,EAAE,GAAG,aAAa,GAAG,OAAO,GAAG,WAAW,GAAG,MAAA;AAC1E,UAAI,YAAY;AAChB,UAAI,UAAA;AAAa,UAAI,UAAU,aAAa,OAAO,WAAW,OAAO,CAAC;AAAG,UAAI,KAAA;AAC7E,YAAM,OAAO;AACb,UAAI,YAAY;AAChB,UAAI,OAAO;AACX,UAAI,YAAY;AACd,YAAI,YAAY,KAAK,MAAM,UAAU,SAAS;AAC9C,cAAM,cAAc,KAAK,aAAa,KAAK,OAAO,KAAK,MAAM,YAAY,GAAG,YAAY,OAAO,CAAC;AAChG,YAAI,SAAS,aAAa,cAAc,MAAM,OAAO,IAAI;AAAA,MAC3D,OAAO;AACL,YAAI,YAAY;AAChB,cAAM,cAAc;AACpB,cAAM,YAAY,KAAK,aAAa,KAAK,aAAa,YAAY,OAAO,CAAC;AAC1E,YAAI,SAAS,WAAW,cAAc,MAAM,OAAO,IAAI;AAAA,MACzD;AACA,WAAK,SAAS,aAAa,SAAS,CAAC,aAAa,GAAG,WAAW,UAAU;AAE1E,UAAI;AACJ,cAAM,YAAY;AAClB,cAAM,QAAQ,cAAc,YAAY;AACxC,cAAM,QAAQ,OAAO;AACnB,YAAI,UAAU;AACd,YAAI,QAAQ;AACZ,cAAM,MAAM;AACZ,cAAM,OAAO,CAAC,CAAC,KAAK,MAAM;AAC1B,cAAM,YAAY,CAAC,CAAE,KAAa,OAAO;AACzC,YAAI,OAAO,MAAM;AACf,kBAAQ;AAAA,QACV,WAAW,OAAO,CAAC,MAAM;AACvB,kBAAQ;AAAA,QACV,WAAW,CAAC,OAAO,WAAW;AAC5B,kBAAQ;AAAA,QACV,OAAO;AAEL,kBAAQ;AAAA,QACV;AACF,YAAI,SAAS;AACX,cAAI,KAAA;AAEJ,cAAI,YAAY;AAChB,cAAI,UAAA;AACJ,cAAI,IAAI,OAAO,OAAO,WAAW,GAAG,KAAK,KAAK,CAAC;AAC/C,cAAI,KAAA;AAEJ,gBAAM,MAAO,OAAO,gBAAgB,eAAgB,YAAoB,MAAQ,YAAoB,IAAA,IAAQ,KAAK,IAAA;AACjH,gBAAM,aAAa,CAAC,CAAE,KAAa;AACnC,gBAAM,UAAW,KAAa,mBAAmB;AACjD,gBAAM,YAAa,KAAa,uBAAuB;AACvD,gBAAM,aAAa,cAAc,MAAM;AAGvC,cAAI,YAAY;AACd,gBAAI;AACF,kBAAI,CAAE,KAAa,mBAAmB;AACnC,qBAAa,oBAAoB;AAClC,iBAAC,OAAO,0BAA0B,CAAC,OAAY,WAAW,IAAI,EAAE,IAAI,MAAM;AACvE,uBAAa,oBAAoB;AAClC,sBAAI;AAAE,yBAAK,eAAe,MAAM,KAAK;AAAA,kBAAG,QAAQ;AAAA,kBAAC;AAAA,gBACnD,CAAC;AAAA,cACH;AAAA,YACF,QAAQ;AAAA,YAAC;AAAA,UACX;AAEA,cAAI,YAAY;AAChB,cAAI,OAAO;AACX,cAAI,YAAY;AAChB,cAAI,eAAe;AACnB,cAAI,YAAY;AACd,kBAAM,SAAS,KAAK,IAAI,KAAM,KAAa,sBAAsB,GAAG;AACpE,kBAAM,YAAa,MAAM,aAAa,SAAU;AAChD,kBAAM,QAAQ,WAAW,KAAK,KAAK;AACnC,gBAAI,KAAA;AACJ,gBAAI,UAAU,OAAO,KAAK;AAC1B,gBAAI,OAAO,KAAK;AAChB,gBAAI,SAAS,KAAK,GAAG,CAAC;AACtB,gBAAI,QAAA;AAAA,UACN,OAAO;AACL,gBAAI,SAAS,KAAK,OAAO,KAAK;AAAA,UAChC;AACA,cAAI,QAAA;AAEJ,gBAAM,OAAO,YAAY,IAAI;AAC7B,eAAK,SAAS,QAAQ,SAAS,CAAC,QAAQ,WAAW,GAAG,MAAM,UAAU;AAAA,QACxE;AAAA,MAGA,QAAQ;AAAA,MAAC;AAAA,IACX,OAAO;AACL,WAAK,SAAS,aAAa,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,IACjD;AAEA,QAAI,kBAAkB,MAAM,YAAY,mBAAmB,OAAO;AAChE,YAAM,UAAU,YAAY,aAAa;AACzC,UAAI;AACJ,UAAI;AACJ,UAAI,MAAM,YAAY,YAAY;AAChC,cAAM,gBAAgB,KAAK,iBAAiB,CAAA,GAAI,OAAO,CAACA,OAAWA,cAAa,mBAAmBA,GAAE,OAAO,QAAQ,KAAK,MAAM,GAAG;AAClI,cAAM,aAAa,aAAa,QAAQ,IAAW;AACnD,cAAM,iBAAiB,aAAa,SAAS;AAC7C,sBAAc,eAAe;AAC7B,oBAAY,eAAe;AAAA,MAC7B,OAAO;AACL,sBAAc,iBAAiB;AAC/B,oBAAY,iBAAiB;AAAA,MAC/B;AAEA,UAAI,cAAe,iBAAkB,cAAc,OAAO;AAC1D,UAAI,YAAY;AAAQ,UAAI,UAAA;AAC5B,UAAI,UAAU,OAAO,OAAO,QAAQ,WAAW,WAAW,CAAC;AAC3D,UAAI,KAAA;AACJ,UAAI,YAAY;AAAQ,UAAI,YAAY;AAAU,UAAI,OAAO;AAC7D,UAAI,SAAS,KAAK,QAAQ,YAAY,GAAG,OAAO,IAAI;AACpD,WAAK,SAAS,SAAS,SAAS,cAAc,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,UAAU;AAE7F,UAAI,cAAe,iBAAkB,YAAY,OAAO;AACxD,UAAI,YAAY;AAAQ,UAAI,UAAA;AAC5B,UAAI,UAAU,KAAK,OAAO,QAAQ,WAAW,WAAW,CAAC;AACzD,UAAI,KAAA;AACJ,UAAI,YAAY;AAAQ,UAAI,YAAY;AAAU,UAAI,OAAO;AAC7D,UAAI,SAAS,KAAK,MAAM,YAAY,GAAG,OAAO,IAAI;AAClD,WAAK,SAAS,OAAO,SAAS,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,UAAU;AAEvF,UAAI,cAAc;AAAA,IACpB,OAAO;AACL,WAAK,SAAS,OAAO,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;AACzC,WAAK,SAAS,SAAS,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7C;AAEA,UAAM,QAAQ,YAAY,WAAW;AACrC,QAAI,cAAc;AAChB,UAAI,YAAY;AAAQ,UAAI,UAAA;AAC5B,UAAI,UAAU,QAAQ,OAAO,MAAM,SAAS,SAAS,CAAC;AACtD,UAAI,KAAA;AACJ,UAAI,YAAY;AAAQ,UAAI,YAAY;AAAU,UAAI,OAAO;AAC7D,UAAI,SAAS,KAAK,SAAS,UAAU,GAAG,OAAO,IAAI;AACnD,WAAK,SAAS,aAAa,SAAS,CAAC,QAAQ,GAAG,SAAS,UAAU;AAAA,IACrE,OAAO;AACL,WAAK,SAAS,aAAa,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,IAC9C;AAEA,QAAI,MAAM,YAAY,yBAAyB,OAAO;AACpD,YAAM,aAAa,YAAY,MAAM;AAErC,UAAI,YAAY,KAAK,MAAM,UAAU,YAAY;AAAW,UAAI,UAAA;AAChE,UAAI,UAAU,WAAW,OAAO,WAAW,eAAe,IAAI,CAAC;AAC/D,UAAI,KAAA;AACJ,UAAI,cAAc;AAAW,UAAI,YAAY;AAAG,UAAI,OAAA;AACpD,UAAI,YAAY,KAAK,MAAM,UAAU,YAAY;AAAW,UAAI,YAAY;AAAU,UAAI,OAAO;AACjG,UAAI,SAAS,KAAK,MAAM,SAAS,QAAQ,CAAC,GAAG,YAAY,gBAAgB,GAAG,OAAO,IAAI;AACvF,WAAK,SAAS,SAAS,SAAS,CAAC,WAAW,GAAG,eAAe,UAAU;AAAA,IAC1E,OAAO;AACL,WAAK,SAAS,SAAS,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,IAC1C;AAEA,QAAI,MAAM,YAAY,yBAAyB,OAAO;AACpD,UAAI,YAAY;AAAQ,UAAI,UAAA;AAC5B,UAAI,UAAU,OAAO,OAAO,MAAM,SAAS,SAAS,CAAC;AACrD,UAAI,KAAA;AACJ,UAAI,YAAY;AAAQ,UAAI,YAAY;AAAU,UAAI,OAAO;AAC7D,UAAI,SAAS,KAAK,QAAQ,UAAU,GAAG,OAAO,IAAI;AAClD,WAAK,SAAS,WAAW,SAAS,CAAC,OAAO,GAAG,SAAS,UAAU;AAAA,IAClE,OAAO;AACL,WAAK,SAAS,WAAW,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,IAC5C;AAGA,QAAI,gBAAgB,MAAM,YAAY,uBAAuB;AAE3D,UAAI,YAAY;AAAQ,UAAI,UAAA;AAC5B,UAAI,UAAU,YAAY,OAAO,MAAM,SAAS,SAAS,CAAC;AAC1D,UAAI,KAAA;AACJ,UAAI,YAAY;AAAQ,UAAI,YAAY;AAAU,UAAI,OAAO;AAC7D,UAAI,SAAS,KAAK,aAAa,UAAU,GAAG,OAAO,IAAI;AACvD,WAAK,SAAS,iBAAiB,SAAS,CAAC,YAAY,GAAG,SAAS,UAAU;AAG3E,YAAM,cAAc,YAAY,MAAM;AAEtC,UAAI,YAAY,KAAK,MAAM,UAAU,YAAY;AAAW,UAAI,UAAA;AAChE,UAAI,UAAU,eAAe,OAAO,YAAY,eAAe,IAAI,CAAC;AACpE,UAAI,KAAA;AACJ,UAAI,cAAc;AAAW,UAAI,YAAY;AAAG,UAAI,OAAA;AACpD,UAAI,YAAY,KAAK,MAAM,UAAU,YAAY;AAAW,UAAI,YAAY;AAAU,UAAI,OAAO;AACjG,UAAI,SAAS,KAAK,MAAM,aAAa,QAAQ,CAAC,GAAG,gBAAgB,gBAAgB,GAAG,OAAO,IAAI;AAC/F,WAAK,SAAS,aAAa,SAAS,CAAC,eAAe,GAAG,eAAe,UAAU;AAGhF,UAAI,YAAY;AAAQ,UAAI,UAAA;AAC5B,UAAI,UAAU,WAAW,OAAO,MAAM,SAAS,SAAS,CAAC;AACzD,UAAI,KAAA;AACJ,UAAI,YAAY;AAAQ,UAAI,YAAY;AAAU,UAAI,OAAO;AAC7D,UAAI,SAAS,KAAK,YAAY,UAAU,GAAG,OAAO,IAAI;AACtD,WAAK,SAAS,eAAe,SAAS,CAAC,WAAW,GAAG,SAAS,UAAU;AAAA,IAC1E,OAAO;AACL,WAAK,SAAS,iBAAiB,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAChD,WAAK,SAAS,aAAa,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAC5C,WAAK,SAAS,eAAe,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,IAChD;AAEA,QAAI,QAAA;AAEJ,QAAI,MAAM,YAAY,qBAAqB,OAAO;AAChD,YAAM,WAAW,YAAY,cAAc;AAC3C,UAAI,YAAY;AAAW,UAAI,UAAA;AAC/B,UAAI,UAAU,SAAS,OAAO,SAAS,YAAY,YAAY,CAAC;AAChE,UAAI,KAAA;AACJ,UAAI,cAAc;AAAW,UAAI,YAAY;AAAG,UAAI,OAAA;AACpD,UAAI,YAAY;AAAQ,UAAI,YAAY;AAAU,UAAI,OAAO;AAC7D,UAAI,SAAS,MAAM,UAAU,aAAa,GAAG,OAAO,IAAI;AACxD,WAAK,SAAS,OAAO,SAAS,CAAC,SAAS,GAAG,YAAY,UAAU;AAAA,IACnE,OAAO;AACL,WAAK,SAAS,OAAO,SAAS,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,IACxC;AAAA,EACF;AAAA,EAEO,iBAAiB,MAAoB;AAC1C,QAAI,CAAC,KAAK,cAAe,QAAO;AAChC,UAAM,YAAY,KAAK,cAAc,KAAK,CAAC,MAAW,aAAa,sBAAsB,EAAE,QAAQ,KAAK,MAAM,GAAG;AACjH,WAAO,WAAW,mBAAmB;AAAA,EACvC;AAAA,EAEQ,aAAa,KAAU,MAAc,UAA0B;AACrE,UAAM,UAAU,IAAI,YAAY,IAAI;AACpC,QAAI,QAAQ,SAAS,SAAU,QAAO;AACtC,QAAI,YAAY;AAChB,WAAO,IAAI,YAAY,YAAY,KAAK,EAAE,QAAQ,YAAY,UAAU,SAAS,GAAG;AAClF,kBAAY,UAAU,MAAM,GAAG,EAAE;AAAA,IACnC;AACA,WAAO,YAAY;AAAA,EACrB;AAAA,EA2NA,cAAgC;AAC9B,WAAO,CAAC,KAAK,EAAE;AAAA,EACjB;AAAA,EAEA,QAAQ,MAAc,MAAkB;AACtC,SAAK,MAAM,OAAO;AAElB,SAAK,MAAM,eAAe;AAC1B,SAAK,MAAM,cAAc;AACxB,SAAa,QAAQ,EAAE,GAAG,KAAK,OAAO,gBAAgB,MAAA;AACvD,QAAI,SAAS,QAAQ;AAEnB,UAAI;AACF,cAAM,SAAS,iBAAiB,IAAI,IAAI;AACxC,YAAI,QAAQ;AACV,eAAK,MAAM,eAAe;AAC1B,eAAK,MAAM,cAAc;AACzB;AAAA,QACF;AAAA,MACF,QAAQ;AAAA,MAAC;AAET,UAAI,QAAQ,MAAM,YAAY,0BAA0B,OAAO;AAC7D,aAAK,kBAAA;AAAA,MACP;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAc,oBAAmC;AAC/C,QAAI;AACD,WAAa,MAAM,iBAAiB;AAErC,UAAI;AACF,cAAM,SAAS,iBAAiB,IAAI,KAAK,MAAM,IAAI;AACnD,YAAI,QAAQ;AACV,eAAK,MAAM,eAAe;AAC1B,eAAK,MAAM,cAAc;AACzB;AAAA,QACF;AAAA,MACF,QAAQ;AAAA,MAAC;AAET,YAAM,QAAQ,MAAM,UAAU,eAAe,gBAAgB,KAAK,MAAM,IAAI;AAC5E,UAAI,MAAM,SAAS,GAAG;AACpB,aAAK,MAAM,eAAe,MAAM,KAAK,IAAI;AACzC,aAAK,MAAM,cAAc;AACzB,YAAI;AAAE,2BAAiB,IAAI,KAAK,MAAM,MAAM,KAAK,MAAM,YAAY;AAAA,QAAG,QAAQ;AAAA,QAAC;AAAA,MACjF,OAAO;AAEJ,aAAa,QAAQ,EAAE,GAAG,KAAK,OAAO,gBAAgB,KAAA;AAAA,MACzD;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,KAAK,kCAAkC,KAAK;AAAA,IACtD;AAAA,EACF;AACF;AC9rBO,MAAM,8BAA8B,oBAAoB;AAAA,EAC7D,cAAc;AACZ,UAAM,uBAAuB;AA6P/B,SAAA,kBAAkB,CAAC,QAAa,MAAW,SAAuB;AAChE,YAAM,WAAW,KAAK,iBAAiB,IAAI;AAC3C,UAAI,CAAC,KAAK,cAAe,QAAO;AAChC,YAAM,cAAc,KAAK,cAAc,OAAO,CAAC,MAAW,aAAa,eAAe;AACtF,kBAAY,QAAQ,CAAC,MAAW,EAAE,MAAM,UAAU,CAAC,QAAQ;AAC3D,WAAK,eAAe,MAAM,IAAI;AAC9B,aAAO;AAAA,IACT;AAEA,SAAA,gBAAgB,CAAC,OAAY,MAAW,SAAuB;AAC7D,gBAAU,iBAAiB,MAAM,QAAW,KAAK;AACjD,aAAO;AAAA,IACT;AAEA,SAAA,qBAAqB,CAAC,QAAa,MAAW,SAAuB;AACnE,gBAAU,gBAAgB;AAAA,QACxB,OAAO;AAAA,QACP,aAAa;AAAA,QACb,SAAS;AAAA,QACT,aAAa;AAAA,QACb,UAAU,OAAO,iBAAyB;AACxC,gBAAM,QAAQ,gBAAgB,IAAI,KAAA;AAClC,cAAI,CAAC,MAAM;AACT,sBAAU,UAAU,gCAAgC,SAAS;AAC7D;AAAA,UACF;AACA,gBAAM,UAAU,UAAU,eAAe,IAAI;AAC7C,gBAAM,eAAe,QAAQ,OAAO,CAAC,WAAgB,OAAO,QAAQ,OAAO,SAAS,MAAM;AAC1F,cAAI,aAAa,WAAW,GAAG;AAC7B,sBAAU,UAAU,yCAAyC,SAAS;AACtE;AAAA,UACF;AACA,cAAI;AACF,kBAAM,SAAS,MAAM,UAAU,gBAAgB,eAAe,IAAc;AAC5E,gBAAI,QAAQ;AACV,wBAAU,UAAU,gBAAgB,IAAI,8CAA8C,SAAS;AAC/F;AAAA,YACF;AACA,kBAAM,UAAU,MAAM,UAAU,gBAAgB,aAAa,MAAgB,YAAY;AACzF,sBAAU,UAAU,UAAU,eAAe,IAAI,0BAA0B,gDAAgD,UAAU,YAAY,OAAO;AAAA,UAC1J,SAAS,OAAO;AACd,oBAAQ,MAAM,wBAAwB,KAAK;AAC3C,sBAAU,UAAU,uDAAuD,OAAO;AAAA,UACpF;AAAA,QACF;AAAA,MAAA,CACD;AACD,aAAO;AAAA,IACT;AAEA,SAAA,qBAAqB,CAAC,OAAY,MAAW,SAAuB;AAClE,gBAAU,uBAAuB,MAAM,KAAK;AAC5C,aAAO;AAAA,IACT;AAEA,SAAA,iBAAiB,CAAC,OAAY,MAAW,SAAuB;AAC9D,gBAAU,mBAAmB,MAAM,KAAK;AACxC,aAAO;AAAA,IACT;AArTE,SAAK,QAAQ,EAAE,MAAM,wBAAA;AACrB,SAAK,WAAW;AAAA,MACd,WAAW,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,gBAAA;AAAA,MAC1C,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,cAAA;AAAA,MACxC,cAAc,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,mBAAA;AAAA,MAC7C,cAAc,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,mBAAA;AAAA,MAC7C,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,KAAK,eAAA;AAAA,IAAe;AAAA,EAE5D;AAAA,EAEA,KAAK,KAAU,MAAW,GAAW,MAAc,QAAsB;AACzE,UAAM,SAAS;AACf,UAAM,eAAe;AACrB,UAAM,gBAAgB;AACtB,QAAI,OAAO;AAET,QAAI,KAAA;AACN,QAAI,UAAA;AACJ,QAAI,KAAK,GAAG,MAAM,GAAG,MAAM;AAC3B,QAAI,KAAA;AAEJ,UAAM,iBAAiB,IAAI,qBAAqB,GAAG,MAAM,GAAG,OAAO,MAAM;AACzE,mBAAe,aAAa,GAAG,SAAS;AACxC,mBAAe,aAAa,GAAG,SAAS;AACxC,QAAI,YAAY;AACd,QAAI,SAAS,GAAG,MAAM,GAAG,MAAM;AACjC,QAAI,cAAc;AAChB,QAAI,YAAY;AAChB,QAAI,UAAA;AACJ,QAAI,OAAO,GAAG,OAAO,GAAG;AACxB,QAAI,OAAO,GAAG,OAAO,GAAG;AACxB,QAAI,OAAO,GAAG,OAAO,SAAS,GAAG;AACjC,QAAI,OAAO,GAAG,OAAO,SAAS,GAAG;AACjC,QAAI,OAAA;AAEJ,UAAM,OAAO,OAAO,SAAS;AAC7B,QAAI,OAAO;AACX,QAAI,eAAe;AAgBnB,UAAM,eAA6D;AAAA,MACjE,SAAS;AAAA,QACP,UAAU,CAAC,WAAW,SAAS;AAAA,QAC/B,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,QACb,QAAQ,EAAE,OAAO,4BAA4B,MAAM,IAAI,SAAS,EAAA;AAAA,QAChE,MAAM;AAAA,QACN,UAAU;AAAA,MAAA;AAAA,MAEZ,WAAW;AAAA,QACT,UAAU,CAAC,WAAW,SAAS;AAAA,QAC/B,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MAAA;AAAA,IACZ;AAKF,UAAM,aAAyD;AAAA,MAC7D,SAAS,EAAE,MAAM,KAAK,OAAO,IAAI,MAAM,GAAA;AAAA,MACvC,SAAS,EAAE,MAAM,KAAK,OAAO,IAAI,MAAM,GAAA;AAAA,IAAG;AAG5C,UAAM,aAAa,CACjB,GACA,OACA,OACA,OACA,SACG;AACH,YAAM,UAAU,QAAQ,SAAS,gBAAgB;AACjD,UAAI,KAAA;AACJ,YAAM,WAAW,IAAI,qBAAqB,GAAG,SAAS,GAAG,UAAU,YAAY;AAC/E,eAAS,aAAa,GAAG,MAAM,SAAS,CAAC,CAAC;AAC1C,eAAS,aAAa,GAAG,MAAM,SAAS,CAAC,CAAC;AAE1C,UAAI,UAAA;AACJ,UAAI,MAAM,QAAQ;AAChB,YAAI,cAAc,MAAM,OAAO;AAC/B,YAAI,aAAa,MAAM,OAAO;AAC9B,YAAI,gBAAgB,MAAM,OAAO,WAAW;AAAA,MAC9C;AACA,UAAI,YAAY;AAChB,UAAI,UAAU,GAAG,SAAS,OAAO,cAAc,CAAC;AAChD,UAAI,KAAA;AAEJ,UAAI,cAAc;AAClB,UAAI,aAAa;AACjB,UAAI,gBAAgB;AAEpB,UAAI,YAAY;AAChB,UAAI,cAAc,MAAM;AACxB,UAAI,OAAA;AAEJ,UAAI,MAAM,aAAa;AACrB,YAAI,UAAA;AACJ,cAAM,QAAQ;AACd,YAAI,UAAU,IAAI,OAAO,UAAU,OAAO,QAAQ,QAAQ,GAAG,eAAe,QAAQ,GAAG,CAAC;AACxF,YAAI,cAAc,MAAM;AACxB,YAAI,YAAY;AAChB,YAAI,OAAA;AAAA,MACN;AAEA,UAAI,YAAY,MAAM;AACtB,UAAI,YAAY;AAChB,YAAM,OAAO,SAAS,SAAS,MAAM,YAAY,2CAA2C,MAAM,QAAQ;AAC1G,UAAI,OAAO;AACX,YAAM,iBAAiB,SAAS,SAAS,OAAO;AAChD,UAAI,SAAS,OAAO,IAAI,QAAQ,GAAG,OAAO,cAAc;AACxD,UAAI,QAAA;AAAA,IACN;AAEA,UAAM,iBAAiB,IAAK,SAAS;AACrC,UAAM,aAAa,KAAK,iBAAiB,IAAI;AAC7C,UAAM,aAAa,aAAa,gBAAgB;AAChD,UAAM,cAAc,aAAa,YAAY;AAC7C,UAAM,UAAU;AAAA,MACd,EAAE,IAAI,WAAW,MAAM,YAAY,WAAW,OAAO,MAAM,KAAK,OAAO,aAAa,SAAS,aAAa,QAAsB,aAAa,KAAA;AAAA,MAC7I,EAAE,IAAI,aAAa,MAAM,YAAY,WAAW,aAAa,MAAM,MAAM,OAAO,aAAa,WAAW,aAAa,OAAA;AAAA,MACrH,EAAE,IAAI,gBAAgB,MAAM,YAAY,WAAW,QAAQ,MAAM,MAAM,OAAO,aAAa,WAAW,aAAa,OAAA;AAAA,MACnH,EAAE,IAAI,gBAAgB,MAAM,YAAY,WAAW,QAAQ,MAAM,MAAM,OAAO,aAAa,WAAW,aAAa,OAAA;AAAA,MACnH,EAAE,IAAI,YAAY,MAAM,YAAY,WAAW,OAAO,MAAM,MAAM,OAAO,aAAa,WAAW,aAAa,OAAA;AAAA,IAAqB;AAGrI,UAAM,eAAe,iBAAiB,QAAQ,SAAS;AAEvD,UAAM,eAAe,CAAC,IAAY,SAAqB;AACrD,YAAM,SAAS,WAAW,EAA6B,KAAK,WAAW;AACvE,aAAO,OAAO,IAAI;AAAA,IACpB;AAEA,UAAM,oBAAoB,CAACC,WAAwB;AACjD,aAAOA,OAAM,OAAO,CAAC,KAAK,MAAM,QAAQ;AACtC,cAAM,MAAM,QAAQ,GAAG;AACvB,eAAO,MAAM,aAAa,IAAI,IAAI,IAAI;AAAA,MACxC,GAAG,CAAC;AAAA,IACN;AAEA,UAAM,QAAsB,QAAQ,IAAI,CAAC,QAAQ,IAAI,WAAW;AAEhE,UAAM,eAA0E;AAAA,MAC9E,EAAE,SAAS,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,QAAQ,IAAI,QAAA;AAAA,MACxC,EAAE,SAAS,CAAC,CAAC,GAAG,MAAM,QAAQ,IAAI,QAAA;AAAA,MAClC,EAAE,SAAS,CAAC,CAAC,GAAG,MAAM,QAAQ,IAAI,QAAA;AAAA,MAClC,EAAE,SAAS,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,SAAS,IAAI,OAAA;AAAA,MACzC,EAAE,SAAS,CAAC,CAAC,GAAG,MAAM,SAAS,IAAI,OAAA;AAAA,MACnC,EAAE,SAAS,CAAC,CAAC,GAAG,MAAM,SAAS,IAAI,OAAA;AAAA,IAAO;AAG5C,QAAI,aAAa,kBAAkB,KAAK;AACxC,UAAM,sBAAsB,KAAK,IAAI,IAAI,iBAAiB,YAAY;AAEtE,QAAI,YAAY;AAChB,WAAO,aAAa,uBAAuB,YAAY,aAAa,QAAQ;AAC1E,YAAM,OAAO,aAAa,SAAS;AACnC,UAAI,UAAU;AACd,iBAAW,SAAS,KAAK,SAAS;AAChC,YAAI,MAAM,KAAK,MAAM,KAAK,MAAM;AAC9B,gBAAM,KAAK,IAAI,KAAK;AACpB,oBAAU;AAAA,QACZ;AAAA,MACF;AACA,UAAI,SAAS;AACX,qBAAa,kBAAkB,KAAK;AAAA,MACtC,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAEA,QAAI,aAAa,qBAAqB;AACpC,YAAM,QAAQ,sBAAsB;AACpC,YAAM,YAAY,QAAQ,IAAI,CAAC,QAAQ,aAAa,IAAI,IAAI,MAAM,CAAC;AACnE,mBAAa;AACb,YAAM,eAAe,QAAQ,IAAI,CAAC,KAAK,QAAQ;AAC7C,cAAM,WAAW,aAAa,IAAI,IAAI,MAAM,GAAG,CAAC,IAAI;AACpD,cAAM,UAAU,KAAK,IAAI,UAAU,GAAG,GAAG,QAAQ;AACjD,sBAAc;AACd,eAAO;AAAA,MACT,CAAC;AACD,YAAM,OAAO,aAAa;AAC1B,UAAI,OAAO,KAAK;AACd,YAAI,gBAAgB;AACpB,iBAAS,IAAI,aAAa,SAAS,GAAG,KAAK,KAAK,gBAAgB,KAAK,KAAK;AACxE,gBAAM,WAAW,UAAU,CAAC;AAC5B,gBAAM,YAAY,aAAa,CAAC,IAAI;AACpC,cAAI,YAAY,GAAG;AACjB,kBAAM,QAAQ,KAAK,IAAI,WAAW,aAAa;AAC/C,yBAAa,CAAC,KAAK;AACnB,6BAAiB;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAEA,cAAQ,QAAQ,CAAC,KAAK,QAAQ;AAC5B,cAAM,WAAW,aAAa,GAAG;AACjC,cAAM,OAAO,MAAM,GAAG;AACtB,YAAI;AACJ,YAAI,SAAS,QAAQ;AACnB,kBAAQ,IAAI;AAAA,QACd,WAAW,SAAS,SAAS;AAC3B,kBAAQ,IAAI,eAAe,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,SAAS,KAAK,IAAI;AAAA,QAC7E,OAAO;AACL,kBAAQ,IAAI,eAAe,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI;AAAA,QACxE;AACA,mBAAW,MAAM,UAAU,IAAI,OAAO,OAAO,IAAI;AACjD,aAAK,SAAS,IAAI,EAAE,EAAE,SAAS,CAAC,MAAM,GAAG,UAAU,MAAM;AACzD,gBAAQ,WAAW;AAAA,MACrB,CAAC;AAAA,IACH,OAAO;AACL,cAAQ,QAAQ,CAAC,KAAK,QAAQ;AAC5B,cAAM,OAAO,MAAM,GAAG;AACtB,cAAM,WAAW,aAAa,IAAI,IAAI,IAAI;AAC1C,YAAI;AACJ,YAAI,SAAS,QAAQ;AACnB,kBAAQ,IAAI;AAAA,QACd,WAAW,SAAS,SAAS;AAC3B,kBAAQ,IAAI,eAAe,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,SAAS,KAAK,IAAI;AAAA,QAC7E,OAAO;AACL,kBAAQ,IAAI,eAAe,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI;AAAA,QACxE;AACA,mBAAW,MAAM,UAAU,IAAI,OAAO,OAAO,IAAI;AACjD,aAAK,SAAS,IAAI,EAAE,EAAE,SAAS,CAAC,MAAM,GAAG,UAAU,MAAM;AACzD,gBAAQ,WAAW;AAAA,MACrB,CAAC;AAAA,IACH;AAEA,QAAI,QAAA;AAAA,EACN;AAAA,EAEQ,iBAAiB,MAAoB;AAC3C,QAAI,CAAC,KAAK,cAAe,QAAO;AAChC,UAAM,cAAc,KAAK,cAAc,OAAO,CAAC,MAAW,aAAa,eAAe;AACtF,WAAO,YAAY,SAAS,KAAK,YAAY,MAAM,CAAC,MAAW,EAAE,MAAM,OAAO;AAAA,EAChF;AAAA,EA6DA,cAAgC;AAC9B,WAAO,CAAC,KAAK,EAAE;AAAA,EACjB;AACF;AC7SA,MAAM,MAAY,OAAe;AAGjC,MAAM,YAAa,OAAe;AAI3B,MAAM,iBAAN,MAAM,eAAc;AAAA,EAUzB,aAAa,aAA4B;AACvC,QAAI,KAAK,aAAa;AACpB;AAAA,IACF;AAEA,QAAI,KAAK,uBAAuB;AAC9B,aAAO,KAAK;AAAA,IACd;AAEA,SAAK,yBAAyB,YAAY;AACxC,WAAK,cAAc,YAAY,YAAA;AAC/B,WAAK,kBAAkB,gBAAgB,YAAA;AACvC,WAAK,iBAAiB,eAAe,YAAA;AACzC,WAAK,gBAAgB,cAAc,YAAA;AACnC,wBAAkB,YAAA;AAGd,mBAAa;AAAA,QACX,kBAAkB,CAAC,MAAW,QAAc,MAAY,eAAc,iBAAiB,MAAM,QAAQ,CAAC;AAAA,QACtG,iBAAiB,CAAC,MAAW,WAAgB,eAAc,gBAAgB,MAAM,MAAM;AAAA,QACvF,oBAAoB,CAAC,MAAW,MAAY,eAAc,mBAAmB,MAAM,CAAC;AAAA,QACpF,wBAAwB,CAAC,MAAW,MAAY,eAAc,uBAAuB,MAAM,CAAC;AAAA,QAC5F,iBAAiB,CAAC,SAAc,eAAc,gBAAgB,IAAI;AAAA,QAClE,gBAAgB,CAAC,GAAQ,SAAiB,UAA+B,UAAgB,eAAc,eAAe,GAAG,SAAS,UAAU,KAAK;AAAA,QACjJ,WAAW,CAAC,GAAW,MAAY,eAAc,UAAU,GAAG,CAAC;AAAA,QAC/D,mBAAmB,CAAC,SAAc,eAAc,kBAAkB,IAAI;AAAA,QACtE,gBAAgB,CAAC,SAAc,eAAc,eAAe,IAAI;AAAA,QAChE,eAAe,CAAC,MAAW,WAAiB,eAAc,cAAc,MAAM,MAAM;AAAA,QACpF,kBAAkB,CAAC,MAAW,WAAgB,eAAc,iBAAiB,MAAM,MAAM;AAAA,QACzF,gBAAgB,CAAC,SAAc,eAAc,eAAe,IAAI;AAAA,QAChE,iBAAiB,eAAc;AAAA,QAC/B,gBAAgB,eAAc;AAAA,QAC9B,sBAAsB,CAAC,SAAc,eAAc,qBAAqB,IAAI;AAAA,MAAA,CAC7E;AAED,YAAM,QAAQ,IAAI;AAAA,QAChB,KAAK,YAAY,WAAA;AAAA,QACjB,KAAK,gBAAgB,WAAA;AAAA,QACrB,KAAK,cAAc,WAAA;AAAA,MAAW,CAC/B;AAED,UAAI;AACD,eAAe,2BAA2B,KAAK,cAAc,UAAA;AAAA,MAChE,QAAQ;AAAA,MAAC;AAET,WAAK,cAAc;AAAA,IACrB,GAAA;AAEA,QAAI;AACF,YAAM,KAAK;AAAA,IACb,UAAA;AACE,WAAK,wBAAwB;AAAA,IAC/B;AAAA,EACF;AAAA,EAEA,OAAe,eAAe,MAAoB;AAChD,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AACA,UAAM,QAAQ,KAAK,SAAS,CAAA;AAC5B,QAAI,MAAM,UAAU,MAAM,YAAY,MAAM,mBAAmB,MAAM,gBAAgB;AACnF,aAAO;AAAA,IACT;AACA,QAAI,KAAK,eAAe,KAAK,WAAW,WAAW,QAAQ,KAAK,WAAW,SAAS,OAAO;AACzF,aAAO;AAAA,IACT;AACA,QAAI;AACF,UAAI,OAAO,cAAc,eAAe,aAAa,OAAO,UAAU,UAAU,UAAU;AACxF,YAAI,KAAK,SAAS,UAAU,OAAO;AACjC,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF,QAAQ;AAAA,IAAC;AACT,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,MAAM,UAAe,WAAsB;AAChD,UAAM,sBAAsB,SAAS,UAAU;AAE/C,aAAS,UAAU,gBAAgB,WAAW;AAC5C,UAAI,qBAAqB;AACvB,4BAAoB,MAAM,MAAM,SAAS;AAAA,MAC3C;AAEA,qBAAc,kBAAkB,IAAI;AAEpC,UAAI;AACF,aAAK,WAAW,KAAK,WAAW,IAAI,OAAO,CAAC,MAAW;AACrD,gBAAM,KAAK,GAAG,QAAQ;AACtB,iBAAO,EAAE,OAAO,iBAAiB,GAAG,WAAW,OAAO;AAAA,QACxD,CAAC;AAAA,MACH,QAAQ;AAAA,MAAC;AAAA,IACX;AAGA,UAAM,2BAA2B,SAAS,UAAU;AACpD,aAAS,UAAU,mBAAmB,SAAS,KAAU;AACvD,UAAI,0BAA0B;AAC5B,iCAAyB,KAAK,MAAM,GAAG;AAAA,MACzC;AACA,qBAAc,kBAAkB,MAAM,GAAG;AAAA,IAC3C;AAEA,UAAM,sBAAsB,SAAS,UAAU;AAC/C,aAAS,UAAU,cAAc,SAAS,OAAY,KAAU;AAC9D,UAAI,eAAc,gBAAgB,MAAM,OAAO,GAAG,GAAG;AACnD,eAAO;AAAA,MACT;AACA,aAAO,sBAAsB,oBAAoB,KAAK,MAAM,OAAO,GAAG,IAAI;AAAA,IAC5E;AAEA,UAAM,oBAAoB,SAAS,UAAU;AAC7C,aAAS,UAAU,YAAY,SAAS,OAAY,KAAU;AAC5D,UAAI,eAAc,cAAc,MAAM,OAAO,GAAG,GAAG;AACjD,eAAO;AAAA,MACT;AACA,aAAO,oBAAoB,kBAAkB,KAAK,MAAM,OAAO,GAAG,IAAI;AAAA,IACxE;AAEA,UAAM,mBAAmB,SAAS,UAAU;AAC5C,aAAS,UAAU,WAAW,SAAS,SAAc,MAAa;AAChE,YAAM,YAAY,eAAc,qBAAqB,IAAI;AAEzD,UAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAK,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,SAAS;AAAA,MACvC,WAAW,QAAQ,OAAO,SAAS,UAAU;AAC3C,YAAI,OAAO,KAAK,CAAC,MAAM,UAAU;AAC/B,eAAK,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,SAAS;AAAA,QACvC;AACA,YAAI,OAAO,KAAK,MAAM,UAAU;AAC9B,eAAK,IAAI,KAAK,IAAI,KAAK,GAAG,SAAS;AAAA,QACrC;AAAA,MACF;AAEA,UAAI,KAAK,MAAM;AACb,aAAK,KAAK,CAAC,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,SAAS;AAAA,MACjD;AAEA,UAAI,kBAAkB;AACpB,eAAO,iBAAiB,MAAM,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AAAA,MACrD;AACA,aAAO;AAAA,IACT;AAGA,UAAM,oBAAoB,SAAS,UAAU;AAC7C,aAAS,UAAU,YAAY,WAAW;AAExC,YAAM,OAAO,kBAAkB,MAAM,MAAM,SAAS;AAGpD,UAAI;AAEF,cAAM,cAAc,eAAc,YAAY,IAAI;AAClD,YAAI,UAAU,KAAK,WAAW,CAAA,GAAI,KAAK,CAAC,MAAW,GAAG,SAAS,aAAa;AAC5E,YAAI,CAAC,QAAQ;AAEX,mBAAS,KAAK,UAAU,QAAQ,eAAe,aAAa,MAAM;AAAA,UAAC,GAAG,CAAA,CAAE;AAAA,QAC1E;AAEA,eAAO,OAAO;AACd,eAAO,SAAS;AAChB,eAAO,OAAO,MAAM;AAAA,QAAC;AACrB,eAAO,cAAc,MAAM,CAAC,GAAG,CAAC;AAChC,eAAO,QAAQ;AACf,eAAO,iBAAiB,MAAM;AAE9B,aAAK,SAAS,KAAK,UAAU,CAAA;AAC7B,aAAK,OAAO,cAAc;AAAA,MAC5B,QAAQ;AAAA,MAAC;AAGT,WAAK,gBAAgB,eAAc,uBAAuB,IAAI;AAE9D,aAAO;AAAA,IACT;AAGA,UAAM,oBAAoB,SAAS,UAAU;AAC7C,aAAS,UAAU,YAAY,SAAS,MAAW;AACjD,UAAI,mBAAmB;AACrB,0BAAkB,KAAK,MAAM,IAAI;AAAA,MACnC;AACA,UAAI,KAAK,eAAe;AACtB,uBAAc,yBAAyB,MAAM,KAAK,aAAa;AAAA,MACjE,OAAO;AAEL,uBAAc,kBAAkB,IAAI;AAAA,MACtC;AAEA,UAAI;AACF,aAAK,WAAW,KAAK,WAAW,IAAI,OAAO,CAAC,MAAW;AACrD,gBAAM,KAAK,GAAG,QAAQ;AACtB,iBAAO,EAAE,GAAG,WAAW,OAAO,KAAK,OAAO;AAAA,QAC5C,CAAC;AAAA,MACH,QAAQ;AAAA,MAAC;AAET,qBAAc,qBAAqB,IAAI;AAAA,IACzC;AAGA,UAAM,8BAA8B,SAAS,UAAU;AACvD,aAAS,UAAU,sBAAsB,SAAS,SAAc,YAAoB;AAClF,UAAI;AACF,YAAI,UAAU,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAA;AACvD,YAAI,6BAA6B;AAC/B,gBAAM,QAAQ,4BAA4B,KAAK,MAAM,SAAS,OAAO;AACrE,cAAI,MAAM,QAAQ,KAAK,EAAG,WAAU;AAAA,QACtC;AAEA,cAAM,aAAa,QAAQ,KAAK,CAAC,QAAa,OAAO,IAAI,YAAY,cAAc;AACnF,cAAM,cAAc,QAAQ,KAAK,CAAC,QAAa,OAAO,IAAI,YAAY,aAAa;AAEnF,YAAI,CAAC,cAAc,CAAC,aAAa;AAC/B,cAAI,QAAQ,WAAW,KAAK,QAAQ,QAAQ,SAAS,CAAC,MAAM,MAAM;AAChE,oBAAQ,KAAK,IAAI;AAAA,UACnB;AACA,cAAI,CAAC,YAAY;AACf,oBAAQ,KAAK,EAAE,SAAS,gBAAgB,UAAU,CAAC,WAAgB,eAAc,iBAAiB,MAAM,QAAW,MAAS,GAAG;AAAA,UACjI;AACA,cAAI,CAAC,aAAa;AAChB,oBAAQ,KAAK,EAAE,SAAS,eAAe,UAAU,CAAC,WAAgB,eAAc,mBAAmB,IAAI,EAAA,CAAG;AAAA,UAC5G;AAAA,QACF;AAEA,eAAO;AAAA,MACT,QAAQ;AACN,cAAM,OAAc,cAAc,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAA;AAC3E,cAAM,kBAAkB,MAAM;AAC5B,cAAI,KAAK,WAAW,KAAK,KAAK,KAAK,SAAS,CAAC,MAAM,MAAM;AACvD,iBAAK,KAAK,IAAI;AAAA,UAChB;AAAA,QACF;AACA,YAAI,CAAC,KAAK,KAAK,CAAC,QAAa,OAAO,IAAI,YAAY,cAAc,GAAG;AACnE,0BAAA;AACA,eAAK,KAAK,EAAE,SAAS,gBAAgB,UAAU,CAAC,WAAgB,eAAc,iBAAiB,MAAM,QAAW,MAAS,GAAG;AAAA,QAC9H;AACA,YAAI,CAAC,KAAK,KAAK,CAAC,QAAa,OAAO,IAAI,YAAY,aAAa,GAAG;AAClE,0BAAA;AACA,eAAK,KAAK,EAAE,SAAS,eAAe,UAAU,CAAC,WAAgB,eAAc,mBAAmB,IAAI,EAAA,CAAG;AAAA,QACzG;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,kBAAkB,MAAiB;AAIhD,QAAI,KAAK,iBAAiB,KAAK,cAAc,SAAS,GAAG;AACvD,cAAQ,IAAI,uDAAuD;AACnE;AAAA,IACF;AAGA,SAAK,aAAa,KAAK,cAAc,CAAA;AACrC,SAAK,WAAW,aAAa,KAAK,WAAW,eAAe;AAC5D,SAAK,WAAW,mBAAmB,KAAK,WAAW,qBAAqB;AACxE,SAAK,WAAW,wBAAwB,KAAK,WAAW,yBAAyB;AACjF,SAAK,WAAW,wBAAwB,KAAK,WAAW,0BAA0B;AAGlF,SAAK,gBAAgB,KAAK,iBAAiB,CAAA;AAG3C,SAAK,cAAc,KAAK,IAAI,sBAAA,CAAuB;AAGnD,UAAM,gBAAgB,KAAK,qBAAqB,IAAI;AACpD,SAAK,OAAO,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,aAAa,CAAC;AAEhE,YAAQ,IAAI,iDAAiD;AAAA,EAC/D;AAAA,EAEA,OAAe,qBAAqB,MAAmB;AACrD,UAAM,gBAAgB,eAAc;AACpC,QAAI,WAAW,KAAK;AAEpB,QAAI,CAAC,MAAM,eAAe;AACxB,aAAO,KAAK,IAAI,UAAU,GAAG;AAAA,IAC/B;AAEA,UAAM,aAAoB,CAAA;AAC1B,eAAW,UAAU,KAAK,eAAe;AACvC,YAAM,cAAc,kBAAkB,mBAAmB,OAAO,iBAAiB,IAAI;AACrF,UAAI,YAAa;AACjB,YAAM,OAAO,OAAO,YAAA;AACpB,YAAM,SAAS,kBAAkB,kBAAkB,KAAK,KAAK,CAAC;AAC9D,UAAI,WAAW,EAAG;AAClB,iBAAW,KAAK,MAAM;AAAA,IACxB;AAEA,eAAW,QAAQ,CAAC,QAAQ,UAAU;AACpC,YAAM,OAAO,OAAO,YAAA;AACpB,YAAM,SAAS,kBAAkB,kBAAkB,KAAK,KAAK,CAAC;AAC9D,UAAI,cAAe,kBAAkB,sBAAsB,OAAO,YAAA,IAAiB,IAAI;AACvF,YAAM,SAAS,UAAU,WAAW,SAAS;AAC7C,UAAI,UAAU,kBAAkB,sBAAsB,OAAO,eAAe;AAC1E,sBAAc,KAAK,IAAI,eAAe,CAAC;AAAA,MACzC;AACA,kBAAY,SAAS;AAAA,IACvB,CAAC;AAED,WAAO,KAAK,IAAI,UAAU,GAAG;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,kBAAkB,MAAiB;AACxC,UAAM,YAAY,KAAK,qBAAqB,IAAI;AAEhD,QAAI,KAAK,KAAK,CAAC,MAAM,WAAW;AAC9B,WAAK,KAAK,CAAC,IAAI;AAAA,IACjB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,kBAAkB,MAAW,KAAgB;AAClD,QAAI,CAAC,KAAK,cAAe;AACzB,UAAM,aAAa,eAAc,eAAe,IAAI;AACpD,UAAM,gBAAgB,eAAc;AACpC,QAAI,WAAW,KAAK;AAEpB,QAAI,CAAC,YAAY;AAEf,YAAM,aAAoB,CAAA;AAC1B,iBAAW,UAAU,KAAK,eAAe;AACvC,cAAM,OAAO,OAAO,YAAA;AACpB,cAAM,cAAc,kBAAkB,mBAAmB,OAAO,iBAAiB,IAAI;AACrF,cAAM,SAAS,kBAAkB,kBAAkB,KAAK,KAAK,CAAC;AAC9D,YAAI,WAAW,KAAK,YAAa;AACjC,mBAAW,KAAK,MAAM;AAAA,MACxB;AAEA,iBAAW,QAAQ,CAAC,QAAQ,UAAU;AACpC,cAAM,OAAO,OAAO,YAAA;AACpB,cAAM,SAAS,kBAAkB,kBAAkB,KAAK,KAAK,CAAC;AAC9D,eAAO,KAAK,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,UAAU,MAAM;AACrD,YAAI,cAAe,kBAAkB,sBAAsB,OAAO,YAAA,IAAiB,IAAI;AACvF,cAAM,SAAS,UAAU,WAAW,SAAS;AAC7C,YAAI,UAAU,kBAAkB,sBAAsB,OAAO,eAAe;AAC1E,wBAAc,KAAK,IAAI,eAAe,CAAC;AAAA,QACzC;AACA,oBAAY,SAAS;AAAA,MACvB,CAAC;AAAA,IACH;AAEA,QAAI,YAAY;AACd,UAAI;AACF,YAAI,KAAA;AACJ,YAAI,2BAA2B;AAC/B,YAAI,YAAY;AAChB,cAAM,SAAS;AACf,YAAI,OAAO,IAAI,cAAc,YAAY;AACvC,cAAI,UAAA;AACJ,cAAI,UAAU,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM;AACxF,cAAI,KAAA;AAAA,QACN,OAAO;AACL,cAAI,SAAS,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;AAAA,QACjF;AACA,YAAI,QAAA;AAAA,MACN,QAAQ;AAAA,MAAC;AAAA,IACX;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,gBAAgB,MAAW,OAAY,KAAmB;AAC/D,WAAO,KAAK,iBAAiB,MAAM,OAAO,KAAK,aAAa;AAAA,EAC9D;AAAA,EAEA,OAAO,cAAc,MAAW,OAAY,KAAmB;AAC7D,WAAO,KAAK,iBAAiB,MAAM,OAAO,KAAK,SAAS;AAAA,EAC1D;AAAA,EAEA,OAAe,iBAAiB,MAAW,OAAY,KAAU,SAA0B;AACzF,QAAI,CAAC,KAAK,cAAe,QAAO;AAEhC,QAAI,eAAc,eAAe,IAAI,GAAG;AACtC,aAAO;AAAA,IACT;AAMA,QAAI;AACF,YAAM,OAAQ,KAAa,QAAQ,QAAQ,wBAAA;AAC3C,YAAM,KAAM,KAAa,QAAQ;AACjC,UAAI,KAAqB,UAAU,MAAM,WAAW,MAAM,UAAW;AACrE,UAAI,KAAqB,UAAU,MAAM,WAAW,MAAM,UAAW;AACrE,WAAK,MAAM,QAAQ,MAAM,SAAS,QAAQ,IAAI;AAC5C,aAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,OAAO,GAAG,SAAS;AACjE,aAAK,KAAK,OAAO,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,OAAO,GAAG,SAAS;AAAA,MAClE;AACA,UAAI,MAAM,QAAQ,MAAM,MAAM;AAC3B,uBAAsB,qBAAqB,EAAC,GAAG,IAAI,GAAG,GAAA;AAAA,MACzD;AAAA,IACF,QAAQ;AAAA,IAAC;AAET,UAAM,gBAAgB,eAAc;AACpC,QAAI,WAAW,KAAK;AAGpB,eAAW,UAAU,KAAK,eAAe;AACvC,YAAM,OAAO,OAAO,YAAA;AAGpB,YAAM,cAAc,kBAAkB,mBAAmB,OAAO,iBAAiB,IAAI;AACrF,UAAI,KAAK,CAAC,MAAM,KAAK,aAAa;AAEhC;AAAA,MACF;AAEA,YAAM,SAAS,kBAAkB,kBAAkB,KAAK,KAAK,CAAC;AAG9D,YAAM,eAAe;AACrB,YAAM,aAAa,WAAW;AAC9B,UAAI,IAAI,CAAC,KAAK,gBAAgB,IAAI,CAAC,KAAK,YAAY;AAIlD,cAAM,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,YAAY;AAG/C,YAAI,OAAO,OAAO,GAAG;AAEnB,cAAI,OAAO,OAAO,EAAE,OAAO,UAAU,IAAI,GAAG;AAE1C,mBAAO;AAAA,UACT;AAAA,QAGF;AAAA,MAGF;AAIA,YAAM,cAAe,kBAAkB,sBAAsB,OAAO,YAAA,IAAiB,IAAI;AACzF,kBAAY,SAAS;AAAA,IACvB;AAGA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,iBAAiB,MAAW,cAA2B;AACpE,QAAI,CAAC,MAAM,cAAe,QAAO,KAAK;AACtC,UAAM,gBAAgB,eAAc;AACpC,QAAI,WAAW,KAAK;AACpB,eAAW,UAAU,KAAK,eAAe;AACvC,YAAM,OAAO,OAAO,cAAA,KAAmB,CAAC,GAAG,CAAC;AAC5C,YAAM,cAAc,kBAAkB,mBAAmB,OAAO,mBAAmB,IAAI;AACvF,YAAM,SAAS,kBAAkB,kBAAkB,KAAK,KAAK,CAAC;AAC9D,UAAI,WAAW,KAAK,aAAa;AAC/B;AAAA,MACF;AACA,UAAI,WAAW,cAAc;AAC3B,eAAO;AAAA,MACT;AACA,YAAM,cAAe,kBAAkB,sBAAsB,OAAO,cAAA,IAAmB,IAAI;AAC3F,kBAAY,SAAS;AAAA,IACvB;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,iBAAiB,MAAW,QAA0B,QAA6B;AAC9F,QAAI;AAEF,YAAM,iBAAiB,MAAM,eAAc,YAAY,kBAAA;AACvD,YAAM,YAAY,KAAK,aAAa,IAAI;AACxC,YAAM,QAAQ,eAAe,IAAI,CAAA,UAAS;AAAA,QACxC,IAAI;AAAA,QACJ,OAAO,KAAK,QAAQ,6BAA6B,EAAE;AAAA,QACnD,UAAU,UAAU,IAAI,IAAI;AAAA,MAAA,EAC5B;AAGF,qBAAe,YAAA,EAAc,kBAAkB;AAAA,QAC7C,OAAO;AAAA,QACP,aAAa;AAAA,QACb;AAAA,QACA,UAAU,CAAC,OAAe;AACxB,cAAI,KAAK,gBAAgB,MAAM,EAAE,GAAG;AAClC,iBAAK,UAAU,gCAAgC,SAAS;AACxD;AAAA,UACF;AACA,cAAI,QAAQ;AACV,mBAAO,QAAQ,IAAI,IAAI;AACvB,iBAAK,UAAU,kBAAkB,SAAS;AAAA,UAC5C,OAAO;AACL,iBAAK,cAAc,MAAM,EAAE,MAAM,IAAI;AACrC,iBAAK,UAAU,gBAAgB,SAAS;AAAA,UAC1C;AACA,eAAK,eAAe,MAAM,IAAI;AAAA,QAChC;AAAA,QACA,mBAAmB;AAAA,QACnB,cAAc,CAAC,QAAkB;AAC/B,gBAAM,QAAkB,CAAA;AACxB,gBAAM,UAAoB,CAAA;AAC1B,cAAI,QAAQ,CAAC,OAAO;AAClB,gBAAI,KAAK,gBAAgB,MAAM,EAAE,GAAG;AAClC,sBAAQ,KAAK,EAAE;AACf;AAAA,YACF;AACA,gBAAI,QAAQ;AAEV,kBAAI,MAAM,WAAW,GAAG;AACtB,uBAAO,QAAQ,IAAI,IAAI;AACvB,sBAAM,KAAK,EAAE;AACb;AAAA,cACF;AAAA,YACF;AACA,iBAAK,cAAc,MAAM,EAAE,MAAM,IAAI;AACrC,kBAAM,KAAK,EAAE;AAAA,UACf,CAAC;AACD,cAAI,MAAM,OAAQ,MAAK,UAAU,WAAW,MAAM,MAAM,QAAQ,MAAM,SAAO,IAAE,MAAI,EAAE,IAAI,SAAS;AAClG,cAAI,QAAQ,OAAQ,MAAK,UAAU,cAAc,QAAQ,MAAM,aAAa,QAAQ,SAAO,IAAE,MAAI,EAAE,IAAI,SAAS;AAChH,eAAK,eAAe,MAAM,IAAI;AAAA,QAChC;AAAA;AAAA,QAEA,aAAa,MAAM,KAAK,IAAI;AAAA,UAC1B,eACG,IAAI,CAAC,MAAc,EAAE,MAAM,OAAO,EAAE,CAAC,CAAC,EACtC,OAAO,OAAO;AAAA,QAAA,CAClB,EAAE,KAAA;AAAA;AAAA,QAEH,gBAAgB;AAAA,MAAA,CACjB;AAAA,IACH,SAAS,OAAO;AACd,cAAQ,MAAM,iCAAiC,KAAK;AACpD,WAAK,UAAU,wBAAwB,OAAO;AAAA,IAChD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,gBAAgB,MAAW,QAA+B;AAC/D,UAAM,MAAM,cAAc,YAAA;AAC1B,UAAM,eAAe,KAAK,gBAAgB,IAAI;AAC9C,UAAM,YAAY,IAAI,OAAA;AACtB,UAAM,UAAU,MAAM,KAAK,oBAAI,IAAI;AAAA,MAAC,GAClC;AAAA,MACA,GAAG;AAAA,IAAA,CACJ,CAAC;AACF,UAAM,QAAQ,QAAQ,IAAI,CAAA,SAAQ,EAAE,IAAI,KAAK,OAAO,IAAA,EAAM;AAE1D,mBAAe,YAAA,EAAc,kBAAkB;AAAA,MAC7C,OAAO;AAAA,MACP,aAAa;AAAA,MACb;AAAA,MACA,aAAa;AAAA,MACb,UAAU,CAAC,QAAgB;AAEzB,YAAI;AAAE,cAAI,OAAO,GAAG;AAAA,QAAG,QAAQ;AAAA,QAAC;AAChC,eAAO,MAAM,MAAM;AACnB,aAAK,eAAe,IAAI;AACxB,aAAK,kBAAkB,IAAI;AAC3B,aAAK,eAAe,MAAM,KAAK;AAAA,MACjC;AAAA,MACA,cAAc;AAAA,QACZ;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,SAAS,CAAC,SAAiB;AACzB,iBAAK,gBAAgB;AAAA,cACnB,OAAO;AAAA,cACP,aAAa;AAAA,cACb,SAAS;AAAA,cACT,aAAa;AAAA,cACb,UAAU,CAAC,YAAoB;AAC7B,sBAAM,KAAK,IAAI,UAAU,MAAM,OAAO;AACtC,qBAAK,UAAU,KAAK,kBAAkB,0BAA0B,KAAK,YAAY,OAAO;AACxF,qBAAK,gBAAgB,MAAM,MAAM;AAAA,cACnC;AAAA,YAAA,CACD;AAAA,UACH;AAAA,QAAA;AAAA,QAEF;AAAA,UACE,MAAM;AAAA,UACN,OAAO;AAAA,UACP,SAAS,CAAC,SAAiB;AACzB,kBAAM,YAAY,QAAQ,eAAe,IAAI,IAAI;AACjD,gBAAI,CAAC,UAAW;AAChB,kBAAM,KAAK,IAAI,UAAU,IAAI;AAC7B,iBAAK,UAAU,KAAK,kBAAkB,0BAA0B,KAAK,YAAY,OAAO;AACxF,iBAAK,gBAAgB,MAAM,MAAM;AAAA,UACnC;AAAA,QAAA;AAAA,MACF;AAAA,IACF,CACD;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,mBAAmB,MAAW,OAAmB;AAEtD,UAAM,YAAmB;AAAA,MACvB;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,aAAa,MAAM,GAAG;AAAA,QAClD,UAAU,MAAM;AACd,eAAK,WAAW,aAAa,CAAC,KAAK,WAAW;AAC9C,eAAK,eAAe,IAAI;AACxB,eAAK,kBAAkB,IAAI;AAC3B,eAAK,eAAe,MAAM,KAAK;AAC/B,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,MAEF;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,wBAAwB,MAAM,GAAG;AAAA,QAC7D,UAAU,MAAM;AACd,gBAAM,WAAW,CAAC,KAAK,WAAW;AAClC,eAAK,WAAW,wBAAwB;AACxC,cAAI;AAEF,kBAAM,WAAW,KAAK,iBAAiB,CAAA,GAAI,OAAO,CAAC,MAAW,aAAa,eAAe;AAC1F,gBAAI,UAAU;AAEZ,sBAAQ,QAAQ,CAAC,MAAW;AAC1B,sBAAM,IAAI,WAAW,EAAE,OAAO,YAAY,CAAC,KAAK;AAChD,kBAAE,MAAM,eAAgB,OAAO,EAAE,OAAO,iBAAiB,WAAY,EAAE,MAAM,eAAe;AAAA,cAC9F,CAAC;AAAA,YACH,OAAO;AAEL,sBAAQ,QAAQ,CAAC,MAAW;AAC1B,sBAAM,IAAI,WAAW,EAAE,OAAO,YAAY,CAAC,KAAK;AAChD,kBAAE,MAAM,WAAW;AACnB,kBAAE,MAAM,eAAe;AAAA,cACzB,CAAC;AAAA,YACH;AAAA,UACF,QAAQ;AAAA,UAAC;AACT,eAAK,eAAe,MAAM,KAAK;AAC/B,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,MAEF;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,wBAAwB,MAAM,GAAG;AAAA,QAC7D,UAAU,MAAM;AACd,eAAK,WAAW,wBAAwB,CAAC,KAAK,WAAW;AACzD,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,IACF;AAIF,UAAM,YAAmB;AAAA,MACvB;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,mBAAmB,MAAM,GAAG;AAAA,QACxD,UAAU,MAAM;AACd,eAAK,WAAW,mBAAmB,CAAC,KAAK,WAAW;AACpD,eAAK,eAAe,MAAM,KAAK;AAC/B,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,MAEF;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,gBAAgB,QAAQ,MAAM,GAAG;AAAA,QAC7D,UAAU,MAAM;AACd,eAAK,WAAW,cAAc,KAAK,WAAW,gBAAgB,QAAQ,OAAO;AAC7E,eAAK,eAAe,MAAM,KAAK;AAC/B,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,MAEF;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,mBAAmB,QAAQ,MAAM,GAAG;AAAA,QAChE,UAAU,MAAM;AACd,eAAK,WAAW,iBAAiB,KAAK,WAAW,mBAAmB,QAAQ,OAAO;AACnF,eAAK,eAAe,MAAM,KAAK;AAC/B,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,MAEF;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,qBAAqB,QAAQ,MAAM,GAAG;AAAA,QAClE,UAAU,MAAM;AACd,eAAK,WAAW,mBAAmB,KAAK,WAAW,qBAAqB,QAAQ,OAAO;AACvF,eAAK,eAAe,MAAM,KAAK;AAC/B,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,MAEF;AAAA,QACE,SAAS,GAAG,KAAK,WAAW,yBAAyB,QAAQ,MAAM,GAAG;AAAA,QACtE,UAAU,MAAM;AACd,eAAK,WAAW,uBAAuB,KAAK,WAAW,yBAAyB,QAAQ,OAAO;AAC/F,eAAK,eAAe,MAAM,KAAK;AAC/B,eAAK,qBAAqB,IAAI;AAAA,QAChC;AAAA,MAAA;AAAA,IACF;AAGF,UAAM,YAAmB,CAAC,GAAG,WAAW,MAAM,GAAG,SAAS;AAC1D,QAAI,UAAU,YAAY,WAAW,EAAE,OAAO,YAAY,OAAc;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,uBAAuB,MAAiB;AAC7C,UAAM,eAAe,OAAO,wBAAwB,aAAa;AACjE,QAAI,gBAAgB,aAAa,QAAQ;AACjC,YAAM,UAAU,KAAK,eAAe,IAAI;AAC9C,WAAK,gBAAgB,aAAa,aAAa,KAAA,GAAQ,OAAO,EAC3D,KAAK,CAAA,YAAW;AACb,YAAI,SAAS;AACb,eAAK,UAAU,aAAa,aAAa,MAAM,yBAAyB,SAAS;AAAA,QACjF,OAAO;AACL,eAAK,UAAU,2BAA2B,OAAO;AAAA,QACnD;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,uBAAuB,MAAW,OAA4B;AACzE,QAAI;AACF,YAAM,gBAAgB,MAAM,KAAK,gBAAgB,iBAAA;AACjD,UAAI,cAAc,WAAW,GAAG;AAC9B,aAAK,UAAU,gDAAgD,MAAM;AACrE;AAAA,MACF;AAEA,YAAM,QAAQ,cAAc,IAAI,CAAA,UAAS,EAAE,IAAI,MAAM,OAAO,KAAA,EAAO;AAEnE,WAAK,kBAAkB;AAAA,QACrB,OAAO;AAAA,QACP,aAAa;AAAA,QACb;AAAA,QACA,UAAU,OAAO,SAAiB;AAChC,cAAI;AACF,kBAAM,WAAW,MAAM,KAAK,gBAAgB,aAAa,IAAI;AAC7D,gBAAI,UAAU;AACZ,mBAAK,aAAa,MAAM,QAAQ;AAChC,mBAAK,UAAU,eAAe,IAAI,0BAA0B,SAAS;AAAA,YACvE,OAAO;AACL,mBAAK,UAAU,8BAA8B,IAAI,2BAA2B,OAAO;AAAA,YACrF;AAAA,UACF,SAAS,OAAO;AACd,oBAAQ,MAAM,4BAA4B,IAAI,MAAM,KAAK;AACzD,iBAAK,UAAU,wDAAwD,OAAO;AAAA,UAChF;AAAA,QACF;AAAA,QACA,cAAc;AAAA,UACZ;AAAA,YACE,MAAM;AAAA,YACN,OAAO;AAAA,YACP,SAAS,OAAO,SAAiB;AAC/B,mBAAK,gBAAgB;AAAA,gBACnB,OAAO;AAAA,gBACP,aAAa;AAAA,gBACb,SAAS;AAAA,gBACT,aAAa;AAAA,gBACb,UAAU,OAAO,YAAoB;AACnC,wBAAM,OAAO,QAAQ,IAAI,KAAA;AACzB,wBAAM,OAAO,WAAW,IAAI,KAAA;AAC5B,sBAAI,CAAC,OAAO,QAAQ,IAAK;AACzB,wBAAM,KAAK,MAAM,KAAK,gBAAgB,eAAe,KAAK,GAAG;AAC7D,uBAAK,UAAU,KAAK,uBAAuB,sBAAsB,KAAK,YAAY,OAAO;AACzF,sBAAI,GAAI,MAAK,uBAAuB,MAAM,KAAK;AAAA,gBACjD;AAAA,cAAA,CACD;AAAA,YACH;AAAA,UAAA;AAAA,UAEF;AAAA,YACE,MAAM;AAAA,YACN,OAAO;AAAA,YACP,SAAS,OAAO,SAAiB;AAC/B,oBAAM,KAAK,QAAQ,oBAAoB,IAAI,2BAA2B;AACtE,kBAAI,CAAC,GAAI;AACT,oBAAM,UAAU,MAAM,KAAK,gBAAgB,eAAe,IAAI;AAC9D,mBAAK,UAAU,UAAU,uBAAuB,+BAA+B,UAAU,YAAY,OAAO;AAC5G,kBAAI,QAAS,MAAK,uBAAuB,MAAM,KAAK;AAAA,YACtD;AAAA,UAAA;AAAA,QACF;AAAA,MACF,CACD;AAAA,IACH,SAAS,OAAO;AACd,cAAQ,MAAM,qCAAqC,KAAK;AACxD,WAAK,UAAU,yDAAyD,OAAO;AAAA,IACjF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,cAAc,MAAW,QAA+C;AAC7E,UAAM,SAAS,IAAI,gBAAgB,QAAQ,KAAK,IAAA,CAAK,EAAE;AAEvD,QAAI,QAAQ;AAEV,YAAM,EAAE,MAAM,SAAS,GAAG,SAAS;AACnC,UAAI,OAAO,KAAK,IAAI,EAAE,QAAQ;AAC5B,eAAO,OAAO,OAAO,OAAO,IAAI;AAAA,MAClC;AAEA,UAAI,WAAW,YAAY,QAAQ;AACjC,eAAO,QAAQ,SAAmB,IAAI;AAAA,MACxC;AAAA,IACF;AAEA,QAAI,MAAM,YAAY,YAAY;AAChC,aAAO,MAAM,MAAM,OAAO,MAAM,OAAO;AAAA,IACzC;AAGA,SAAK,gBAAgB,KAAK,iBAAiB,CAAA;AAC3C,SAAK,cAAc,KAAK,MAAM;AAG9B,QAAI,MAAM,YAAY,YAAY;AAChC,WAAK,eAAe,IAAI;AAAA,IAC1B;AAGA,SAAK,kBAAkB,IAAI;AAC3B,SAAK,eAAe,MAAM,KAAK;AAE/B,SAAK,qBAAqB,IAAI;AAC9B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,iBAAiB,MAAW,QAA+B;AAChE,UAAM,QAAQ,KAAK,cAAc,QAAQ,MAAM;AAC/C,QAAI,SAAS,GAAG;AACd,WAAK,cAAc,OAAO,OAAO,CAAC;AAClC,WAAK,eAAe,IAAI;AACxB,WAAK,kBAAkB,IAAI;AAC3B,WAAK,eAAe,MAAM,KAAK;AAC/B,WAAK,qBAAqB,IAAI;AAAA,IAChC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,eAAe,MAAiB;AACrC,QAAI,CAAC,KAAK,WAAW,YAAY;AAE/B,WAAK,gBAAgB,KAAK,cAAc,OAAO,CAAC,MAAW,EAAE,aAAa,mBAAmB;AAC7F;AAAA,IACF;AAEA,UAAM,cAAc,KAAK,cAAc,OAAO,CAAC,MAAW,aAAa,eAAe;AACtF,UAAM,eAAe,KAAK,cAAc,KAAK,CAAC,MAAW,aAAa,qBAAqB;AAG3F,UAAM,YAAkD,CAAA;AACxD,eAAW,UAAU,aAAa;AAChC,YAAM,MAAM,OAAO,MAAM,OAAO;AAChC,UAAI,CAAC,UAAU,GAAG,EAAG,WAAU,GAAG,IAAI,CAAA;AACtC,gBAAU,GAAG,EAAE,KAAK,MAAM;AAAA,IAC5B;AAGA,SAAK,gBAAgB,CAAC,YAAY,EAAE,OAAO,OAAO;AAElD,UAAM,aAAa,OAAO,KAAK,SAAS,EAAE;AAAA,MAAK,CAAC,GAAG,MACjD,MAAM,YAAY,KAAK,MAAM,YAAY,IAAI,EAAE,cAAc,CAAC;AAAA,IAAA;AAGhE,eAAW,OAAO,YAAY;AAE5B,UAAI,YAAY,KAAK,cAAc;AAAA,QAAK,CAAC,MACvC,aAAa,sBAAsB,EAAE,QAAQ;AAAA,MAAA;AAG/C,UAAI,CAAC,WAAW;AACd,oBAAY,IAAI,mBAAmB,GAAG;AAAA,MACxC;AAEA,WAAK,cAAc,KAAK,SAAS;AAGjC,WAAK,cAAc,KAAK,GAAG,UAAU,GAAG,CAAC;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,aAAa,MAAwB;AAClD,WAAO,IAAI;AAAA,MACT,KAAK,cACF,OAAO,CAAC,MAAW,aAAa,eAAe,EAC/C,IAAI,CAAC,MAAW,EAAE,MAAM,IAAI,EAC5B,OAAO,CAAC,SAAiB,QAAQ,SAAS,MAAM;AAAA,IAAA;AAAA,EAEvD;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,gBAAgB,MAAW,UAA2B;AACnE,UAAM,YAAY,KAAK,aAAa,IAAI;AACxC,WAAO,UAAU,IAAI,QAAQ;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,gBAAgB,MAAqB;AAClD,WAAO,MAAM,KAAK,IAAI;AAAA,MACpB,KAAK,cACF,OAAO,CAAC,MAAW,aAAa,eAAe,EAC/C,IAAI,CAAC,MAAW,EAAE,MAAM,GAAG,EAC3B,OAAO,CAAC,QAAgB,GAAG;AAAA,IAAA,CAC/B;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,OAAc,eAAe,MAAyB;AACpD,WAAO,KAAK,cACT,OAAO,CAAC,MAAW,aAAa,eAAe,EAC/C,IAAI,CAAC,OAAY;AAAA,MAChB,MAAM,EAAE,MAAM;AAAA,MACd,SAAS,EAAE,MAAM;AAAA,MACjB,gBAAgB,EAAE,MAAM;AAAA,MACxB,eAAe,EAAE,MAAM;AAAA,MACvB,cAAc,EAAE,MAAM;AAAA,MACtB,KAAK,EAAE,MAAM;AAAA,MACb,gBAAgB,EAAE,MAAM;AAAA,IAAA,EACxB,EACD,OAAO,CAAC,WAAuB,OAAO,QAAQ,OAAO,SAAS,MAAM;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,aAAa,MAAW,SAA6B;AAElE,SAAK,gBAAgB,KAAK,cAAc;AAAA,MAAO,CAAC,MAC9C,EAAE,aAAa,oBAAoB,EAAE,aAAa;AAAA,IAAA;AAIpD,eAAW,UAAU,SAAS;AAC5B,YAAM,SAAS,IAAI,gBAAgB,QAAQ,KAAK,IAAA,CAAK,IAAI,KAAK,OAAA,CAAQ,EAAE;AACxE,aAAO,QAAQ;AAAA,QACb,MAAM,OAAO;AAAA,QACb,SAAS,OAAO,YAAY;AAAA,QAC5B,UAAU,OAAO,kBAAkB;AAAA,QACnC,cAAc,OAAO,iBAAiB,OAAO,kBAAkB;AAAA,QAC/D,cAAc,OAAO,gBAAgB;AAAA,QACrC,KAAK,OAAO,OAAO;AAAA,QACnB,aAAa,OAAO,kBAAkB;AAAA,MAAA;AAExC,WAAK,cAAc,KAAK,MAAM;AAAA,IAChC;AAEA,SAAK,eAAe,IAAI;AACxB,SAAK,kBAAkB,IAAI;AAC3B,SAAK,eAAe,MAAM,KAAK;AAC/B,SAAK,qBAAqB,IAAI;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,qBAAqB,MAAiB;AAG3C,SAAK,eAAe,MAAM,IAAI;AAAA,EAChC;AAAA;AAAA,EAGA,OAAe,YAAY,MAAmB;AAC5C,UAAM,cAAc,KAAK,eAAe,OAAO,CAAC,MAAW,aAAa,eAAe,KAAK,CAAA;AAC5F,UAAM,SAAS,YACZ,OAAO,CAAC,MAAW,GAAG,OAAO,QAAQ,EAAE,MAAM,SAAS,MAAM,EAC5D,IAAI,CAAC,OAAY;AAAA,MAChB,MAAM,EAAE,MAAM;AAAA,MACd,SAAS,EAAE,MAAM;AAAA,MACjB,UAAU,EAAE,MAAM;AAAA,MAClB,cAAc,EAAE,MAAM;AAAA,MACtB,cAAc,EAAE,MAAM;AAAA,MACtB,KAAK,EAAE,MAAM;AAAA,MACb,aAAa,EAAE,MAAM;AAAA,IAAA,EACrB;AACJ,QAAI;AAAE,aAAO,KAAK,UAAU,MAAM;AAAA,IAAG,QAAQ;AAAE,aAAO;AAAA,IAAM;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,uBAAuB,MAAgB;AAC5C,QAAI,CAAC,KAAK,cAAe,QAAO;AAEhC,UAAM,kBAAkB,KAAK,MAAM,KAAK,UAAU,KAAK,cAAc,CAAA,CAAE,CAAC;AAExE,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS,KAAK,cAAc,IAAI,CAAC,YAAiB;AAAA,QAChD,MAAM,OAAO;AAAA,QACb,MAAM,OAAO,YAAY;AAAA,QACzB,OAAO,KAAK,MAAM,KAAK,UAAU,OAAO,KAAK,CAAC;AAAA,MAAA,EAC9C;AAAA,IAAA;AAAA,EAEN;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,yBAAyB,MAAW,MAAiB;AAC1D,QAAI,CAAC,KAAM;AAEX,QAAI;AACF,WAAK,aAAa,KAAK,cAAc,CAAA;AACrC,UAAI,KAAK,YAAY;AACnB,eAAO,OAAO,KAAK,YAAY,KAAK,MAAM,KAAK,UAAU,KAAK,UAAU,CAAC,CAAC;AAAA,MAC5E;AAEA,YAAM,kBAAyB,CAAA;AAC/B,UAAI,MAAM,QAAQ,KAAK,OAAO,GAAG;AAC/B,mBAAW,cAAc,KAAK,SAAS;AACrC,cAAI;AACJ,kBAAQ,WAAW,MAAA;AAAA,YACjB,KAAK;AACH,uBAAS,IAAI,sBAAA;AACb;AAAA,YACF,KAAK;AACH,uBAAS,IAAI,mBAAmB,WAAW,OAAO,GAAG;AACrD;AAAA,YACF,KAAK;AACH,uBAAS,IAAI,gBAAgB,WAAW,IAAI;AAC5C;AAAA,YACF;AACE;AAAA,UAAA;AAEJ,iBAAO,QAAQ,EAAE,GAAG,OAAO,OAAO,GAAG,KAAK,MAAM,KAAK,UAAU,WAAW,SAAS,CAAA,CAAE,CAAC,EAAA;AACtF,0BAAgB,KAAK,MAAM;AAAA,QAC7B;AAAA,MACF;AAEA,WAAK,gBAAgB,gBAAgB,SAAS,kBAAkB,CAAC,IAAI,uBAAuB;AAAA,IAC9F,SAAS,OAAO;AACd,cAAQ,KAAK,mEAAmE,KAAK;AACrF,WAAK,gBAAgB,CAAC,IAAI,uBAAuB;AAAA,IACnD;AAEA,SAAK,eAAe,MAAM,IAAI;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,iBAAiB,MAAgB;AACtC,UAAM,cAAc,KAAK,eAAe,OAAO,CAAC,MAAW,aAAa,eAAe,KAAK,CAAA;AAC5F,UAAM,gBAAqB,CAAA;AAG3B,gBAAY,QAAQ,CAAC,QAAa,UAAkB;AAClD,UAAI,OAAO,MAAM,QAAQ,OAAO,MAAM,SAAS,QAAQ;AACrD,sBAAc,QAAQ,KAAK,EAAE,IAAI;AAAA,UAC/B,MAAM,OAAO,MAAM;AAAA,UACnB,SAAS,OAAO,MAAM;AAAA,UACtB,UAAU,OAAO,MAAM;AAAA,UACvB,cAAc,OAAO,MAAM;AAAA,UAC3B,cAAc,OAAO,MAAM;AAAA,UAC3B,KAAK,OAAO,MAAM;AAAA,UAClB,aAAa,OAAO,MAAM;AAAA,QAAA;AAAA,MAE9B;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAc,UAAU,SAAiB,OAAiD,QAAc;AACtG,mBAAe,YAAA,EAAc,UAAU,SAAS,IAAI;AAAA,EACtD;AAAA;AAAA,EAGA,OAAO,iBAAiB,OAAY,SAAiB,UAAqC;AACxF,UAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,QAAQ,OAAO,WAAW,CAAC;AAGjC,QAAI,QAAgB;AAEpB,QAAI;AACF,UAAI,SAAS,OAAO,MAAM,YAAY,YAAY,OAAO,MAAM,YAAY,UAAU;AACnF,iBAAS,MAAM,UAAU;AACzB,gBAAQ,MAAM,UAAU;AACxB,gBAAQ,IAAI,+CAA+C,MAAM,KAAK,KAAK,EAAE;AAAA,MAC/E,OAAO;AACL,cAAM,cAAe,eAAsB;AAC3C,kBAAU,aAAa,KAAK,OAAO;AACnC,iBAAS,aAAa,KAAK,OAAO;AAClC,gBAAQ,IAAI,kDAAkD,MAAM,KAAK,KAAK,EAAE;AAAA,MAClF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,KAAK,qEAAqE,KAAK;AACvF,YAAM,cAAe,eAAsB;AAC3C,gBAAU,aAAa,KAAK,OAAO;AACnC,eAAS,aAAa,KAAK,OAAO;AAAA,IACpC;AAEA,UAAM,MAAM,UAAU;AAAA;AAAA,cAEZ,MAAM;AAAA,aACP,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYd,QAAI,aAAa;AACjB,UAAM,UAAU,MAAM;AAAE,UAAI,WAAY;AAAQ,mBAAa;AAAM,UAAI;AAAE,cAAM,OAAA;AAAA,MAAU,QAAQ;AAAA,MAAC;AAAA,IAAE;AACpG,UAAM,SAAS,MAAM;AAAE,YAAM,IAAI,WAAW,MAAM,KAAK;AAAG,UAAI,CAAC,OAAO,MAAM,CAAC,YAAY,CAAC;AAAG,cAAA;AAAA,IAAW;AACxG,UAAM,iBAAiB,WAAW,CAAC,MAAM;AACvC,UAAI,EAAE,QAAQ,QAAS,QAAA;AACvB,UAAI,EAAE,QAAQ,SAAU,SAAA;AAAA,IAC1B,CAAC;AACD,UAAM,iBAAiB,QAAQ,OAAO;AACtC,aAAS,KAAK,YAAY,KAAK;AAC/B,UAAM,MAAA;AACN,UAAM,OAAA;AAAA,EACR;AAAA,EAEA,OAAO,eAAe,OAAY,SAAiB,UAA+B,OAAiG;AACjL,UAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,UAAM,OAAO;AACb,UAAM,QAAQ,WAAW;AAGzB,QAAI,QAAgB,OAAe,SAAiB;AAEpD,QAAI;AAEF,UAAI,SAAS,OAAO,MAAM,YAAY,YAAY,OAAO,MAAM,YAAY,UAAU;AACnF,iBAAS,MAAM,UAAU;AACzB,gBAAQ,MAAM,UAAU;AACxB,kBAAU;AACV,mBAAW;AACX,gBAAQ,IAAI,6CAA6C,MAAM,KAAK,KAAK,EAAE;AAAA,MAC7E,WAES,OAAO,QAAQ,OAAO,MAAM;AACnC,cAAM,OAAO,MAAM;AACnB,cAAM,OAAO,MAAM;AAGnB,cAAM,WAAY,KAAa,QAAQ;AACvC,cAAM,QAAQ,UAAU,wBAAA;AACxB,cAAM,KAAM,KAAa,QAAQ;AACjC,cAAM,QAAQ,IAAI,SAAS;AAC3B,cAAM,SAAS,IAAI,UAAU,CAAC,GAAG,CAAC;AAElC,YAAI,OAAO;AAET,gBAAM,UAAU,KAAK,OAAO,CAAC,GAAG,CAAC;AACjC,gBAAM,SAAS,QAAQ,CAAC,IAAI,KAAK;AACjC,gBAAM,SAAS,QAAQ,CAAC,IAAI,KAAK;AAEjC,mBAAS,MAAM,QAAQ,SAAS,OAAO,CAAC,KAAK;AAC7C,kBAAQ,MAAM,OAAO,SAAS,OAAO,CAAC,KAAK;AAC3C,oBAAU,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK;AACtC,qBAAW,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK;AAEtC,kBAAQ,IAAI,sCAAsC,MAAM,KAAK,KAAK,WAAW,IAAI;AAAA,QACnF,OAAO;AACL,gBAAM,IAAI,MAAM,2BAA2B;AAAA,QAC7C;AAAA,MACF,OAEK;AACH,cAAM,cAAe,eAAsB;AAC3C,kBAAU,aAAa,KAAK,OAAO;AACnC,iBAAS,aAAa,KAAK,OAAO;AAClC,kBAAU;AACV,mBAAW;AACX,gBAAQ,IAAI,gDAAgD,MAAM,KAAK,KAAK,EAAE;AAAA,MAChF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,KAAK,mEAAmE,KAAK;AAErF,YAAM,cAAe,eAAsB;AAC3C,gBAAU,aAAa,KAAK,OAAO;AACnC,eAAS,aAAa,KAAK,OAAO;AAClC,gBAAU;AACV,iBAAW;AAAA,IACb;AAEA,UAAM,MAAM,UAAU;AAAA;AAAA,cAEZ,MAAM;AAAA,aACP,KAAK;AAAA,eACH,OAAO;AAAA,gBACN,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWpB,QAAI,aAAa;AACjB,UAAM,UAAU,MAAM;AAAE,UAAI,WAAY;AAAQ,mBAAa;AAAM,UAAI;AAAE,cAAM,OAAA;AAAA,MAAU,QAAQ;AAAA,MAAC;AAAA,IAAE;AACpG,UAAM,SAAS,MAAM;AAAE,eAAS,MAAM,SAAS,EAAE;AAAG,cAAA;AAAA,IAAW;AAC/D,UAAM,iBAAiB,WAAW,CAAC,MAAM;AACvC,UAAI,EAAE,QAAQ,QAAS,QAAA;AACvB,UAAI,EAAE,QAAQ,SAAU,SAAA;AAAA,IAC1B,CAAC;AACD,UAAM,iBAAiB,QAAQ,OAAO;AACtC,aAAS,KAAK,YAAY,KAAK;AAC/B,UAAM,MAAA;AACN,UAAM,OAAA;AAAA,EACR;AAAA;AAAA,EAGA,OAAc,kBAAkB,MAAsb;AACpd,mBAAe,YAAA,EAAc,kBAAkB,IAAI;AAAA,EACrD;AAAA,EAEA,OAAc,gBAAgB,MAA8H;AAC1J,UAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,YAAQ,MAAM,UAAU;AACxB,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,MAAM,UAAU;AACtB,UAAM,SAAS,SAAS,cAAc,KAAK;AAAG,WAAO,cAAc,KAAK;AAAO,WAAO,MAAM,UAAU;AACtG,UAAM,OAAO,SAAS,cAAc,MAAM;AAAG,SAAK,MAAM,UAAU;AAClE,UAAM,QAAQ,SAAS,cAAc,OAAO;AAAG,UAAM,OAAO;AAAQ,UAAM,cAAc,KAAK;AAAa,UAAM,QAAQ,KAAK,WAAW;AAAI,UAAM,MAAM,UAAU;AAClK,UAAM,SAAS,SAAS,cAAc,QAAQ;AAAG,WAAO,OAAO;AAAU,WAAO,cAAc,KAAK,eAAe;AAAQ,WAAO,MAAM,UAAU;AACjJ,UAAM,QAAQ,MAAM,QAAQ,OAAA;AAC5B,SAAK,iBAAiB,UAAU,CAAC,MAAM;AAAE,QAAE,eAAA;AAAkB,WAAK,SAAS,MAAM,KAAK;AAAG,YAAA;AAAA,IAAS,CAAC;AACnG,YAAQ,iBAAiB,SAAS,CAAC,MAAM;AAAE,UAAI,EAAE,WAAW,QAAS,OAAA;AAAA,IAAS,CAAC;AAC/E,aAAS,iBAAiB,WAAW,SAAS,MAAM,GAAG;AAAE,UAAI,EAAE,QAAQ,UAAU;AAAE,cAAA;AAAS,iBAAS,oBAAoB,WAAW,KAAY;AAAA,MAAG;AAAA,IAAE,CAAC;AACtJ,SAAK,YAAY,KAAK;AAAG,SAAK,YAAY,MAAM;AAChD,UAAM,YAAY,MAAM;AAAG,UAAM,YAAY,IAAI;AAAG,YAAQ,YAAY,KAAK;AAAG,aAAS,KAAK,YAAY,OAAO;AACjH,eAAW,MAAM,MAAM,MAAA,GAAS,CAAC;AAAA,EACnC;AACF;AAhwCE,eAAwB,yBAAyB;AACjD,eAAwB,eAAe;AACvC,eAAe,cAA2B,YAAY,YAAA;AACtD,eAAc,kBAAmC,gBAAgB,YAAA;AAGjE,eAAe,cAAc;AAC7B,eAAe,wBAA8C;AARxD,IAAM,gBAAN;ACVP,MAAM,uBAAiD;AAAA,EACrD,oBAAoB,CAAC,cAAc,YAAY;AAAA,EAC/C,sBAAsB,CAAC,cAAc,cAAc,YAAY;AAAA,EAC/D,yBAAyB,CAAC,cAAc,cAAc,cAAc,YAAY;AAClF;AAEO,MAAM,yBAAN,MAAM,uBAAsB;AAAA,EAqFjC,OAAe,YAAY,MAAmB;AAC5C,QAAI,KAAK,OAAO;AACd,cAAQ,MAAM,kBAAkB,GAAG,IAAI;AAAA,IACzC;AAAA,EACF;AAAA,EAEA,OAAe,wBAAwB,QAAa,OAAuB;AACzE,QAAI,CAAC,UAAU,OAAO,UAAU,UAAU;AACxC,aAAO;AAAA,IACT;AAEA,UAAM,UAAU,MAAM;AACpB,YAAM,OAAO,OAAO,SAAS;AAC7B,UAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,eAAO,KAAK,KAAK,CAAC,UAAe,OAAO,UAAU,QAAQ;AAAA,MAC5D;AACA,UAAI,QAAQ,OAAO,SAAS,UAAU;AACpC,eAAO,OAAO,KAAK,IAAI,EAAE,KAAK,CAAC,QAAQ,OAAO,QAAQ,QAAQ;AAAA,MAChE;AACA,aAAO;AAAA,IACT,GAAA;AAEA,QAAI,OAAO,WAAW,UAAU;AAC9B,YAAM,mBAAmB,OAAO,SAAS,IAAI,KAAK,CAAC,OAAO,SAAS,GAAG;AACtE,YAAM,eAAe,OAAO,SAAS,GAAG,KAAK,CAAC,OAAO,SAAS,IAAI;AAElE,UAAI,kBAAkB;AACpB,eAAO,MAAM,QAAQ,OAAO,IAAI;AAAA,MAClC;AACA,UAAI,cAAc;AAChB,eAAO,MAAM,QAAQ,OAAO,GAAG;AAAA,MACjC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EACA,OAAe,oBAA6B;AAC1C,QAAI;AACN,aAAOJ,OAAK,IAAI,UAAU,kBAAkB,oCAAoC,IAAI,MAAM;AAAA,IACxF,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,OAAe,YAAY,MAAW,SAAwB;AAC5D,QAAI;AACF,WAAK,aAAa,KAAK,cAAc,CAAA;AACrC,UAAI,SAAS;AACX,aAAK,WAAW,uBAAsB,aAAa,IAAI;AACvD,aAAK,WAAW,uBAAsB,oBAAoB,IAAI;AAAA,MAChE,WAAW,KAAK,YAAY;AAC1B,eAAO,KAAK,WAAW,uBAAsB,aAAa;AAC1D,eAAO,KAAK,WAAW,uBAAsB,oBAAoB;AAAA,MACnE;AAAA,IACF,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEA,OAAe,qBAAqB,MAAW,MAAqB;AAClE,QAAI,MAAM;AACR,UAAI,OAAO,KAAK,2BAA2B,aAAa;AACtD,eAAO,CAAC,CAAC,KAAK;AAAA,MAChB;AACA,UAAI,OAAO,KAAK,mBAAmB,aAAa;AAC9C,eAAO,CAAC,CAAC,KAAK;AAAA,MAChB;AAAA,IACF;AACA,QAAI;AACF,YAAM,QAAQ,MAAM;AACpB,UAAI,QAAQ,uBAAsB,aAAa,MAAM,MAAM;AACzD,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,uBAAsB,oBAAoB,MAAM,MAAM;AAChE,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,OAAe,oBAAoB,MAAW,cAAmB,QAAiC;AAChG,UAAM,gBAAqB;AAAA,MACzB,MAAM,GAAG,OAAO,UAAU;AAAA,MAC1B,MAAM,uBAAsB;AAAA,MAC5B,OAAO,aAAa,SAAS;AAAA,MAC7B,iBAAiB,aAAa,SAAS;AAAA,MACvC,gBAAgB,aAAa,SAAS,aAAa,QAAQ,OAAO;AAAA,MAClE,gBAAgB,uBAAsB,iBAAiB,QAAQ,YAAY;AAAA,MAC3E,aAAa;AAAA,MACb,sBAAsB,OAAO;AAAA,MAC7B,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,YAAY,OAAe;AACzB,cAAM,IAAK,OAAe,WAAW,sBAAsB;AAC3D,eAAO,CAAC,OAAO,CAAC;AAAA,MAClB;AAAA,MACA,KAAgB,KAA+B,SAAc,aAAqB,SAAiB;AACjG,cAAM,IAAK,OAAe,WAAW,sBAAsB;AAC3D,cAAM,SAAS;AACf,cAAM,SAAS;AACf,cAAM,QAAQ;AACpB,cAAM,IAAI,SAAS;AACnB,cAAM,IAAI;AACV,cAAM,iBAAiB,KAAK,IAAI,IAAI,cAAc,SAAS,IAAI,SAAS,CAAC;AACzE,cAAM,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,iBAAiB,SAAS,OAAO,CAAC,KAAK,eAAe,EAAE,CAAC;AAC1F,cAAM,SAAS,IAAI,IAAI,QAAQ;AAC/B,cAAM,QAAQ,SAAS;AACvB,cAAM,WAAW,SAAS;AACpB,cAAM,YAAY,KAAK,kBAAkB,OAAO;AAChD,cAAM,WAAY,KAAK,mBAAmB,OAAO,KAAK,eAAe,KAAM,KAAK;AAChF,cAAM,gBAAgB,aAAa,KAAK;AAExC,YAAI,KAAA;AACJ,YAAI,YAAY;AAChB,YAAI,cAAc;AAClB,YAAI,YAAY;AAChB,YAAI,OAAO,IAAI,cAAc,YAAY;AACvC,cAAI,UAAA;AACJ,cAAI,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;AAC3B,cAAI,KAAA;AACJ,cAAI,OAAA;AAAA,QACN,OAAO;AACL,cAAI,SAAS,GAAG,GAAG,GAAG,CAAC;AACvB,cAAI,WAAW,GAAG,GAAG,GAAG,CAAC;AAAA,QAC3B;AAEA,YAAI,OAAO;AACX,YAAI,eAAe;AAEnB,cAAM,iBAAiB,IAAI,YAAY,SAAS,EAAE;AAClD,cAAM,iBAAiB,IAAI,YAAY,QAAQ,EAAE;AACjD,cAAM,eAAe;AAErB,cAAM,aAAa,YAAY,IAAI;AACnC,cAAM,mBAAmB,KAAK,IAAI,gBAAgB,UAAU;AAC5D,cAAM,oBAAoB,aAAa;AAEvC,YAAI,YAAY,iBAAiB;AACjC,YAAI,aAAa;AAEjB,YAAI,aAAa,oBAAoB,cAAc;AACjD,uBAAa,KAAK,IAAI,gBAAgB,oBAAoB,YAAY;AACtE,sBAAY,aAAa;AAAA,QAC3B,OAAO;AACL,sBAAY;AAAA,QACd;AAEA,cAAM,aAAa,YAAY,IAAI,QAAQ,aAAa,eAAe,IAAI;AAC3E,cAAM,gBAAgB,KAAK,IAAI,IAAI,WAAW,UAAU;AAExD,cAAM,eAAe,YAAY,uBAAsB,aAAa,KAAK,WAAW,YAAY,KAAK,IAAI;AACzG,cAAM,eAAe,kBAAkB,gBACnC,WACA,uBAAsB,aAAa,KAAK,UAAU,eAAe,KAAK;AAE1E,YAAI,WAAW;AACb,cAAI,YAAY;AAChB,cAAI,YAAY;AAChB,cAAI,SAAS,cAAc,IAAI,OAAO,IAAI,IAAI,CAAC;AAAA,QACjD;AAEA,YAAI,YAAY;AAChB,YAAI,YAAY,gBAAgB,YAAY;AAC5C,YAAI,SAAS,cAAc,UAAU,IAAI,IAAI,CAAC;AAE9C,YAAI,YAAY;AAChB,YAAI,YAAY;AAChB,YAAI,SAAS,KAAK,OAAO,IAAI,IAAI,IAAI,GAAG;AAExC,YAAI,YAAY;AAChB,YAAI,SAAS,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC;AAEvC,YAAI,QAAA;AAEJ,aAAK,SAAS;AACd,aAAK,cAAc;AAAA,MACrB;AAAA,MACA,MAAiB,OAAY,KAAU,SAAc;AACnD,cAAM,UAAU,OAAO;AACvB,cAAM,SAAS,OAAO,WAAW,KAAK,OAAO,UAAU,KAAK,OAAO,WAAW;AAC9E,YAAI,YAAY,iBAAiB,QAAQ;AACvC,iCAAsB,mBAAmB,WAAW,MAAM,MAAM;AAChE,iBAAO;AAAA,QACT;AACA,YAAI,YAAY,eAAe,QAAQ;AACrC,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAAA,MACA,iBAAiB;AACf,YAAI,OAAO,aAAa,mBAAmB,YAAY;AACrD,cAAI;AACF,mBAAO,aAAa,eAAA;AAAA,UACtB,QAAQ;AAAA,UAAC;AAAA,QACX;AACA,eAAO,aAAa;AAAA,MACtB;AAAA,IAAA;AAGF,kBAAc,WAAW,MAAM;AAC7B,6BAAsB,mBAAmB,MAAM,MAAM;AAAA,IACvD;AAEA,kBAAc,gBAAgB,CAAC,OAAkC,iBAAiC;AAChG,YAAM,kBAAkB,OAAO,UAAU,WAAW,QAAQ;AAC5D,YAAM,oBAAoB,OAAO,iBAAiB,WAAW,eAAe;AAC5E,oBAAc,QAAQ;AACtB,oBAAc,kBAAkB,qBAAqB;AAAA,IACvD;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,OAAe,mBAAmB,OAA0C;AAC1E,QAAI,CAAC,OAAO;AACV,aAAO;AAAA,IACT;AACA,QAAI;AACF,aAAO,OAAO,KAAK;AAAA,IACrB,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,OAAe,iBAAiB,QAA4B,QAAqB;AAC/E,UAAM,OAAO,QAAQ,SAAS,QAAQ,QAAQ,OAAO,SAAS,OAAO,cAAc;AACnF,WAAO,UAAU,IAAI;AAAA,EACvB;AAAA,EAEA,OAAe,4BAA4B,QAAa,OAAqB;AAC3E,QAAI,CAAC,UAAU,OAAO,UAAU,UAAU;AACxC;AAAA,IACF;AAEA,QAAI;AACF,YAAM,SAAS,OAAO,SAAS;AAC/B,UAAI,CAAC,OAAO,SAAS;AACnB,eAAO,UAAU,EAAE,QAAQ,CAAC,KAAK,EAAA;AACjC,+BAAsB,SAAS,wCAAwC,OAAO,EAAE,YAAY,OAAO,MAAM;AACzG;AAAA,MACF;AAEA,YAAM,UAAU,OAAO;AACvB,YAAM,EAAE,WAAW;AAEnB,UAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,YAAI,CAAC,OAAO,SAAS,KAAK,GAAG;AAC3B,kBAAQ,SAAS,CAAC,GAAG,QAAQ,KAAK;AAClC,iCAAsB,SAAS,mCAAmC,OAAO,EAAE,YAAY,OAAO,MAAM,QAAQ,OAAO,QAAQ,OAAA,CAAQ;AAAA,QACrI;AACA;AAAA,MACF;AAEA,UAAI,UAAU,OAAO,WAAW,UAAU;AACxC,YAAI,EAAE,SAAS,SAAS;AACtB,kBAAQ,SAAS,EAAE,GAAG,QAAQ,CAAC,KAAK,GAAG,MAAA;AACvC,iCAAsB,SAAS,iCAAiC,OAAO,EAAE,YAAY,OAAO,MAAM,QAAQ,OAAO,QAAQ,OAAA,CAAQ;AAAA,QACnI;AACA;AAAA,MACF;AAEA,cAAQ,SAAS,CAAC,KAAK;AACvB,6BAAsB,SAAS,wCAAwC,OAAO,EAAE,YAAY,OAAO,MAAM,QAAQ;AAAA,IACnH,SAAS,OAAO;AACd,cAAQ,KAAK,+CAA+C,KAAK;AAAA,IACnE;AAAA,EACF;AAAA,EAEA,OAAe,cAAc,MAAW,QAAa,QAAkC;AACrF,SAAK,sBAAsB,KAAK,uBAAuB,CAAA;AACvD,UAAM,OAAO,KAAK,oBAAoB,OAAO,UAAU,KAAK,EAAE,UAAU,GAAC;AACzE,UAAM,WAAW,KAAK;AAEtB,QAAI,EAAE,cAAc,UAAW,UAAS,WAAW,OAAO;AAC1D,QAAI,EAAE,WAAW,UAAW,UAAS,QAAQ,OAAO;AACpD,QAAI,EAAE,UAAU,UAAW,UAAS,OAAO,OAAO;AAClD,QAAI,EAAE,iBAAiB,UAAW,UAAS,cAAc,OAAO;AAChE,QAAI,EAAE,YAAY,UAAW,UAAS,SAAS,OAAO;AACtD,QAAI,EAAE,aAAa,UAAW,UAAS,UAAU,OAAO,UAAU,EAAE,GAAG,OAAO,QAAA,IAAY;AAC1F,QAAI,EAAE,YAAY,UAAW,UAAS,SAAS,OAAO,SAAS,SAAS,CAAC,GAAG,OAAO,QAAQ,MAAM,IAAI;AACrG,QAAI,EAAE,eAAe,UAAW,UAAS,YAAY,OAAO;AAC5D,QAAI,EAAE,mBAAmB,UAAW,UAAS,gBAAgB,OAAO;AAEpE,WAAO,iBAAiB,uBAAsB,iBAAiB,QAAQ,MAAM;AAC7E,WAAO,SAAS;AAChB,WAAO,cAAc,uBAAsB;AAE3C,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,UAAU,uBAAsB,oBAAoB,MAAM,QAAQ,MAAM;AAC9E,WAAK,UAAU;AACf,UAAI,CAAC,KAAK,QAAS,MAAK,UAAU,CAAA;AAClC,YAAM,MAAM,KAAK,QAAQ,QAAQ,MAAM;AACvC,UAAI,OAAO,EAAG,MAAK,QAAQ,OAAO,MAAM,GAAG,GAAG,OAAO;AAAA,UAChD,MAAK,QAAQ,KAAK,OAAO;AAAA,IAChC;AAEA,WAAO,WAAW,WAAW;AAC3B,6BAAsB,mBAAmB,MAAM,MAAM;AACrD,aAAO;AAAA,IACT;AAEA,WAAO,QAAQ,SAAS,OAAY,KAAU,SAAc;AAC1D,YAAM,UAAU,OAAO;AACvB,YAAM,SAAS,YAAY,kBAAkB,OAAO,WAAW,KAAK,OAAO,UAAU,KAAK,OAAO,WAAW;AAC5G,UAAI,QAAQ;AACV,+BAAsB,mBAAmB,WAAW,MAAM,MAAM;AAChE,eAAO;AAAA,MACT;AACA,UAAI,OAAO,KAAK,SAAS,UAAU,YAAY;AAC7C,eAAO,KAAK,SAAS,MAAM,KAAK,MAAM,OAAO,KAAK,WAAW,IAAI;AAAA,MACnE;AACA,aAAO;AAAA,IACT;AAEA,SAAK,oBAAoB,OAAO,UAAU,IAAI;AAAA,EAChD;AAAA,EAEA,OAAe,cAAc,MAAW,QAAyB,QAAkC;AACjG,UAAM,OAAO,KAAK,sBAAsB,OAAO,UAAU;AACzD,QAAI,CAAC,KAAM;AAEX,UAAM,WAAW,KAAK,YAAY,CAAA;AAElC,QAAI,QAAQ;AACV,UAAI,cAAc,UAAU;AAC1B,eAAO,WAAW,SAAS;AAAA,MAC7B,OAAO;AACL,eAAO,OAAO;AAAA,MAChB;AAEA,UAAI,WAAW,UAAU;AACvB,eAAO,QAAQ,SAAS;AAAA,MAC1B,OAAO;AACL,eAAO,OAAO;AAAA,MAChB;AAEA,UAAI,UAAU,UAAU;AACtB,eAAO,OAAO,SAAS;AAAA,MACzB,OAAO;AACL,eAAO,OAAO;AAAA,MAChB;AAEA,UAAI,iBAAiB,UAAU;AAC7B,YAAI,SAAS,aAAa;AACxB,iBAAO,cAAc,SAAS;AAAA,QAChC,OAAO;AACL,iBAAO,OAAO;AAAA,QAChB;AAAA,MACF;AAEA,UAAI,eAAe,UAAU;AAC3B,eAAO,YAAY,SAAS;AAAA,MAC9B,OAAO;AACL,eAAO,OAAO;AAAA,MAChB;AAEA,UAAI,mBAAmB,UAAU;AAC/B,eAAO,gBAAgB,SAAS;AAAA,MAClC,OAAO;AACL,eAAO,OAAO;AAAA,MAChB;AAEA,UAAI,aAAa,UAAU;AACzB,YAAI,SAAS,YAAY,QAAW;AAClC,iBAAO,OAAO;AAAA,QAChB,OAAO;AACL,iBAAO,UAAU,EAAE,GAAG,SAAS,QAAA;AAC/B,cAAI,SAAS,WAAW,QAAW;AACjC,mBAAO,QAAQ,SAAS,CAAC,GAAG,SAAS,MAAM;AAAA,UAC7C;AAAA,QACF;AAAA,MACF,WAAW,OAAO,WAAW,YAAY,OAAO,SAAS;AACvD,eAAO,OAAO,QAAQ;AAAA,MACxB;AAEA,UAAI,YAAY,UAAU;AACxB,YAAI,SAAS,WAAW,QAAW;AACjC,iBAAO,OAAO;AAAA,QAChB,OAAO;AACL,iBAAO,SAAS,SAAS;AAAA,QAC3B;AAAA,MACF,OAAO;AACL,eAAO,OAAO;AAAA,MAChB;AAEA,aAAO,OAAO;AACd,aAAO,OAAO;AACd,aAAO,OAAO;AACd,aAAO,OAAO;AAAA,IAChB;AAEA,QAAI,KAAK,SAAS;AAChB,YAAM,MAAM,KAAK,SAAS,QAAQ,KAAK,OAAO,KAAK;AACnD,UAAI,OAAO,EAAG,MAAK,QAAQ,OAAO,KAAK,CAAC;AACxC,aAAO,KAAK;AAAA,IACd;AAEA,WAAO,KAAK,oBAAoB,OAAO,UAAU;AACjD,QAAI,KAAK,uBAAuB,OAAO,KAAK,KAAK,mBAAmB,EAAE,WAAW,GAAG;AAClF,aAAO,KAAK;AAAA,IACd;AACA,2BAAsB,aAAa,IAAI;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,aAA4B;AACvC,YAAQ,IAAI,0CAA0C;AAGtD,SAAK,oBAAA;AAGL,UAAM,KAAK;AAEX,YAAQ,IAAI,mDAAmD;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,MAAM,UAAe,UAAqB;AAC/C,UAAM,UAAU,KAAK,eAAe,OAAO,OAAK,EAAE,aAAa,SAAS,IAAI;AAC5E,QAAI,CAAC,QAAQ,OAAQ;AAErB,UAAM,iBAAiB,SAAS,UAAU;AAC1C,aAAS,UAAU,gBAAgB,WAAW;AAC5C,sBAAgB,MAAM,MAAM,SAAS;AACrC,UAAI,CAAC,KAAK,iBAAkB,MAAK,mBAAmB;AACpD,UAAI,OAAO,KAAK,sBAAsB,aAAa;AACjD,aAAK,oBAAoB,KAAK,SAAS,KAAK,aAAa,SAAS;AAAA,MACpE;AACA,UAAI,KAAK,kBAAkB;AACzB,gBAAQ,QAAQ,CAAA,QAAO,uBAAsB,cAAc,MAAM,GAAG,CAAC;AACrE,+BAAsB,gBAAgB,IAAI;AAAA,MAC5C,OAAO;AACL,+BAAsB,aAAa,IAAI;AAAA,MACzC;AAAA,IACF;AAEA,UAAM,eAAe,SAAS,UAAU;AACxC,aAAS,UAAU,sBAAsB,SAAS,QAAa,YAAoB;AACjF,UAAI,CAAC,uBAAsB,qBAAqB;AAC9C,eAAO,eAAe,aAAa,KAAK,MAAM,QAAQ,UAAU,IAAI;AAAA,MACtE;AAEA,UAAI,UAAU,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAA;AACvD,YAAM,QAAQ,cAAc,KAAK,MAAM,QAAQ,OAAO;AACtD,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,kBAAU;AAAA,MACZ,WAAW,CAAC,MAAM,QAAQ,OAAO,GAAG;AAClC,kBAAU,CAAA;AAAA,MACZ;AAEA,YAAM,eAAoB;AAAA,QACxB,SAAS,KAAK,mBAAmB,gCAAgC;AAAA,QACjE,UAAU,MAAM;AACd,cAAI;AACF,gBAAI,KAAK,kBAAkB;AACzB,sBAAQ,QAAQ,CAAA,QAAO,uBAAsB,eAAe,MAAM,GAAG,CAAC;AACtE,mBAAK,mBAAmB;AACxB,qCAAsB,aAAa,IAAI;AAAA,YACzC,OAAO;AACL,sBAAQ,QAAQ,CAAA,QAAO,uBAAsB,cAAc,MAAM,GAAG,CAAC;AACrE,mBAAK,mBAAmB;AACxB,qCAAsB,gBAAgB,IAAI;AAAA,YAC5C;AACA,mCAAsB,YAAY,MAAM,CAAC,CAAC,KAAK,gBAAgB;AAC/D,iBAAK,iBAAiB,MAAM,IAAI;AAAA,UAClC,SAAS,OAAO;AACd,oBAAQ,KAAK,gCAAgC,KAAK;AAAA,UACpD;AAAA,QACF;AAAA,MAAA;AAEF,mBAAa,0BAA0B;AAEvC,YAAM,cAAc,MAAM,QAAQ,OAAO,IAAI,QAAQ,MAAA,IAAU,CAAA;AAC/D,YAAM,WAAW,YAAY,OAAO,CAAC,QAAa,CAAC,KAAK,uBAAuB;AAE/E,UAAI,CAAC,MAAM,QAAQ,OAAO,GAAG;AAC3B,kBAAU,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAA;AAAA,MACrD;AAEA,cAAQ,SAAS;AACjB,cAAQ,KAAK,YAAY;AAEzB,UAAI,SAAS,QAAQ;AACnB,YAAI,SAAS,CAAC,MAAM,MAAM;AACxB,kBAAQ,KAAK,IAAI;AAAA,QACnB;AACA,gBAAQ,KAAK,GAAG,QAAQ;AAAA,MAC1B;AAEA,UAAI,MAAM,QAAQ,UAAU,KAAK,eAAe,SAAS;AACvD,mBAAW,SAAS;AACpB,mBAAW,KAAK,GAAG,OAAO;AAAA,MAC5B;AAEA,aAAO;AAAA,IACT;AAEA,UAAM,oBAAoB,SAAS,UAAU;AAC7C,aAAS,UAAU,YAAY,WAAW;AACxC,YAAM,OAAO,oBAAoB,kBAAkB,MAAM,MAAM,SAAS,IAAI,CAAA;AAC5E,UAAI;AACF,cAAM,UAAU,CAAC,CAAC,KAAK;AACvB,aAAK,yBAAyB;AAC9B,aAAK,iBAAiB;AACtB,aAAK,aAAa,KAAK,cAAc,CAAA;AACrC,YAAI,SAAS;AACX,eAAK,WAAW,uBAAsB,aAAa,IAAI;AACvD,eAAK,WAAW,uBAAsB,oBAAoB,IAAI;AAAA,QAChE,WAAW,KAAK,YAAY;AAC1B,iBAAO,KAAK,WAAW,uBAAsB,aAAa;AAC1D,iBAAO,KAAK,WAAW,uBAAsB,oBAAoB;AAAA,QACnE;AAEA,YAAI,KAAK,uBAAuB,MAAM,QAAQ,KAAK,OAAO,GAAG;AAC3D,gBAAM,oBAAoB,KAAK,QAAQ,KAAK,CAAC,MAAW,GAAG,WAAW;AACtE,cAAI,mBAAmB;AACrB,kBAAM,mBAA0B,CAAA;AAEhC,uBAAW,UAAU,KAAK,SAAS;AACjC,kBAAI,CAAC,UAAU,OAAO,eAAe,OAAO,cAAc,OAAO;AAC/D;AAAA,cACF;AAEA,kBAAI,OAAO,OAAO,mBAAmB,YAAY;AAC/C,oBAAI;AACF,mCAAiB,KAAK,OAAO,gBAAgB;AAC7C;AAAA,gBACF,QAAQ;AAAA,gBAAC;AAAA,cACX;AAEA,+BAAiB,KAAK,OAAO,SAAS,IAAI;AAAA,YAC5C;AAEA,iBAAK,iBAAiB;AAAA,UACxB;AAAA,QACF;AAAA,MACF,QAAQ;AAAA,MAAC;AACT,aAAO;AAAA,IACT;AAEA,UAAM,oBAAoB,SAAS,UAAU;AAC7C,aAAS,UAAU,YAAY,SAAS,MAAW;AACjD,UAAI,mBAAmB;AACrB,0BAAkB,KAAK,MAAM,IAAI;AAAA,MACnC;AACA,UAAI;AACF,YAAI,OAAO,KAAK,qBAAqB,kBAAkB,mBAAmB;AAC1E,cAAM,eAAe,uBAAsB,qBAAqB,MAAM,IAAI;AAE1E,YAAI,cAAc;AAChB,cAAI,CAAC,KAAK,kBAAkB;AAC1B,iBAAK,mBAAmB;AACxB,oBAAQ,QAAQ,CAAC,QAAQ,uBAAsB,cAAc,MAAM,GAAG,CAAC;AAAA,UACzE;AACA,iCAAsB,gBAAgB,IAAI;AAAA,QAC5C,WAAW,KAAK,kBAAkB;AAChC,kBAAQ,QAAQ,CAAC,QAAQ,uBAAsB,eAAe,MAAM,GAAG,CAAC;AACxE,eAAK,mBAAmB;AACxB,iCAAsB,aAAa,IAAI;AAAA,QACzC,OAAO;AACL,kBAAQ,QAAQ,CAAC,QAAQ,uBAAsB,eAAe,MAAM,GAAG,CAAC;AACxE,iCAAsB,aAAa,IAAI;AAAA,QACzC;AACA,+BAAsB,YAAY,MAAM,CAAC,CAAC,KAAK,gBAAgB;AAAA,MACjE,QAAQ;AAAA,MAAC;AAAA,IACX;AAEA,UAAM,sBAAsB,SAAS,UAAU;AAC/C,aAAS,UAAU,cAAc,SAAS,OAAY,KAAU;AAC9D,YAAM,UAAU,QAAQ,KAAK,CAAC,QAAQ,uBAAsB,wBAAwB,MAAM,OAAO,KAAK,GAAG,CAAC;AAC1G,UAAI,SAAS;AACX,eAAO;AAAA,MACT;AACA,aAAO,sBAAsB,oBAAoB,KAAK,MAAM,OAAO,GAAG,IAAI;AAAA,IAC5E;AAEA,YAAQ,IAAI,wCAAwC,SAAS,IAAI,EAAE;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,kBAAkB,MAAW,QAAkC;AAC5E,QAAI,KAAK,sBAAsB,OAAO,UAAU,GAAG;AACjD;AAAA,IACF;AAEA,UAAM,SAAS,KAAK,SAAS,KAAK,CAAC,MAAW,EAAE,SAAS,OAAO,UAAU;AAC1E,QAAI,CAAC,QAAQ;AACX,cAAQ,KAAK,yCAAyC,OAAO,UAAU,QAAQ,OAAO,QAAQ,EAAE;AAChG;AAAA,IACF;AAEA,SAAK,mBAAmB;AACxB,SAAK,sBAAsB,KAAK,uBAAuB,CAAA;AACvD,SAAK,oBAAoB,OAAO,UAAU,IAAI,KAAK,oBAAoB,OAAO,UAAU,KAAK,EAAE,UAAU,CAAA,EAAC;AAE1G,2BAAsB,SAAS,oBAAoB;AAAA,MACjD,UAAU,MAAM;AAAA,MAChB,YAAY,QAAQ;AAAA,MACpB,cAAc,QAAQ;AAAA,MACtB,SAAS,QAAQ,SAAS;AAAA,IAAA,CAC3B;AAED,SAAK,cAAc,MAAM,QAAQ,MAAM;AACvC,SAAK,gBAAgB,IAAI;AACzB,SAAK,YAAY,MAAM,IAAI;AAAA,EAC7B;AAAA;AAAA,EAGA,OAAe,cAAc,MAAW,QAAkC;AACxE,SAAK,kBAAkB,MAAM,MAAM;AACnC,SAAK,YAAY,MAAM,IAAI;AAAA,EAC7B;AAAA;AAAA,EAGA,OAAe,eAAe,MAAW,QAAkC;AACzE,QAAI,CAAC,KAAK,uBAAuB,CAAC,KAAK,oBAAoB,OAAO,UAAU,GAAG;AAC7E;AAAA,IACF;AACA,UAAM,SAAS,KAAK,SAAS,KAAK,CAAC,MAAW,EAAE,SAAS,OAAO,UAAU;AAC1E,2BAAsB,cAAc,MAAM,QAAQ,MAAM;AACxD,QAAI,CAAC,KAAK,qBAAqB;AAC7B,WAAK,mBAAmB;AAAA,IAC1B;AACA,2BAAsB,aAAa,IAAI;AACvC,SAAK,YAAY,MAAM,CAAC,CAAC,KAAK,gBAAgB;AAAA,EAChD;AAAA,EAEA,OAAe,mBAAmB,MAAW,QAAkC;AAC7E,UAAM,SAAS,KAAK,SAAS,KAAK,CAAC,MAAW,EAAE,SAAS,OAAO,UAAU;AAC1E,QAAI,CAAC,OAAQ;AAEb,UAAM,eAAe,OAAO;AAE5B,SAAK,kBAAkB;AAAA,MACrB,OAAO;AAAA,MACP,CAAC,SAAS;AACR,YAAI;AACJ,YAAI,QAAQ,OAAO,KAAK,OAAO,UAAU;AACvC,qBAAW,KAAK;AAAA,QAClB,WAAW,QAAQ,OAAO,KAAK,SAAS,UAAU;AAChD,qBAAW,KAAK;AAAA,QAClB,WAAW,QAAQ,OAAO,KAAK,aAAa,UAAU;AACpD,qBAAW,KAAK;AAAA,QAClB;AAEA,+BAAsB,SAAS,yBAAyB;AAAA,UACtD,UAAU,MAAM;AAAA,UAChB,YAAY,OAAO;AAAA,UACnB;AAAA,UACA,eAAe;AAAA,UACf,gBAAgB,OAAO,SAAS;AAAA,QAAA,CACjC;AAED,YAAI,OAAO,aAAa,UAAU;AAChC,cAAI;AACF,kBAAM,kBAAkB,uBAAsB,wBAAwB,QAAQ,QAAQ;AACtF,mBAAO,QAAQ;AACf,mCAAsB,4BAA4B,QAAQ,eAAe;AACzE,mCAAsB,SAAS,wBAAwB;AAAA,cACrD,UAAU,MAAM;AAAA,cAChB,YAAY,OAAO;AAAA,cACnB,UAAU;AAAA,cACV,eAAe,OAAO,SAAS;AAAA,YAAA,CAChC;AAAA,UACH,SAAS,OAAO;AACd,oBAAQ,KAAK,gDAAgD,KAAK;AAAA,UACpE;AAAA,QACF;AAEA,cAAM,OAAO,KAAK,sBAAsB,OAAO,UAAU;AACzD,YAAI,MAAM,SAAS;AACjB,gBAAM,eAAe,uBAAsB;AAAA,YACxC,QAAQ,OAAO,KAAK,UAAU,YAAY,KAAK,SAC/C,QAAQ,OAAO,KAAK,SAAS,YAAY,KAAK,QAC9C,QAAQ,OAAO,KAAK,aAAa,YAAY,KAAK,YACnD,OAAO;AAAA,UAAA;AAET,eAAK,QAAQ,cAAc,OAAO,OAAO,YAAY;AACrD,iCAAsB,SAAS,2BAA2B;AAAA,YACxD,UAAU,MAAM;AAAA,YAChB,YAAY,OAAO;AAAA,YACnB;AAAA,YACA,aAAa,OAAO;AAAA,UAAA,CACrB;AAAA,QACH;AACA,aAAK,iBAAiB,MAAM,IAAI;AAAA,MAClC;AAAA,MACA;AAAA,QACE,OAAO,UAAU,OAAO,QAAQ;AAAA,QAChC,aAAa;AAAA,QACb;AAAA,MAAA;AAAA,IACF;AAAA,EAEJ;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,wBAAwB,MAAW,OAAY,KAAU,QAAqC;AAC3G,QAAI,CAAC,KAAK,oBAAoB,CAAC,KAAK,uBAAuB,CAAC,KAAK,oBAAoB,OAAO,UAAU,EAAG,QAAO;AAEhH,UAAM,SAAS,KAAK,SAAS,KAAK,CAAC,MAAW,EAAE,SAAS,OAAO,UAAU;AAC1E,QAAI,CAAC,OAAQ,QAAO;AAEpB,QAAI;AACF,YAAM,SAAU,OAAO,WAAW,KAAO,OAAO,UAAU,KAAM,EAAE,aAAa,SAAS,CAAA;AACxF,UAAI,CAAC,OAAQ,QAAO;AAEpB,YAAM,IAAI,QAAQ,UAAU;AAC5B,YAAM,IAAK,OAAe,WAAW,sBAAsB;AAC3D,UAAI,KAAK,KAAM,QAAO;AAEtB,YAAM,UAAU,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC,KAAK;AAC5D,YAAM,UAAU,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI;AAC7C,UAAI,WAAW,SAAS;AACtB,aAAK,mBAAmB,MAAM,MAAM;AACpC,eAAO;AAAA,MACT;AAAA,IACF,QAAQ;AAAA,IAAC;AACT,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,oBAAoB,MAAW,KAAgB;AAC5D,QAAI,CAAC,KAAK,iBAAkB;AAAA,EAG9B;AAAA,EAEA,OAAe,gBAAgB,MAAiB;AAC9C,QAAI;AACF,UAAI,OAAO,KAAK,sBAAsB,aAAa;AACjD,aAAK,oBAAoB,KAAK,SAAS,KAAK,aAAa,SAAS;AAAA,MACpE,OAAO;AACL,aAAK,QAAQ,KAAK;AAAA,MACpB;AAAA,IACF,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEA,OAAe,aAAa,MAAiB;AAC3C,QAAI;AACF,UAAI,OAAO,KAAK,sBAAsB,aAAa;AACjD,aAAK,QAAQ,KAAK;AAAA,MACpB;AAAA,IACF,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA;AAAA,EAGA,OAAe,sBAA4B;AAAA,EAAgC;AAAA,EAC3E,OAAe,sBAA4B;AAAA,EAAgC;AAAA,EAC3E,OAAO,2BAAiD;AAAE,WAAO,KAAK;AAAA,EAAgB;AAAA,EAEtF,OAAO,kBAAkB,cAA4B;AACnD,UAAM,SAAS,KAAK,eAAe,KAAK,CAAA,QAAO,IAAI,aAAa,YAAY;AAC5E,QAAI,CAAC,OAAQ;AACb,UAAM,QAAS,OAAe,KAAK;AACnC,QAAI,CAAC,MAAO;AACZ,KAAC,MAAM,UAAU,CAAA,GAAI,QAAQ,CAAC,SAAc;AAC1C,UAAI,KAAK,SAAS,cAAc;AAC9B,YAAI;AACF,eAAK,cAAc,MAAM,MAAM;AAC/B,eAAK,iBAAiB,MAAM,IAAI;AAAA,QAClC,SAAS,OAAO;AACd,kBAAQ,KAAK,wCAAwC,MAAM,KAAK;AAAA,QAClE;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,OAAe,QAAQ,KAAa,eAAe,OAAoB;AACrE,QAAI;AACF,UAAI,cAAc;AAChB,cAAM,cAAc,eAAe,QAAQ,GAAG;AAC9C,YAAI,YAAa,QAAO,IAAI,IAAI,KAAK,MAAM,WAAW,CAAC;AAAA,MACzD;AACA,YAAM,YAAY,aAAa,QAAQ,GAAG;AAC1C,UAAI,UAAW,QAAO,IAAI,IAAI,KAAK,MAAM,SAAS,CAAC;AACnD,UAAI,CAAC,cAAc;AACjB,cAAM,cAAc,eAAe,QAAQ,GAAG;AAC9C,YAAI,YAAa,QAAO,IAAI,IAAI,KAAK,MAAM,WAAW,CAAC;AAAA,MACzD;AAAA,IACF,QAAQ;AAAA,IAAC;AACT,+BAAW,IAAA;AAAA,EACb;AAAA,EAEA,OAAe,WAAW,KAAa,OAA0B;AAC/D,QAAI;AACF,YAAM,OAAO,KAAK,UAAU,MAAM,KAAK,KAAK,CAAC;AAC7C,qBAAe,QAAQ,KAAK,IAAI;AAChC,mBAAa,QAAQ,KAAK,IAAI;AAAA,IAChC,QAAQ;AAAA,IAAC;AAAA,EACX;AAAA,EAEA,OAAe,aAAa,KAA+B,MAAc,UAAkB,UAAmB,OAAe;AAC3H,QAAI,CAAC,KAAM,QAAO;AAClB,QAAI,IAAI,YAAY,IAAI,EAAE,SAAS,UAAU;AAC3C,aAAO;AAAA,IACT;AACA,UAAM,WAAW;AAEjB,QAAI,SAAS;AACX,UAAIK,UAAS,KAAK;AAClB,aAAOA,UAAS,GAAG;AACjB,cAAM,YAAY,WAAW,KAAK,MAAM,KAAK,IAAI,GAAG,KAAK,SAASA,OAAM,CAAC;AACzE,YAAI,IAAI,YAAY,SAAS,EAAE,SAAS,UAAU;AAChD,iBAAO;AAAA,QACT;AACAA;AAAAA,MACF;AACA,aAAO,KAAK,MAAM,EAAE;AAAA,IACtB;AAEA,QAAI,SAAS,KAAK;AAClB,WAAO,SAAS,GAAG;AACjB,YAAM,YAAY,KAAK,MAAM,GAAG,MAAM,IAAI;AAC1C,UAAI,IAAI,YAAY,SAAS,EAAE,SAAS,UAAU;AAChD,eAAO;AAAA,MACT;AACA;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAn5BE,uBAAwB,iBAAuC;AAAA,EAC7D;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET,GAAG,OAAO,QAAQ,oBAAoB,EAAE;AAAA,IAAQ,CAAC,CAAC,UAAU,WAAW,MACrE,YAAY,IAAI,CAAC,YAAY,WAAW;AAAA,MACtC;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA,OAAO,sBAAsB,QAAQ,CAAC;AAAA,IAAA,EACtC;AAAA,EAAA;AAAA,EAEJ;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AAAA,EAET;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,EAAA;AACT;AAGF,uBAAe,oBAAuC,kBAAkB,YAAA;AACxE,uBAAwB,qBAAqB,CAAC,WAAoB,CAAC,GAAG,EAAE;AACxE,uBAAwB,QAAQ;AAChC,uBAAwB,gBAAgB;AACxC,uBAAwB,uBAAuB;AAC/C,uBAAwB,sBAAsB;AAnFzC,IAAM,wBAAN;ACZP,MAAMC,mBAAiB;AACvB,MAAM,oBAAoB;AAG1B,MAAM,wBAAwC;AAAA,EAC5C,MAAMA;AAAAA,EACN,SAAS;AAAA;AAAA,EAGT,UAAU;AAAA,IACR;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,IAEhB;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,IAEhB;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,EAChB;AAAA;AAAA,EAIF,UAAU;AAAA,IACR;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,MAAM;AACd,YAAI;AACD,gCAA8B,mBAAmB,GAAG,aAAA;AACrD,kBAAQ,IAAI,uCAAuC;AAAA,QACrD,QAAQ;AAAA,QAAC;AAAA,MACX;AAAA,IAAA;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAMF,MAAM,OAAsB;AAC1B,YAAQ,IAAI,GAAGA,gBAAc,KAAK,iBAAiB,mBAAmB;AAEtE,QAAI;AAEF,YAAM,sBAAsB,WAAA;AAC5B,cAAQ,IAAI,GAAGA,gBAAc,6BAA6B;AAAA,IAC5D,SAAS,OAAO;AACd,cAAQ,MAAM,GAAGA,gBAAc,4BAA4B,KAAK;AAAA,IAClE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,sBAAsB,UAAe,UAA8B;AACvE,QAAI;AAEF,4BAAsB,MAAM,UAAU,QAAQ;AAAA,IAEhD,SAAS,OAAO;AACd,cAAQ,MAAM,kDAAkD,KAAK;AAAA,IAEvE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,MAAiB;AAE3B,UAAM,iBAAiBN,MAAI,GAAG,SAAS,gBAAgB,+BAA+B,KAAK;AAE3F,QAAI,kBAAkB,KAAK,MAAM;AAE/B,YAAM,wBAAwB,sBAAsB,yBAAA;AACpD,YAAM,SAAS,sBAAsB,KAAK,OAAK,EAAE,aAAa,KAAK,IAAI;AAEvE,UAAI,QAAQ;AACV,8BAAsB,kBAAkB,OAAO,QAAQ;AACvD,gBAAQ,IAAI,gCAAgC,KAAK,IAAI,EAAE;AAAA,MACzD;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB,YAAuB;AAC1C,YAAQ,IAAI,kCAAkC;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB,YAAuB;AACzC,YAAQ,IAAI,iCAAiC;AAAA,EAC/C;AACF;AAGA,QAAQ,IAAI,GAAGM,gBAAc,sCAAsC;AACnEN,MAAI,kBAAkB,qBAAqB;AAC3C,QAAQ,IAAI,GAAGM,gBAAc,qCAAqC;AC3GlE,MAAM,iBAAiB;AACvB,MAAM,YAAY;AAGlB,MAAM,qBAAqC;AAAA,EACzC,MAAM;AAAA;AAAA,EAGN,UAAU;AAAA,IACR;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,IAEhB;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,IAEhB;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,IAEhB;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,IAEhB;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,IAEhB;AAAA,MACE,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA;AAAA,EAChB;AAAA;AAAA,EAIF,UAAU;AAAA,IACR;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,MAAM;AAEd,gBAAQ,IAAI,+CAA+C;AAAA,MAC7D;AAAA,IAAA;AAAA,IAEF;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,MAAM;AAEd,gBAAQ,IAAI,yDAAyD;AAAA,MACvE;AAAA,IAAA;AAAA,IAEF;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,MAAM;AACd,sBAAc,YAAA,EAAc,gBAAgB,EAAE,OAAO,MAAM,QAAQ,MAAA,CAAO,EACvE,MAAM,MAAM;AAAA,QAEb,CAAC;AAAA,MACL;AAAA,IAAA;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAMF,sBAAsB,UAAe,UAAqB;AACxD,QAAI,SAAS,SAAS,WAAW;AAC/B,cAAQ,IAAI,0CAA0C;AAGtD,oBAAc,aACX,KAAK,MAAM;AACV,gBAAQ,IAAI,yCAAyC;AAAA,MACvD,CAAC,EACA,MAAM,CAAC,QAAQ;AACd,gBAAQ,MAAM,2CAA2C,GAAG;AAAA,MAC9D,CAAC;AAEH,UAAI;AAEF,sBAAc,MAAM,UAAU,QAAQ;AACtC,gBAAQ,IAAI,sDAAsD;AAAA,MACpE,SAAS,KAAK;AAEZ,gBAAQ,MAAM,oFAAoF,GAAG;AAAA,MACvG;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,MAAiB;AAC3B,QAAI,KAAK,SAAS,WAAW;AAC3B,cAAQ,IAAI,mCAAmC,KAAK,EAAE;AAGtD,WAAK,yBAAyB,IAAI;AAAA,IACpC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB,YAAuB;AAE1C,YAAQ,IAAI,sCAAsC;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB,MAAiB;AAEtC,UAAM,oBAAoB,KAAK;AAC/B,SAAK,YAAY,WAAW;AAC1B,cAAQ,IAAI,mCAAmC,KAAK,EAAE;AAEtD,UAAI,mBAAmB;AACrB,0BAAkB,MAAM,MAAM,SAAS;AAAA,MACzC;AAAA,IACF;AAGA,UAAM,gBAAgB,KAAK;AAC3B,SAAK,QAAQ,WAAW;AACtB,YAAM,aAAa,gBAAgB,cAAc,MAAM,MAAM,SAAS,IAAI;AAC1E,cAAQ,IAAI,kCAAkC,KAAK,IAAI,MAAM,WAAW,EAAE;AAC1E,aAAO;AAAA,IACT;AAGA,UAAM,4BAA4B,KAAK;AACvC,SAAK,oBAAoB,SAAS,MAAc,OAAY;AAC1D,cAAQ,IAAI,uCAAuC,MAAM,KAAK;AAG9D,UAAI,KAAK,WAAW,GAAG,GAAG;AACxB,cAAM,cAAc,KAAK,UAAU,CAAC;AACpC,aAAK,mBAAmB,aAAa,KAAK;AAAA,MAC5C;AAEA,UAAI,2BAA2B;AAC7B,kCAA0B,MAAM,MAAM,SAAS;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AACF;AAGA,QAAQ,IAAI,uDAAuD;AACnEN,MAAI,kBAAkB,kBAAkB;AACxC,QAAQ,IAAI,sDAAsD;AAWlE,IAAI;AACD,SAAe,gBAAgB;AAClC,QAAQ;AAAC;"}